import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test07501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07501");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive2.entries = asciiBytesMap6;
        java.io.File file8 = explodedArchive2.root;
        java.io.File file9 = explodedArchive2.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive19.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.io.File file22 = explodedArchive19.root;
        java.util.jar.Manifest manifest23 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive19.new FilteredURLStreamHandler();
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive33.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive37.filtered = true;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive37.manifest = manifest40;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter42 = null;
        org.springframework.boot.loader.archive.Archive archive43 = explodedArchive37.getFilteredArchive(entryRenameFilter42);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive37.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive37.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter47 = null;
        org.springframework.boot.loader.archive.Archive archive48 = explodedArchive37.getFilteredArchive(entryRenameFilter47);
        java.util.jar.Manifest manifest49 = null;
        explodedArchive37.manifest = manifest49;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive37.entries;
        explodedArchive33.entries = asciiBytesMap51;
        explodedArchive19.entries = asciiBytesMap51;
        java.util.jar.Manifest manifest54 = explodedArchive19.getManifest();
        java.io.File file55 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive56.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter60 = null;
        org.springframework.boot.loader.archive.Archive archive61 = explodedArchive56.getFilteredArchive(entryRenameFilter60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        boolean boolean64 = explodedArchive62.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter65 = null;
        org.springframework.boot.loader.archive.Archive archive66 = explodedArchive62.getFilteredArchive(entryRenameFilter65);
        explodedArchive62.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive62.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive62.entries;
        explodedArchive56.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap70);
        boolean boolean73 = explodedArchive72.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive74.getNestedArchives(entryFilter76);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive74.getNestedArchives(entryFilter78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive74.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter81 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList82 = explodedArchive74.getNestedArchives(entryFilter81);
        java.io.File file83 = null;
        java.io.File file84 = null;
        java.io.File file85 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file87 = explodedArchive86.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter88 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList89 = explodedArchive86.getNestedArchives(entryFilter88);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter90 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList91 = explodedArchive86.getNestedArchives(entryFilter90);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap92 = explodedArchive86.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive93 = new org.springframework.boot.loader.archive.ExplodedArchive(file85, asciiBytesMap92);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap94 = explodedArchive93.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive95 = new org.springframework.boot.loader.archive.ExplodedArchive(file84, asciiBytesMap94);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive96 = new org.springframework.boot.loader.archive.ExplodedArchive(file83, asciiBytesMap94);
        explodedArchive74.entries = asciiBytesMap94;
        explodedArchive72.entries = asciiBytesMap94;
        explodedArchive19.entries = asciiBytesMap94;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archive43);
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNotNull(archive48);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNotNull(archive61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(archive66);
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNotNull(archiveList82);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(archiveList89);
        org.junit.Assert.assertNotNull(archiveList91);
        org.junit.Assert.assertNotNull(asciiBytesMap92);
        org.junit.Assert.assertNotNull(asciiBytesMap94);
    }

    @Test
    public void test07502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07502");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getFile();
        int int24 = uRL22.getDefaultPort();
        java.lang.String str25 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        java.lang.String str38 = uRL35.getRef();
        java.lang.String str39 = uRL35.toExternalForm();
        boolean boolean40 = uRL22.sameFile(uRL35);
        java.lang.String str41 = uRL35.getUserInfo();
        java.lang.String str42 = uRL35.getHost();
        java.lang.String str43 = uRL35.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.lang.String str51 = explodedArchive45.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.toExternalForm();
        java.io.File file59 = null;
        java.io.File file60 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive61.getNestedArchives(entryFilter63);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive61.getNestedArchives(entryFilter65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive61.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap67);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap69);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive70.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str73 = uRL72.toExternalForm();
        boolean boolean74 = uRL53.sameFile(uRL72);
        java.lang.String str75 = uRL53.getFile();
        int int76 = uRL53.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection77 = filteredURLStreamHandler12.openConnection(uRL53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100" + "'", str39, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!://:100/hi!" + "'", str54, "hi!://:100/hi!");
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertEquals(uRL72.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str73, "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test07503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07503");
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL26 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL27 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        int int40 = uRL37.getPort();
        java.lang.String str41 = uRL37.getProtocol();
        boolean boolean42 = uRL27.sameFile(uRL37);
        java.lang.String str43 = uRL37.getQuery();
        java.lang.String str44 = uRL37.getProtocol();
        java.lang.String str45 = uRL37.getProtocol();
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertEquals(uRL25.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL27.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
    }

    @Test
    public void test07504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07504");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        java.io.File file3 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive4.new FileEntry();
        java.util.jar.Manifest manifest7 = explodedArchive4.getManifest();
        java.util.jar.Manifest manifest8 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive9.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive9.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive9.manifest = manifest16;
        explodedArchive9.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive9.entries;
        explodedArchive4.entries = asciiBytesMap20;
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
    }

    @Test
    public void test07505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07505");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        java.util.jar.Manifest manifest34 = explodedArchive31.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL23, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL23.getAuthority();
        java.lang.String str39 = uRL23.getRef();
        java.lang.String str40 = uRL23.getProtocol();
        java.lang.String str41 = uRL23.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getPath();
        java.lang.String str53 = uRL51.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive71.getNestedArchives(entryFilter73);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection75 = explodedArchive71.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive71.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL78 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.URL uRL79 = new java.net.URL(uRL65, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        boolean boolean80 = uRL23.sameFile(uRL79);
        java.lang.String str81 = uRL23.getProtocol();
        java.lang.String str82 = uRL23.getRef();
        boolean boolean83 = uRL12.sameFile(uRL23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = uRL12.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ":100" + "'", str38, ":100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNotNull(entryCollection75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertEquals(uRL78.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test07506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07506");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        java.io.File file8 = fileEntry4.file;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test07507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07507");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getAuthority();
        java.lang.String str14 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + ":100" + "'", str13, ":100");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test07508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07508");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL9, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str45 = uRL9.getFile();
        java.lang.String str46 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive48.getNestedArchives(entryFilter50);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive48.getNestedArchives(entryFilter52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive48.entries;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive48.manifest = manifest55;
        boolean boolean57 = explodedArchive48.filtered;
        java.util.jar.Manifest manifest58 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive48.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL(uRL9, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[/:100]:0:32hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str68 = explodedArchive67.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive67.getEntries();
        java.util.jar.Manifest manifest70 = explodedArchive67.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str73 = uRL72.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL72, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.lang.String str80 = uRL79.getAuthority();
        int int81 = uRL79.getDefaultPort();
        java.lang.String str82 = uRL79.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection83 = filteredURLStreamHandler61.openConnection(uRL79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[/:100]:0:32hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNull(manifest70);
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ":100" + "'", str80, ":100");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test07509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07509");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        org.springframework.boot.loader.archive.Archive archive8 = explodedArchive4.getFilteredArchive(entryRenameFilter7);
        java.io.File file9 = explodedArchive4.root;
        java.util.jar.Manifest manifest10 = explodedArchive4.getManifest();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive4.manifest = manifest11;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("/[hi!://:100/hi!://:100/hi!://:100/archive", "[:100]:52", (int) ' ', ":0", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getHost();
        int int28 = uRL25.getPort();
        java.lang.String str29 = uRL25.getQuery();
        java.net.URL uRL31 = new java.net.URL(uRL25, "");
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL(uRL31, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL31.getQuery();
        java.lang.String str50 = uRL31.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = null;
        explodedArchive52.entries = asciiBytesMap54;
        java.util.jar.Manifest manifest56 = null;
        explodedArchive52.manifest = manifest56;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive52.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest59 = explodedArchive52.manifest;
        java.io.File file60 = explodedArchive52.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL(uRL31, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL63 = new java.net.URL(uRL14, "archive://[/hi!://:100]:10hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler61);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Invalid authority field: [");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(archive8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals(uRL14.toString(), "/[hi!://:100/hi!://:100/hi!://:100/archive://[:100]:52:32:0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
    }

    @Test
    public void test07510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07510");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        boolean boolean9 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test07511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07511");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive0.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archiveList16);
    }

    @Test
    public void test07512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07512");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getHost();
        int int40 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test07513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07513");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        explodedArchive0.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getFile();
        int int24 = uRL22.getDefaultPort();
        java.lang.String str25 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        java.lang.String str38 = uRL35.getRef();
        java.lang.String str39 = uRL35.toExternalForm();
        boolean boolean40 = uRL22.sameFile(uRL35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getFile();
        int int56 = uRL54.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str68 = uRL67.getQuery();
        java.lang.String str69 = uRL67.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        java.util.jar.Manifest manifest78 = explodedArchive75.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL(uRL67, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL82 = new java.net.URL(uRL54, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL83 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str84 = uRL83.getRef();
        boolean boolean85 = uRL22.sameFile(uRL83);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection86 = filteredURLStreamHandler12.openConnection(uRL83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100" + "'", str39, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertNull(manifest78);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL83.toString(), "archive://:10:100");
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test07514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07514");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.getFile();
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        java.io.File file13 = fileEntry4.getFile();
        java.lang.Class<?> wildcardClass14 = fileEntry4.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test07515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07515");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07516");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        java.lang.String str18 = uRL16.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getHost();
        int int32 = uRL29.getPort();
        java.lang.String str33 = uRL29.getQuery();
        java.net.URL uRL35 = new java.net.URL(uRL29, "");
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap47);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL35, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive53.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter56 = null;
        org.springframework.boot.loader.archive.Archive archive57 = explodedArchive53.getFilteredArchive(entryRenameFilter56);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL(uRL35, "hi!://:100/://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.io.File file61 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = null;
        explodedArchive62.entries = asciiBytesMap66;
        java.io.File file68 = explodedArchive62.root;
        java.io.File file69 = explodedArchive62.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive70.getNestedArchives(entryFilter72);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive70.getNestedArchives(entryFilter74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive70.entries;
        explodedArchive62.entries = asciiBytesMap76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, asciiBytesMap76);
        java.util.jar.Manifest manifest79 = null;
        explodedArchive78.manifest = manifest79;
        explodedArchive78.filtered = true;
        java.io.File file83 = null;
        explodedArchive78.root = file83;
        java.util.jar.Manifest manifest85 = null;
        explodedArchive78.manifest = manifest85;
        java.util.jar.Manifest manifest87 = explodedArchive78.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler88 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL89 = new java.net.URL(uRL59, "://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        java.net.URL uRL90 = new java.net.URL(uRL16, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNotNull(archive57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertNull(manifest87);
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/hi!://:100/://[hi!://:100/:100]:100/hi!://://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/hi!");
    }

    @Test
    public void test07517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07517");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL12 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test07518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07518");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.lang.String str10 = explodedArchive0.toString();
        explodedArchive0.filtered = true;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive14.new FileEntry();
        java.lang.String str19 = explodedArchive14.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive14.new FileEntry();
        java.util.jar.Manifest manifest21 = null;
        explodedArchive14.manifest = manifest21;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        explodedArchive0.entries = asciiBytesMap25;
        java.io.File file27 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file27);
    }

    @Test
    public void test07519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07519");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getPath();
        java.lang.String str21 = uRL16.getProtocol();
        java.lang.String str22 = uRL16.getAuthority();
        java.net.URL uRL24 = new java.net.URL(uRL16, "/hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        explodedArchive25.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive25.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest35 = null;
        explodedArchive25.manifest = manifest35;
        explodedArchive25.filtered = true;
        boolean boolean39 = uRL24.equals((java.lang.Object) explodedArchive25);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + ":100" + "'", str22, ":100");
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test07520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07520");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive12.manifest = manifest16;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[://[archive://:10archive]:100archive://:10archive]:100", (int) '#', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getHost();
        java.lang.String str21 = uRL19.getQuery();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[://[archive://:10archive]:100archive://:10archive]:100" + "'", str20, "[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test07521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07521");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100", "", "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07522");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive");
        java.net.URL uRL16 = new java.net.URL(uRL14, "[hi!:1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!://:100/hi!://:100/[hi!:1]");
    }

    @Test
    public void test07523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07523");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getHost();
        int int29 = uRL26.getPort();
        java.lang.String str30 = uRL26.getQuery();
        java.net.URL uRL32 = new java.net.URL(uRL26, "");
        java.lang.String str33 = uRL32.getPath();
        int int34 = uRL32.getDefaultPort();
        java.lang.String str35 = uRL32.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL60 = new java.net.URL(uRL46, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL61 = new java.net.URL(uRL32, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL62 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str63 = uRL9.getRef();
        java.net.URLStreamHandler uRLStreamHandler65 = null;
        java.net.URL uRL66 = new java.net.URL(uRL9, "[/hi!://:100/archive]", uRLStreamHandler65);
        java.lang.String str67 = uRL66.getRef();
        java.net.Proxy proxy68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection69 = uRL66.openConnection(proxy68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test07524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07524");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        java.io.File file9 = null;
        fileEntry7.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry7.getName();
        java.io.File file13 = null;
        fileEntry7.file = file13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry7.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test07525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07525");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        java.net.URL uRL29 = new java.net.URL(uRL9, "");
        int int30 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test07526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07526");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        java.io.File file28 = explodedArchive25.root;
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap39);
        explodedArchive40.filtered = true;
        java.io.File file43 = null;
        explodedArchive40.root = file43;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive40.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest47 = null;
        explodedArchive40.manifest = manifest47;
        java.io.File file49 = explodedArchive40.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive40.entries;
        explodedArchive25.entries = asciiBytesMap50;
        java.util.jar.Manifest manifest52 = explodedArchive25.manifest;
        java.io.File file53 = null;
        explodedArchive25.root = file53;
        explodedArchive25.filtered = false;
        boolean boolean57 = explodedArchive25.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test07527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07527");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        explodedArchive44.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive44.getNestedArchives(entryFilter50);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL(uRL41, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL54 = new java.net.URL("[:100]", "[hi!://:100/:100]:0", (int) ' ', "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/archive" + "'", str42, "/archive");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL54.toString(), "[:100]://[hi!://:100/:100]:0:32hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test07528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07528");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        java.io.File file14 = null;
        fileEntry12.file = file14;
        java.io.File file16 = fileEntry12.file;
        java.io.File file17 = null;
        fileEntry12.file = file17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.getName();
        java.io.File file20 = fileEntry12.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test07529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07529");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:100", "hi!://:100/hi!://:100/hi!://:100/hi!", (int) (short) 0, "[archive://:10archive]:100", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [://[archive://:10archive]:100archive://:10archive]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07530");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean13 = explodedArchive0.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL14 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test07531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07531");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "", "hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://hi!:1hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07532");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive");
        java.lang.String str15 = uRL14.getRef();
        int int16 = uRL14.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.getQuery();
        java.lang.String str33 = uRL31.getHost();
        int int34 = uRL31.getPort();
        java.lang.String str35 = uRL31.getQuery();
        java.net.URL uRL37 = new java.net.URL(uRL31, "");
        java.io.File file39 = null;
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap50);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL55 = new java.net.URL(":100", "archive://:10archive", (int) (short) -1, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL56 = new java.net.URL(uRL14, "[hi!://:100/hi!:1]", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getQuery();
        java.lang.String str68 = uRL66.getRef();
        int int69 = uRL66.getPort();
        java.lang.String str70 = uRL66.getProtocol();
        java.lang.String str71 = uRL66.getPath();
        java.lang.String str72 = uRL66.getAuthority();
        java.lang.String str73 = uRL66.getRef();
        int int74 = uRL66.getPort();
        java.lang.String str75 = uRL66.getPath();
        int int76 = uRL66.getPort();
        java.lang.String str77 = uRL66.getFile();
        boolean boolean78 = uRL14.equals((java.lang.Object) str77);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL55.toString(), ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!://:100/hi!://:100/[hi!://:100/hi!:1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ":100" + "'", str72, ":100");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07533");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        java.io.File file14 = null;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive0.manifest = manifest16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest13);
    }

    @Test
    public void test07534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07534");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL(":100", "[hi!://:100/hi!]", (int) (short) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL35 = new java.net.URL(uRL33, "hi!:1");
        java.lang.String str36 = uRL35.getAuthority();
        java.net.Proxy proxy37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection38 = uRL35.openConnection(proxy37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "/hi!://:100://archive:1/archive");
        org.junit.Assert.assertEquals(uRL33.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL35.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!://:100/hi!]:100" + "'", str36, "[hi!://:100/hi!]:100");
    }

    @Test
    public void test07535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07535");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test07536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07536");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        java.io.File file12 = null;
        explodedArchive10.root = file12;
        java.util.jar.Manifest manifest14 = explodedArchive10.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        explodedArchive15.filtered = false;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive15.manifest = manifest23;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive26.getNestedArchives(entryFilter33);
        java.io.File file35 = null;
        java.io.File file36 = null;
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap46);
        explodedArchive26.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive50.entries;
        explodedArchive15.entries = asciiBytesMap51;
        java.io.File file53 = explodedArchive15.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive15.entries;
        explodedArchive10.entries = asciiBytesMap54;
        java.io.File file56 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive10.buildEntries(file56, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
    }

    @Test
    public void test07537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07537");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry4.name;
        java.io.File file16 = null;
        fileEntry4.file = file16;
        java.lang.Class<?> wildcardClass18 = fileEntry4.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test07538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07538");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.io.File file9 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        boolean boolean12 = explodedArchive0.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL13 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07539");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test07540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07540");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        java.util.jar.Manifest manifest14 = null;
        explodedArchive10.manifest = manifest14;
        explodedArchive10.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive10.entries;
        explodedArchive0.entries = asciiBytesMap18;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
    }

    @Test
    public void test07541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07541");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.lang.String str9 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry10.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry10.name = asciiBytes14;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test07542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07542");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter18 = null;
        org.springframework.boot.loader.archive.Archive archive19 = explodedArchive12.getFilteredArchive(entryRenameFilter18);
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive21.getNestedArchives(entryFilter28);
        java.io.File file30 = null;
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap41);
        explodedArchive21.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap41);
        explodedArchive12.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap41);
        java.util.jar.Manifest manifest48 = explodedArchive47.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive47.new FilteredURLStreamHandler();
        java.lang.Class<?> wildcardClass50 = explodedArchive47.getClass();
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archive19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test07543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07543");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        java.io.File file10 = null;
        fileEntry4.file = file10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test07544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07544");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        java.util.jar.Manifest manifest8 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        java.util.jar.Manifest manifest10 = explodedArchive1.getManifest();
        java.io.File file11 = null;
        explodedArchive1.root = file11;
        boolean boolean13 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive1.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
    }

    @Test
    public void test07545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07545");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getProtocol();
        int int31 = uRL9.getPort();
        java.lang.String str32 = uRL9.getUserInfo();
        java.lang.String str33 = uRL9.getHost();
        java.net.URL uRL35 = new java.net.URL(uRL9, "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        java.lang.String str36 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test07546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07546");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!");
        java.lang.String str15 = uRL14.getRef();
        java.lang.String str16 = uRL14.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL14, "/hi!");
        java.net.Proxy proxy19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection20 = uRL14.openConnection(proxy19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "hi!://:100/hi!");
    }

    @Test
    public void test07547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07547");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        java.util.jar.Manifest manifest13 = null;
        explodedArchive0.manifest = manifest13;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNotNull(archiveList16);
    }

    @Test
    public void test07548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07548");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        java.lang.String str39 = uRL37.getProtocol();
        java.lang.String str40 = uRL37.getQuery();
        java.lang.String str41 = uRL37.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/archive" + "'", str41, "/archive");
    }

    @Test
    public void test07549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07549");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file8, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
    }

    @Test
    public void test07550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07550");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest42 = explodedArchive0.getManifest();
        boolean boolean43 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test07551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07551");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = fileEntry26.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = fileEntry26.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes29 = fileEntry26.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = fileEntry26.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(asciiBytes27);
        org.junit.Assert.assertNull(asciiBytes28);
        org.junit.Assert.assertNull(asciiBytes29);
    }

    @Test
    public void test07552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07552");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        java.lang.String str37 = uRL33.getFile();
        java.lang.String str38 = uRL33.getAuthority();
        java.lang.String str39 = uRL33.getProtocol();
        java.lang.String str40 = uRL33.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ":100" + "'", str38, ":100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test07553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07553");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getUserInfo();
        java.lang.String str26 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getAuthority();
        int int54 = uRL52.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL52, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL("hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) -1, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL67 = new java.net.URL(uRL9, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str68 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test07554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07554");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/[/hi!://:100/archive]", "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test07555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07555");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(entryCollection11);
        org.junit.Assert.assertNotNull(entryCollection12);
    }

    @Test
    public void test07556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07556");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        boolean boolean44 = explodedArchive43.filtered;
        java.lang.String str45 = explodedArchive43.toString();
        java.io.File file46 = null;
        explodedArchive43.root = file46;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
    }

    @Test
    public void test07557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07557");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str65 = uRL64.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str71 = explodedArchive70.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection72 = explodedArchive70.getEntries();
        java.util.jar.Manifest manifest73 = explodedArchive70.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive70.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.lang.String str76 = uRL75.getPath();
        java.lang.String str77 = uRL75.getUserInfo();
        int int78 = uRL75.getDefaultPort();
        int int79 = uRL75.getDefaultPort();
        java.lang.String str80 = uRL75.getFile();
        boolean boolean81 = uRL64.equals((java.lang.Object) uRL75);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "archive" + "'", str71, "archive");
        org.junit.Assert.assertNotNull(entryCollection72);
        org.junit.Assert.assertNull(manifest73);
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test07558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07558");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        int int16 = uRL9.getDefaultPort();
        java.net.URL uRL18 = new java.net.URL(uRL9, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        java.lang.String str19 = uRL18.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals(uRL18.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test07559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07559");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.lang.String str14 = explodedArchive0.toString();
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest16 = explodedArchive0.manifest;
        explodedArchive0.filtered = false;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        boolean boolean25 = explodedArchive20.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        explodedArchive0.filtered = false;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
    }

    @Test
    public void test07560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07560");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.lang.String str20 = explodedArchive14.toString();
        java.util.jar.Manifest manifest21 = explodedArchive14.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive14.entries;
        java.util.jar.Manifest manifest23 = explodedArchive14.getManifest();
        java.io.File file24 = null;
        explodedArchive14.root = file24;
        boolean boolean26 = explodedArchive14.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI30 = uRL28.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test07561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07561");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.lang.String str5 = explodedArchive0.toString();
        java.io.File file6 = explodedArchive0.root;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        explodedArchive0.filtered = true;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNotNull(archiveList9);
    }

    @Test
    public void test07562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07562");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getDefaultPort();
        java.lang.String str45 = uRL41.getAuthority();
        java.lang.String str46 = uRL41.getRef();
        java.net.URL uRL48 = new java.net.URL(uRL41, "[hi!://:100/hi!]:100");
        java.lang.String str49 = uRL48.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/[hi!://:100/hi!]:100");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!://:100/[hi!://:100/hi!]:100" + "'", str49, "hi!://:100/[hi!://:100/hi!]:100");
    }

    @Test
    public void test07563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07563");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive11.getFilteredArchive(entryRenameFilter17);
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive20.getNestedArchives(entryFilter27);
        java.io.File file29 = null;
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap40);
        explodedArchive20.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap40);
        explodedArchive11.entries = asciiBytesMap40;
        java.io.File file46 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive47.getNestedArchives(entryFilter49);
        explodedArchive47.filtered = false;
        java.util.jar.Manifest manifest53 = explodedArchive47.manifest;
        java.io.File file54 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive55.getNestedArchives(entryFilter57);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive55.getNestedArchives(entryFilter59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive62.entries;
        explodedArchive47.entries = asciiBytesMap63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap63);
        java.util.jar.Manifest manifest66 = null;
        explodedArchive65.manifest = manifest66;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive65.entries;
        explodedArchive11.entries = asciiBytesMap68;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive70.getNestedArchives(entryFilter72);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry74 = explodedArchive70.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes75 = fileEntry74.getName();
        java.io.File file76 = fileEntry74.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes77 = fileEntry74.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes78 = fileEntry74.name;
        java.io.File file79 = fileEntry74.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes80 = fileEntry74.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes81 = null;
        fileEntry74.name = asciiBytes81;
        java.io.File file83 = fileEntry74.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive84 = explodedArchive11.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNull(asciiBytes75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(asciiBytes77);
        org.junit.Assert.assertNull(asciiBytes78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(asciiBytes80);
        org.junit.Assert.assertNull(file83);
    }

    @Test
    public void test07564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07564");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        boolean boolean8 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        explodedArchive14.filtered = false;
        java.util.jar.Manifest manifest20 = explodedArchive14.manifest;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        explodedArchive14.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap30);
        explodedArchive0.entries = asciiBytesMap30;
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file37, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test07565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07565");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        boolean boolean26 = uRL9.sameFile(uRL21);
        java.lang.String str27 = uRL9.toExternalForm();
        java.lang.String str28 = uRL9.getPath();
        java.lang.String str29 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100" + "'", str27, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100" + "'", str29, "hi!://:100");
    }

    @Test
    public void test07566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07566");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry16.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry16.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = fileEntry16.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes17);
        org.junit.Assert.assertNull(asciiBytes18);
    }

    @Test
    public void test07567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07567");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07568");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL9.getAuthority();
        java.net.URL uRL44 = new java.net.URL(uRL9, "hi!://:100/archive:///archive:0hi!://:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getHost();
        int int57 = uRL54.getDefaultPort();
        boolean boolean58 = uRL44.sameFile(uRL54);
        java.lang.String str59 = uRL44.getFile();
        int int60 = uRL44.getPort();
        java.lang.String str61 = uRL44.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":100" + "'", str42, ":100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!://:100/archive:///archive:0hi!://:100" + "'", str59, "/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test07569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07569");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        java.lang.String str15 = uRL9.getHost();
        java.lang.String str16 = uRL9.getQuery();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test07570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07570");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        int int11 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL52 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL53 = new java.net.URL(uRL21, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str54 = uRL53.getProtocol();
        int int55 = uRL53.getDefaultPort();
        java.lang.String str56 = uRL53.getHost();
        int int57 = uRL53.getDefaultPort();
        java.lang.String str58 = uRL53.getProtocol();
        boolean boolean59 = uRL9.sameFile(uRL53);
        java.lang.String str60 = uRL9.getPath();
        java.lang.String str61 = uRL9.getAuthority();
        java.net.URL uRL63 = new java.net.URL(uRL9, "[archive://:10:100]:1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL52.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ":100" + "'", str61, ":100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/[archive://:10:100]:1");
    }

    @Test
    public void test07571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07571");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.getFile();
        java.lang.String str33 = uRL27.getRef();
        boolean boolean34 = uRL15.sameFile(uRL27);
        int int35 = uRL27.getPort();
        java.net.URL uRL37 = new java.net.URL(uRL27, ":52");
        java.lang.String str38 = uRL37.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/:52");
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test07572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07572");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        java.lang.String str15 = uRL9.getHost();
        java.lang.String str16 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive22.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive22.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive22.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive22.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "archive://:10:100", 1, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.net.URL uRL32 = new java.net.URL(uRL9, "/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection33 = uRL32.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[archive://:10:100]:1:100");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test07573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07573");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getHost();
        int int41 = uRL9.getPort();
        int int42 = uRL9.getPort();
        java.lang.String str43 = uRL9.getProtocol();
        java.lang.String str44 = uRL9.getPath();
        java.lang.String str45 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!://:100" + "'", str45, "hi!://:100");
    }

    @Test
    public void test07574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07574");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/hi!://:100/archive", "[/hi!://:100/archive]", "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07575");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive11.getManifest();
        explodedArchive11.filtered = false;
        boolean boolean35 = explodedArchive11.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive11.entries;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
    }

    @Test
    public void test07576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07576");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        boolean boolean8 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test07577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07577");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.io.File file11 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(entryCollection12);
    }

    @Test
    public void test07578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07578");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry11.getName();
        java.io.File file13 = fileEntry11.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry11.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry11.name;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test07579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07579");
        java.net.URLConnection.setDefaultRequestProperty("[hi!://:100/:100]://[hi!://:100/://[hi!://:100/:100]:100/hi!://:100]:0hi!://:100/hi!://:100/hi!", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100");
    }

    @Test
    public void test07580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07580");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        int int14 = uRL9.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getRef();
        java.lang.String str19 = uRL17.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL52 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL53 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str54 = uRL53.getAuthority();
        java.lang.String str55 = uRL53.getUserInfo();
        boolean boolean56 = uRL17.sameFile(uRL53);
        java.lang.String str57 = uRL53.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL52.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL53.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!://:100/hi!]:10" + "'", str54, "[hi!://:100/hi!]:10");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str57, "://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test07581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07581");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.io.File file13 = null;
        fileEntry12.file = file13;
        java.io.File file15 = null;
        fileEntry12.file = file15;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
    }

    @Test
    public void test07582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07582");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getQuery();
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap44);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive45.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        java.util.jar.Manifest manifest49 = null;
        explodedArchive45.manifest = manifest49;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[://[archive://:10archive]:100archive://:10archive]:100", (int) '#', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL29, ":10", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str54 = uRL29.getRef();
        int int55 = uRL29.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/:10");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
    }

    @Test
    public void test07583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07583");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        explodedArchive11.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL20 = explodedArchive11.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(archiveList19);
    }

    @Test
    public void test07584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07584");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("/hi!", "[hi!://:100/hi!]", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getRef();
        java.lang.Class[] classArray13 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = uRL11.getContent(classArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL11.toString(), "/hi!://[hi!://:100/hi!]:1/archive");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(classArray13);
    }

    @Test
    public void test07585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07585");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
    }

    @Test
    public void test07586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07586");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!");
        java.lang.String str15 = uRL14.getPath();
        int int16 = uRL14.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/hi!" + "'", str15, "/hi!");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test07587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07587");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.lang.String str14 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.net.URL uRL17 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive19.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL(uRL17, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getQuery();
        java.lang.String str53 = uRL51.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL67 = new java.net.URL(uRL35, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str68 = uRL67.getProtocol();
        int int69 = uRL67.getDefaultPort();
        java.lang.String str70 = uRL67.getHost();
        int int71 = uRL67.getDefaultPort();
        java.lang.String str72 = uRL67.getProtocol();
        java.lang.String str73 = uRL67.getQuery();
        java.lang.String str74 = uRL67.getUserInfo();
        java.net.URL uRL76 = new java.net.URL(uRL67, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection77 = filteredURLStreamHandler24.openConnection(uRL76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertEquals(uRL16.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "/archive:///archive:0hi!://:100://[hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/archive");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertEquals(uRL25.toString(), "/archive:///archive:0hi!://:100://[hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL66.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test07588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07588");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getQuery();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getPort();
        java.lang.String str45 = uRL41.getQuery();
        java.net.URL uRL47 = new java.net.URL(uRL41, "");
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL47, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL30, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        int int66 = uRL30.getPort();
        java.net.URL uRL68 = new java.net.URL(uRL30, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.lang.String str69 = uRL68.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter77 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList78 = explodedArchive75.getNestedArchives(entryFilter77);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter79 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList80 = explodedArchive75.getNestedArchives(entryFilter79);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter81 = null;
        org.springframework.boot.loader.archive.Archive archive82 = explodedArchive75.getFilteredArchive(entryRenameFilter81);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry83 = explodedArchive75.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler84 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL85 = new java.net.URL("hi!://:100/://[archive://:10archive]:100archive://:10archive", "/[hi!://:100/hi!]", 0, "[hi!://:100/archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL86 = new java.net.URL(uRL68, "hi!://:100/[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.Proxy proxy87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection88 = uRL68.openConnection(proxy87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(archiveList78);
        org.junit.Assert.assertNotNull(archiveList80);
        org.junit.Assert.assertNotNull(archive82);
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive://[/[hi!://:100/hi!]]:0[hi!://:100/archive]:100");
        org.junit.Assert.assertEquals(uRL86.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://hi!://:100/[/:100]:0");
    }

    @Test
    public void test07589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07589");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        java.util.jar.Manifest manifest21 = null;
        explodedArchive20.manifest = manifest21;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap23);
        java.io.File file25 = null;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap35);
        explodedArchive36.filtered = true;
        java.io.File file39 = null;
        explodedArchive36.root = file39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive36.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive36.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive36.entries;
        explodedArchive24.entries = asciiBytesMap43;
        java.util.jar.Manifest manifest45 = explodedArchive24.manifest;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNull(manifest45);
    }

    @Test
    public void test07590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07590");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.toExternalForm();
        java.net.Proxy proxy41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection42 = uRL39.openConnection(proxy41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!://:100/hi!://:100" + "'", str40, "hi!://:100/hi!://:100");
    }

    @Test
    public void test07591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07591");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.lang.String str14 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.net.URL uRL17 = new java.net.URL("hi!://:100/hi!://:100/hi!", "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (int) 'a', "hi!://:100/[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str18 = uRL17.getRef();
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertEquals(uRL16.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://[archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive]:97hi!://:100/[/:100]:0");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test07592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07592");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07593");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        java.util.jar.Manifest manifest12 = explodedArchive10.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive10.getEntries();
        java.io.File file14 = explodedArchive10.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test07594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07594");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        java.io.File file8 = null;
        fileEntry4.file = file8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test07595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07595");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        java.lang.String str21 = explodedArchive19.toString();
        java.io.File file22 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter23 = null;
        org.springframework.boot.loader.archive.Archive archive24 = explodedArchive19.getFilteredArchive(entryRenameFilter23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive19.new FileEntry();
        java.io.File file26 = fileEntry25.file;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archive24);
        org.junit.Assert.assertNull(file26);
    }

    @Test
    public void test07596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07596");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive8.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive8.getEntries();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNotNull(entryCollection15);
    }

    @Test
    public void test07597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07597");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getUserInfo();
        java.lang.String str14 = uRL12.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getPath();
        java.lang.String str30 = uRL28.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL42 = new java.net.URL(uRL28, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL43 = new java.net.URL("hi!://:100/[/:100]:0", "", 1, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        boolean boolean44 = uRL12.sameFile(uRL43);
        int int45 = uRL12.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection46 = uRL12.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/[/:100]:0://:1archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test07598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07598");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.jar.Manifest manifest9 = explodedArchive8.getManifest();
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        explodedArchive21.filtered = true;
        java.io.File file24 = null;
        explodedArchive21.root = file24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive21.new FileEntry();
        java.io.File file27 = null;
        fileEntry26.file = file27;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes29 = fileEntry26.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive30 = explodedArchive8.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(asciiBytes29);
    }

    @Test
    public void test07599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07599");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL42 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str43 = uRL42.getFile();
        java.lang.String str44 = uRL42.getUserInfo();
        java.net.URL uRL46 = new java.net.URL(uRL42, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        int int47 = uRL46.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals(uRL46.toString(), "archive://:10/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test07600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07600");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive11.getEntries();
        java.lang.String str15 = explodedArchive11.toString();
        java.util.jar.Manifest manifest16 = explodedArchive11.getManifest();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNull(manifest16);
    }

    @Test
    public void test07601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07601");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getFile();
        int int36 = uRL34.getDefaultPort();
        java.lang.String str37 = uRL34.getRef();
        boolean boolean38 = uRL17.sameFile(uRL34);
        java.lang.String str39 = uRL17.getHost();
        java.lang.String str40 = uRL17.getQuery();
        java.lang.String str41 = uRL17.getAuthority();
        java.io.File file55 = null;
        java.io.File file56 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive57.getNestedArchives(entryFilter61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive64.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap65);
        explodedArchive66.filtered = true;
        java.io.File file69 = null;
        explodedArchive66.root = file69;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive66.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection72 = explodedArchive66.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive66.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL("[/:100]:0", "hi!://:100/hi!:1", 0, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL76 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", 1, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL77 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 10, "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL78 = new java.net.URL(uRL17, "/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL79 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 100, "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL80 = new java.net.URL("hi!://:100/://[hi!://:100/:100]:100/hi!://:100", "hi!://:100/hi!", (-1), "hi!://:100/hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.lang.String str81 = uRL80.getHost();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + ":100" + "'", str41, ":100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertNotNull(entryCollection72);
        org.junit.Assert.assertEquals(uRL75.toString(), "[/:100]:0://[hi!://:100/hi!:1]:0/:100");
        org.junit.Assert.assertEquals(uRL76.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:1/:100");
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:10hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/://[hi!://:100/:100]:100/hi!://:100://[hi!://:100/hi!]hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[hi!://:100/hi!]" + "'", str81, "[hi!://:100/hi!]");
    }

    @Test
    public void test07602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07602");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07603");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.getQuery();
        java.lang.String str40 = uRL37.getAuthority();
        int int41 = uRL37.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
    }

    @Test
    public void test07604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07604");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry2.getName();
        java.io.File file8 = fileEntry2.getFile();
        java.io.File file9 = fileEntry2.file;
        java.io.File file10 = null;
        fileEntry2.file = file10;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fileEntry2.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test07605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07605");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        boolean boolean8 = explodedArchive0.filtered;
        boolean boolean9 = explodedArchive0.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test07606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07606");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.net.URL uRL14 = new java.net.URL("hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "hi!://:100/:100", (int) (byte) -1, "/[hi!://:100/hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI15 = uRL14.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100://[hi!://:100/:100]/[hi!://:100/hi!://:100/hi!://:100/archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100://[hi!://:100/:100]/[hi!://:100/hi!://:100/hi!://:100/archive");
    }

    @Test
    public void test07607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07607");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str34 = uRL33.getProtocol();
        java.lang.String str35 = uRL33.getAuthority();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL33.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/archive:///archive:0hi!://:100" + "'", str34, "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!://:100/archive]:100" + "'", str35, "[hi!://:100/archive]:100");
    }

    @Test
    public void test07608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07608");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getPath();
        java.lang.String str18 = uRL9.toExternalForm();
        java.net.Proxy proxy19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection20 = uRL9.openConnection(proxy19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100" + "'", str18, "hi!://:100");
    }

    @Test
    public void test07609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07609");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL64.toExternalForm();
        int int68 = uRL64.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100" + "'", str67, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test07610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07610");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest18 = explodedArchive10.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive10.entries;
        explodedArchive8.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive8.new FileEntry();
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = null;
        explodedArchive23.entries = asciiBytesMap27;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = explodedArchive32.new FileEntry();
        java.lang.String str37 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive32.new FileEntry();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive32.manifest = manifest39;
        java.lang.String str41 = explodedArchive32.toString();
        java.io.File file42 = null;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive44.getNestedArchives(entryFilter51);
        java.io.File file53 = null;
        java.io.File file54 = null;
        java.io.File file55 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive63.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap64);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file53, asciiBytesMap64);
        explodedArchive44.entries = asciiBytesMap64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap69);
        explodedArchive32.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap69);
        java.io.File file73 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive74.getNestedArchives(entryFilter76);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry78 = explodedArchive74.new FileEntry();
        java.lang.String str79 = explodedArchive74.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry80 = explodedArchive74.new FileEntry();
        java.util.jar.Manifest manifest81 = null;
        explodedArchive74.manifest = manifest81;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap83 = explodedArchive74.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive(file73, asciiBytesMap83);
        explodedArchive72.entries = asciiBytesMap83;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap83);
        explodedArchive23.entries = asciiBytesMap83;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap83);
        explodedArchive8.entries = asciiBytesMap83;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(asciiBytesMap29);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "archive" + "'", str79, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap83);
    }

    @Test
    public void test07611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07611");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap12);
        explodedArchive13.filtered = true;
        java.io.File file16 = null;
        explodedArchive13.root = file16;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive13.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive22.getNestedArchives(entryFilter29);
        java.io.File file31 = null;
        java.io.File file32 = null;
        java.io.File file33 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive34.getNestedArchives(entryFilter38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive41.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap42);
        explodedArchive22.entries = asciiBytesMap42;
        explodedArchive21.entries = asciiBytesMap42;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive21.new FilteredURLStreamHandler();
        java.lang.Class<?> wildcardClass48 = filteredURLStreamHandler47.getClass();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test07612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07612");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getHost();
        int int42 = uRL22.getPort();
        java.lang.String str43 = uRL22.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream44 = uRL22.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!://:100" + "'", str43, "hi!://:100");
    }

    @Test
    public void test07613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07613");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!");
        java.lang.String str15 = uRL14.toExternalForm();
        int int16 = uRL14.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100/hi!" + "'", str15, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test07614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07614");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.jar.Manifest manifest6 = null;
        explodedArchive4.manifest = manifest6;
        java.util.jar.Manifest manifest8 = explodedArchive4.getManifest();
        boolean boolean9 = explodedArchive4.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive4.entries;
        java.io.File file12 = null;
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        explodedArchive24.filtered = true;
        java.io.File file27 = null;
        explodedArchive24.root = file27;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive24.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap30);
        explodedArchive4.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive4.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive4.getFilteredArchive(entryRenameFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive4.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("/:52", "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0", 32, "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archive36);
        org.junit.Assert.assertEquals(uRL39.toString(), "/:52://[hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0]:32/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!");
    }

    @Test
    public void test07615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07615");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive15.getNestedArchives(entryFilter16);
        java.util.jar.Manifest manifest18 = explodedArchive15.getManifest();
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap29);
        explodedArchive15.entries = asciiBytesMap29;
        java.util.jar.Manifest manifest32 = explodedArchive15.manifest;
        java.io.File file33 = explodedArchive15.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL34 = explodedArchive15.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test07616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07616");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        int int42 = uRL9.getDefaultPort();
        java.lang.String str43 = uRL9.getRef();
        java.lang.String str44 = uRL9.getHost();
        java.lang.String str45 = uRL9.getProtocol();
        java.lang.String str46 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!://:100" + "'", str46, "hi!://:100");
    }

    @Test
    public void test07617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07617");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.lang.String str13 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.jar.Manifest manifest20 = explodedArchive14.getManifest();
        boolean boolean21 = uRL9.equals((java.lang.Object) manifest20);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test07618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07618");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL51 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL52 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = null;
        explodedArchive57.entries = asciiBytesMap59;
        java.util.jar.Manifest manifest61 = null;
        explodedArchive57.manifest = manifest61;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        int int65 = uRL64.getDefaultPort();
        int int66 = uRL64.getPort();
        boolean boolean67 = uRL52.sameFile(uRL64);
        java.net.Proxy proxy68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection69 = uRL52.openConnection(proxy68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL51.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test07619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07619");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive29.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive29.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL13, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getAuthority();
        java.lang.String str39 = uRL37.getProtocol();
        java.lang.String str40 = uRL37.getHost();
        int int41 = uRL37.getPort();
        java.net.Proxy proxy42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection43 = uRL37.openConnection(proxy42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!://:100/:100]:100" + "'", str38, "[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/hi!" + "'", str39, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!://:100/:100]" + "'", str40, "[hi!://:100/:100]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
    }

    @Test
    public void test07620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07620");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getUserInfo();
        java.net.URL uRL15 = new java.net.URL(uRL12, "hi!://:100/archive:///archive:0hi!://:100");
        java.lang.String str16 = uRL12.getRef();
        java.lang.String str17 = uRL12.getFile();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "archive://:0hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!://:100/hi!" + "'", str17, "hi!://:100/hi!");
    }

    @Test
    public void test07621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07621");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getPath();
        java.lang.String str39 = uRL9.getPath();
        java.lang.String str40 = uRL9.getHost();
        java.lang.String str41 = uRL9.getQuery();
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getQuery();
        java.lang.String str70 = uRL68.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL82 = new java.net.URL(uRL68, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL83 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL84 = new java.net.URL(uRL52, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.lang.String str85 = uRL52.getQuery();
        boolean boolean86 = uRL9.sameFile(uRL52);
        java.lang.String str87 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL83.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
    }

    @Test
    public void test07622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07622");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!:1", "[hi!://:100/hi!:1]:52", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07623");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.io.File file8 = explodedArchive0.root;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNotNull(archive14);
    }

    @Test
    public void test07624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07624");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "://[hi!://:100/:100]:100/hi!://:100", (int) 'a', "hi!://:100/hi!://:100/hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://hi!:1hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07625");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        java.lang.String str12 = explodedArchive11.toString();
        boolean boolean13 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(archiveList15);
    }

    @Test
    public void test07626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07626");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive1.filtered = true;
        java.io.File file4 = null;
        explodedArchive1.root = file4;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive1.getEntries();
        explodedArchive1.filtered = false;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive10.getNestedArchives(entryFilter17);
        java.io.File file19 = null;
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap30);
        explodedArchive10.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap30);
        java.util.jar.Manifest manifest35 = null;
        explodedArchive34.manifest = manifest35;
        java.io.File file37 = explodedArchive34.root;
        java.util.jar.Manifest manifest38 = explodedArchive34.getManifest();
        java.io.File file39 = null;
        explodedArchive34.root = file39;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive34.getEntries();
        java.io.File file42 = null;
        java.io.File file43 = null;
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap53);
        explodedArchive54.filtered = true;
        java.io.File file57 = null;
        explodedArchive54.root = file57;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive54.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest61 = null;
        explodedArchive54.manifest = manifest61;
        java.io.File file63 = explodedArchive54.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap64);
        explodedArchive34.entries = asciiBytesMap64;
        explodedArchive1.entries = asciiBytesMap64;
        java.io.File file68 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive69.getNestedArchives(entryFilter71);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry73 = explodedArchive69.new FileEntry();
        boolean boolean74 = explodedArchive69.filtered;
        boolean boolean75 = explodedArchive69.filtered;
        java.util.jar.Manifest manifest76 = null;
        explodedArchive69.manifest = manifest76;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap78 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file68, asciiBytesMap78);
        explodedArchive1.entries = asciiBytesMap78;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap78);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap78);
    }

    @Test
    public void test07627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07627");
        java.net.URLConnection.setDefaultRequestProperty("", "/hi!://:100/hi!://:100/:100");
    }

    @Test
    public void test07628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07628");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        boolean boolean10 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(manifest11);
    }

    @Test
    public void test07629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07629");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getHost();
        java.lang.String str18 = uRL9.getProtocol();
        java.lang.String str19 = uRL9.toExternalForm();
        java.lang.String str20 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.net.URL uRL32 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getRef();
        int int35 = uRL32.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive40.new FilteredURLStreamHandler();
        java.io.File file44 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive40.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter47 = null;
        org.springframework.boot.loader.archive.Archive archive48 = explodedArchive40.getFilteredArchive(entryRenameFilter47);
        java.io.File file49 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.lang.String str56 = explodedArchive50.toString();
        java.util.jar.Manifest manifest57 = explodedArchive50.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap58);
        explodedArchive40.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!://:100/archive:///archive:0hi!://:100", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (-1), "hi!://:100/://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        boolean boolean63 = uRL32.equals((java.lang.Object) (-1));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100" + "'", str19, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str33, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archive48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive:///archive:0hi!://:100://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test07630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07630");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive19.manifest = manifest20;
        java.lang.String str22 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive19.new FileEntry();
        java.util.jar.Manifest manifest24 = explodedArchive19.manifest;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNull(manifest24);
    }

    @Test
    public void test07631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07631");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive3.getNestedArchives(entryFilter10);
        java.io.File file12 = null;
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap23);
        explodedArchive3.entries = asciiBytesMap23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap23);
        java.util.jar.Manifest manifest28 = null;
        explodedArchive27.manifest = manifest28;
        explodedArchive27.filtered = false;
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        explodedArchive45.filtered = true;
        java.io.File file48 = null;
        explodedArchive45.root = file48;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive45.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive54.getNestedArchives(entryFilter58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive54.getNestedArchives(entryFilter61);
        java.io.File file63 = null;
        java.io.File file64 = null;
        java.io.File file65 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive66.getNestedArchives(entryFilter70);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive66.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive73.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file64, asciiBytesMap74);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file63, asciiBytesMap74);
        explodedArchive54.entries = asciiBytesMap74;
        explodedArchive53.entries = asciiBytesMap74;
        explodedArchive27.entries = asciiBytesMap74;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap74);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap74);
        explodedArchive81.filtered = false;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
    }

    @Test
    public void test07632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07632");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.lang.String str7 = explodedArchive0.toString();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test07633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07633");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        int int42 = uRL9.getDefaultPort();
        int int43 = uRL9.getDefaultPort();
        java.lang.String str44 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!://:100" + "'", str44, "hi!://:100");
    }

    @Test
    public void test07634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07634");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/archive://:32/archive");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07635");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fileEntry12.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
    }

    @Test
    public void test07636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07636");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL42 = new java.net.URL(uRL22, ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = uRL42.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test07637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07637");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        explodedArchive0.filtered = true;
        java.lang.String str13 = explodedArchive0.toString();
        java.lang.Class<?> wildcardClass14 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test07638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07638");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        int int56 = uRL53.getPort();
        java.lang.String str57 = uRL53.getProtocol();
        java.lang.String str58 = uRL53.getPath();
        java.lang.String str59 = uRL53.getPath();
        boolean boolean60 = uRL41.sameFile(uRL53);
        java.io.File file62 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive63.getNestedArchives(entryFilter65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = null;
        explodedArchive63.entries = asciiBytesMap67;
        java.io.File file69 = explodedArchive63.root;
        java.io.File file70 = explodedArchive63.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive71.getNestedArchives(entryFilter73);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive71.getNestedArchives(entryFilter75);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive71.entries;
        explodedArchive63.entries = asciiBytesMap77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file62, asciiBytesMap77);
        java.util.jar.Manifest manifest80 = null;
        explodedArchive79.manifest = manifest80;
        explodedArchive79.filtered = true;
        java.io.File file84 = null;
        explodedArchive79.root = file84;
        java.util.jar.Manifest manifest86 = explodedArchive79.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler87 = explodedArchive79.new FilteredURLStreamHandler();
        java.net.URL uRL88 = new java.net.URL(uRL53, "[hi!:1]", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.lang.String str89 = uRL88.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNotNull(archiveList76);
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertNull(manifest86);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/[hi!:1]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test07639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07639");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!", "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100", 0, "[hi!://:100/hi!://:100/archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://:100/hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07640");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI14 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
    }

    @Test
    public void test07641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07641");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getPath();
        java.lang.String str19 = uRL9.getAuthority();
        java.lang.String str20 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive21.manifest = manifest23;
        java.util.jar.Manifest manifest25 = explodedArchive21.getManifest();
        boolean boolean26 = explodedArchive21.filtered;
        java.util.jar.Manifest manifest27 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive21.new FileEntry();
        boolean boolean29 = explodedArchive21.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive21.new FileEntry();
        boolean boolean31 = uRL9.equals((java.lang.Object) fileEntry30);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + ":100" + "'", str19, ":100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test07642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07642");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive8.getFilteredArchive(entryRenameFilter10);
        explodedArchive8.filtered = true;
        java.io.File file14 = explodedArchive8.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive8.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test07643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07643");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file4 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.io.File file7 = explodedArchive0.root;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test07644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07644");
        java.net.URLConnection.setDefaultRequestProperty("[hi!://:100/:100]:0", "/hi!://:100/hi!://:100");
    }

    @Test
    public void test07645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07645");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.lang.String str44 = uRL9.getQuery();
        java.lang.String str45 = uRL9.getRef();
        java.lang.String str46 = uRL9.getRef();
        java.lang.String str47 = uRL9.getHost();
        java.lang.String str48 = uRL9.getQuery();
        java.net.URL uRL50 = new java.net.URL(uRL9, "[hi!://:100/hi!]");
        java.io.File file56 = null;
        java.io.File file57 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, asciiBytesMap64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive65.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap66);
        explodedArchive67.filtered = true;
        java.io.File file70 = null;
        explodedArchive67.root = file70;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection72 = explodedArchive67.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive67.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive67.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL("[/:100]:0", "hi!://:100/hi!:1", 0, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.net.URL uRL77 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.lang.Class<?> wildcardClass78 = uRL9.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(entryCollection72);
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertEquals(uRL76.toString(), "[/:100]:0://[hi!://:100/hi!:1]:0/:100");
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test07646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07646");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        java.util.jar.Manifest manifest27 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive25.getFilteredArchive(entryRenameFilter28);
        java.util.jar.Manifest manifest30 = explodedArchive25.getManifest();
        java.util.jar.Manifest manifest31 = explodedArchive25.manifest;
        explodedArchive25.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive25.entries;
        java.util.jar.Manifest manifest35 = explodedArchive25.manifest;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNotNull(archive29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNull(manifest35);
    }

    @Test
    public void test07647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07647");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL37.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL60, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.toExternalForm();
        java.lang.String str70 = uRL67.getQuery();
        boolean boolean71 = uRL37.sameFile(uRL67);
        java.net.URL uRL73 = new java.net.URL(uRL37, "[/hi!://:100/archive]");
        java.lang.String str74 = uRL37.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100/archive" + "'", str50, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100/hi!" + "'", str69, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test07648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07648");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL(":100", "[hi!://:100/hi!]", (int) (short) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str34 = uRL33.getUserInfo();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "/hi!://:100://archive:1/archive");
        org.junit.Assert.assertEquals(uRL33.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/archive");
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test07649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07649");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("/hi!:1", "hi!://:100/://[archive://:10archive]:100archive://:10archive", (int) ' ', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getFile();
        java.net.Proxy proxy14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection15 = uRL11.openConnection(proxy14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL11.toString(), "/hi!:1://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str12, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str13, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test07650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07650");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        java.io.File file17 = null;
        fileEntry16.file = file17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry16.name;
        java.io.File file20 = null;
        fileEntry16.file = file20;
        java.io.File file22 = fileEntry16.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = file22.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test07651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07651");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap11);
        java.util.jar.Manifest manifest14 = explodedArchive13.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive13.getEntries();
        java.io.File file16 = null;
        explodedArchive13.root = file16;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNotNull(entryCollection15);
    }

    @Test
    public void test07652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07652");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive12.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive12.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive12.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        explodedArchive17.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive17.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive17.getNestedArchives(entryFilter25);
        java.util.jar.Manifest manifest27 = explodedArchive17.getManifest();
        java.io.File file28 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive29.getNestedArchives(entryFilter33);
        explodedArchive29.filtered = false;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive29.manifest = manifest37;
        java.io.File file39 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive40.getNestedArchives(entryFilter47);
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        explodedArchive40.entries = asciiBytesMap60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive64.entries;
        explodedArchive29.entries = asciiBytesMap65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap65);
        explodedArchive17.entries = asciiBytesMap65;
        explodedArchive12.entries = asciiBytesMap65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap65);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive70.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest72 = explodedArchive70.getManifest();
        explodedArchive70.filtered = false;
        java.util.jar.Manifest manifest75 = null;
        explodedArchive70.manifest = manifest75;
        boolean boolean77 = explodedArchive70.filtered;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test07653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07653");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07654");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getPath();
        boolean boolean30 = uRL9.sameFile(uRL27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL44.getQuery();
        java.lang.String str46 = uRL44.getRef();
        int int47 = uRL44.getPort();
        java.lang.String str48 = uRL44.getProtocol();
        java.lang.String str49 = uRL44.getPath();
        java.lang.String str50 = uRL44.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getFile();
        int int63 = uRL61.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive69.getEntries();
        java.util.jar.Manifest manifest72 = explodedArchive69.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL74.getQuery();
        java.lang.String str76 = uRL74.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str83 = explodedArchive82.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection84 = explodedArchive82.getEntries();
        java.util.jar.Manifest manifest85 = explodedArchive82.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler86 = explodedArchive82.new FilteredURLStreamHandler();
        java.net.URL uRL87 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL88 = new java.net.URL(uRL74, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL89 = new java.net.URL(uRL61, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL90 = new java.net.URL(uRL44, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL91 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        boolean boolean92 = uRL9.sameFile(uRL91);
        java.net.Proxy proxy93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection94 = uRL91.openConnection(proxy93);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ":100" + "'", str50, ":100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "archive" + "'", str83, "archive");
        org.junit.Assert.assertNotNull(entryCollection84);
        org.junit.Assert.assertNull(manifest85);
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL91.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test07655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07655");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.lang.String str7 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(asciiBytesMap8);
    }

    @Test
    public void test07656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07656");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry8.name = asciiBytes9;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry8.name = asciiBytes12;
        java.io.File file14 = fileEntry8.file;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test07657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07657");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL(uRL15, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL15.getRef();
        java.lang.String str32 = uRL15.getProtocol();
        java.lang.String str33 = uRL15.getUserInfo();
        java.lang.String str34 = uRL15.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream35 = uRL15.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test07658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07658");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getHost();
        java.lang.String str61 = uRL59.getUserInfo();
        java.lang.String str62 = uRL59.getRef();
        boolean boolean63 = uRL37.sameFile(uRL59);
        java.lang.String str64 = uRL59.getQuery();
        java.lang.String str65 = uRL59.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI66 = uRL59.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test07659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07659");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[hi!://:100/:100]:100://[hi!:1][hi!://:100/hi!]:10", ":10", "[hi!:1]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/:100]:100://[hi!:1][hi!://:100/hi!]:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07660");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getRef();
        java.net.URL uRL30 = new java.net.URL(uRL27, "[://[archive://:10archive]:100archive://:10archive]:0");
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getQuery();
        java.lang.String str33 = uRL30.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test07661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07661");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive11.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        boolean boolean34 = explodedArchive33.filtered;
        explodedArchive33.filtered = false;
        boolean boolean37 = explodedArchive33.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive33.entries;
        explodedArchive11.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive11.getNestedArchives(entryFilter40);
        java.io.File file42 = null;
        explodedArchive11.root = file42;
        java.lang.Class<?> wildcardClass44 = explodedArchive11.getClass();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test07662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07662");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive14.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        java.lang.String str21 = uRL19.getPath();
        boolean boolean22 = uRL9.sameFile(uRL19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        int int40 = uRL37.getPort();
        java.lang.String str41 = uRL37.getProtocol();
        java.lang.String str42 = uRL37.getPath();
        java.lang.String str43 = uRL37.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getFile();
        int int56 = uRL54.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str68 = uRL67.getQuery();
        java.lang.String str69 = uRL67.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        java.util.jar.Manifest manifest78 = explodedArchive75.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL(uRL67, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL82 = new java.net.URL(uRL54, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL83 = new java.net.URL(uRL37, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL84 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL85 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL87 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:0");
        java.lang.String str88 = uRL87.getQuery();
        java.lang.String str89 = uRL87.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertNull(manifest78);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL84.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://hi!:1/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0" + "'", str89, "hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test07663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07663");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.lang.String str59 = uRL9.getQuery();
        java.lang.String str60 = uRL9.getProtocol();
        java.lang.String str61 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test07664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07664");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        java.lang.String str13 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
    }

    @Test
    public void test07665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07665");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        java.io.File file20 = null;
        explodedArchive11.root = file20;
        java.io.File file22 = null;
        explodedArchive11.root = file22;
        java.io.File file24 = null;
        explodedArchive11.root = file24;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archiveList19);
    }

    @Test
    public void test07666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07666");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.io.File file15 = null;
        explodedArchive8.root = file15;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive8.getFilteredArchive(entryRenameFilter17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        explodedArchive19.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive19.getNestedArchives(entryFilter28);
        explodedArchive19.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive19.entries;
        explodedArchive8.entries = asciiBytesMap32;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        boolean boolean38 = explodedArchive36.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter39 = null;
        org.springframework.boot.loader.archive.Archive archive40 = explodedArchive36.getFilteredArchive(entryRenameFilter39);
        explodedArchive36.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive36.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        explodedArchive8.entries = asciiBytesMap44;
        java.util.jar.Manifest manifest48 = explodedArchive8.manifest;
        boolean boolean49 = explodedArchive8.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(archive40);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test07667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07667");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        boolean boolean39 = uRL27.sameFile(uRL37);
        int int40 = uRL37.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getQuery();
        java.lang.String str52 = uRL50.getRef();
        java.lang.String str53 = uRL50.getRef();
        java.net.URL uRL55 = new java.net.URL(uRL50, "hi!");
        boolean boolean56 = uRL37.sameFile(uRL55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL55, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL69 = new java.net.URL("hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0:0/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test07668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07668");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.lang.String str14 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest16 = explodedArchive8.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = explodedArchive8.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNull(manifest16);
    }

    @Test
    public void test07669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07669");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://:100/[hi!://:100/hi!]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/[hi!://:100/hi!]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07670");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive4.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("[hi!://:100/:100]:0", "://[archive://:10archive]:100archive://:10archive", (int) (byte) 0, "archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI12 = uRL11.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 0: [hi!://:100/:100]:0://[://[archive://:10archive]:100archive://:10archive]:0archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertEquals(uRL11.toString(), "[hi!://:100/:100]:0://[://[archive://:10archive]:100archive://:10archive]:0archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test07671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07671");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        java.lang.String str16 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        java.util.jar.Manifest manifest25 = null;
        explodedArchive21.manifest = manifest25;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("/hi!", "[hi!://:100/hi!]", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL30 = new java.net.URL(uRL28, "hi!://:100/hi!:1");
        boolean boolean31 = uRL15.sameFile(uRL28);
        java.lang.String str32 = uRL15.getUserInfo();
        java.lang.String str33 = uRL15.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertEquals(uRL28.toString(), "/hi!://[hi!://:100/hi!]:1/archive");
        org.junit.Assert.assertEquals(uRL30.toString(), "/hi!://[hi!://:100/hi!]:1/hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test07672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07672");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = null;
        fileEntry8.file = file9;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
    }

    @Test
    public void test07673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07673");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(manifest7);
    }

    @Test
    public void test07674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07674");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive11.getManifest();
        java.lang.String str33 = explodedArchive11.toString();
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest36 = explodedArchive11.manifest;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNull(manifest36);
    }

    @Test
    public void test07675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07675");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        boolean boolean6 = explodedArchive0.filtered;
        java.io.File file7 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test07676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07676");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        explodedArchive11.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive11.getEntries();
        java.io.File file20 = explodedArchive11.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive11.getEntries();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL22 = explodedArchive11.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(entryCollection21);
    }

    @Test
    public void test07677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07677");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getPath();
        java.lang.String str14 = uRL9.getAuthority();
        java.lang.String str15 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + ":100" + "'", str14, ":100");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test07678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07678");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive1.new FilteredURLStreamHandler();
        boolean boolean7 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = null;
        explodedArchive1.manifest = manifest10;
        explodedArchive1.filtered = true;
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        explodedArchive16.filtered = false;
        java.util.jar.Manifest manifest22 = explodedArchive16.manifest;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        explodedArchive16.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap35);
        java.util.jar.Manifest manifest37 = explodedArchive36.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive36.entries;
        explodedArchive1.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
    }

    @Test
    public void test07679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07679");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        boolean boolean20 = explodedArchive19.filtered;
        java.util.jar.Manifest manifest21 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive19.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive19.getEntries();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(entryCollection25);
    }

    @Test
    public void test07680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07680");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test07681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07681");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.io.File file13 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL14 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test07682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07682");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        int int39 = uRL37.getDefaultPort();
        java.lang.String str40 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getQuery();
        java.lang.String str52 = uRL50.getRef();
        java.lang.String str53 = uRL50.getRef();
        java.lang.String str54 = uRL50.toExternalForm();
        boolean boolean55 = uRL37.sameFile(uRL50);
        java.lang.String str56 = uRL50.getUserInfo();
        java.lang.String str57 = uRL50.getHost();
        java.lang.String str58 = uRL50.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.lang.String str66 = explodedArchive60.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL(uRL50, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        boolean boolean69 = uRL9.sameFile(uRL50);
        java.lang.String str70 = uRL50.getHost();
        java.lang.String str71 = uRL50.getFile();
        java.lang.String str72 = uRL50.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI73 = uRL50.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!://:100" + "'", str54, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test07683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07683");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        boolean boolean20 = explodedArchive19.filtered;
        explodedArchive19.filtered = false;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = explodedArchive19.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test07684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07684");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive2.entries = asciiBytesMap6;
        java.io.File file8 = explodedArchive2.root;
        java.io.File file9 = explodedArchive2.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive19.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.io.File file22 = explodedArchive19.root;
        java.util.jar.Manifest manifest23 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive19.new FilteredURLStreamHandler();
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive33.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive37.filtered = true;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive37.manifest = manifest40;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter42 = null;
        org.springframework.boot.loader.archive.Archive archive43 = explodedArchive37.getFilteredArchive(entryRenameFilter42);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive37.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive37.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter47 = null;
        org.springframework.boot.loader.archive.Archive archive48 = explodedArchive37.getFilteredArchive(entryRenameFilter47);
        java.util.jar.Manifest manifest49 = null;
        explodedArchive37.manifest = manifest49;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive37.entries;
        explodedArchive33.entries = asciiBytesMap51;
        explodedArchive19.entries = asciiBytesMap51;
        java.lang.String str54 = explodedArchive19.toString();
        java.io.File file55 = null;
        explodedArchive19.root = file55;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = explodedArchive19.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archive43);
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNotNull(archive48);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
    }

    @Test
    public void test07685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07685");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive", "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!", (-1), "[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07686");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.io.File file15 = null;
        explodedArchive8.root = file15;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive8.getFilteredArchive(entryRenameFilter17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        explodedArchive19.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive19.getNestedArchives(entryFilter28);
        explodedArchive19.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive19.entries;
        explodedArchive8.entries = asciiBytesMap32;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        boolean boolean38 = explodedArchive36.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter39 = null;
        org.springframework.boot.loader.archive.Archive archive40 = explodedArchive36.getFilteredArchive(entryRenameFilter39);
        explodedArchive36.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive36.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        explodedArchive8.entries = asciiBytesMap44;
        java.util.jar.Manifest manifest48 = explodedArchive8.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = explodedArchive8.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(archive40);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNull(manifest48);
    }

    @Test
    public void test07687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07687");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive8.entries = asciiBytesMap10;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.URL uRL16 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.URL uRL17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection18 = filteredURLStreamHandler14.openConnection(uRL17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
    }

    @Test
    public void test07688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07688");
        java.net.URLConnection.setDefaultRequestProperty("[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!", "[archive://:0hi!://:100/hi!]");
    }

    @Test
    public void test07689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07689");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.io.File file13 = explodedArchive11.root;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        explodedArchive11.filtered = false;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test07690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07690");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive2.manifest = manifest4;
        java.io.File file6 = null;
        explodedArchive2.root = file6;
        boolean boolean8 = explodedArchive2.filtered;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        explodedArchive11.filtered = false;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap30);
        explodedArchive2.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test07691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07691");
        java.net.URLConnection.setDefaultRequestProperty("/[hi!://:100/hi!://:100/hi!://:100/archive", "");
    }

    @Test
    public void test07692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07692");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getRef();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        int int39 = uRL37.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getQuery();
        java.lang.String str52 = uRL50.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL64 = new java.net.URL(uRL50, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL65 = new java.net.URL(uRL37, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str66 = uRL37.getPath();
        java.lang.String str67 = uRL37.getPath();
        java.lang.String str68 = uRL37.getUserInfo();
        java.lang.String str69 = uRL37.getHost();
        boolean boolean70 = uRL27.sameFile(uRL37);
        int int71 = uRL37.getDefaultPort();
        java.lang.String str72 = uRL37.getQuery();
        java.lang.String str73 = uRL37.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ":100" + "'", str73, ":100");
    }

    @Test
    public void test07693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07693");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        java.lang.String str13 = explodedArchive0.toString();
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
    }

    @Test
    public void test07694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07694");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getAuthority();
        java.lang.String str20 = uRL17.getPath();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals(uRL17.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str18, "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[archive://:10archive]:100" + "'", str19, "[archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive://:10archive" + "'", str20, "archive://:10archive");
    }

    @Test
    public void test07695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07695");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        int int11 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL52 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL53 = new java.net.URL(uRL21, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str54 = uRL53.getProtocol();
        int int55 = uRL53.getDefaultPort();
        java.lang.String str56 = uRL53.getHost();
        int int57 = uRL53.getDefaultPort();
        java.lang.String str58 = uRL53.getProtocol();
        boolean boolean59 = uRL9.sameFile(uRL53);
        java.lang.String str60 = uRL9.getPath();
        java.lang.String str61 = uRL9.getAuthority();
        java.net.URL uRL63 = new java.net.URL(uRL9, "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.lang.String str64 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL52.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ":100" + "'", str61, ":100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test07696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07696");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.toExternalForm();
        java.lang.String str28 = uRL23.getRef();
        java.lang.String str29 = uRL23.toExternalForm();
        java.lang.String str30 = uRL23.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100/hi!" + "'", str27, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100/hi!" + "'", str29, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
    }

    @Test
    public void test07697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07697");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.io.File file13 = explodedArchive11.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive11.new FilteredURLStreamHandler();
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap28);
        java.io.File file30 = null;
        explodedArchive29.root = file30;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap32);
        explodedArchive11.entries = asciiBytesMap32;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
    }

    @Test
    public void test07698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07698");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getQuery();
        java.net.URL uRL26 = new java.net.URL(uRL9, "/hi!");
        java.lang.String str27 = uRL26.getProtocol();
        java.lang.String str28 = uRL26.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test07699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07699");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        int int25 = uRL23.getDefaultPort();
        java.lang.String str26 = uRL23.getQuery();
        java.lang.String str27 = uRL23.getPath();
        java.lang.String str28 = uRL23.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getPath();
        boolean boolean51 = uRL38.sameFile(uRL48);
        java.net.URLStreamHandler uRLStreamHandler53 = null;
        java.net.URL uRL54 = new java.net.URL(uRL48, "", uRLStreamHandler53);
        int int55 = uRL54.getPort();
        java.lang.String str56 = uRL54.getRef();
        boolean boolean57 = uRL23.sameFile(uRL54);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!://:100/hi!" + "'", str28, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test07700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07700");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        boolean boolean10 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL12 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test07701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07701");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.lang.String str14 = explodedArchive8.toString();
        java.lang.String str15 = explodedArchive8.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = null;
        explodedArchive8.entries = asciiBytesMap16;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive8.manifest = manifest18;
        java.io.File file20 = explodedArchive8.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest21 = explodedArchive8.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test07702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07702");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[archive://:10:100]:1", "hi!://:100/hi!://:100", (int) (short) 100, "hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [archive://:10:100]:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07703");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.getProtocol();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getUserInfo();
        java.lang.String str42 = uRL37.getPath();
        java.lang.String str43 = uRL37.getAuthority();
        java.lang.String str44 = uRL37.toExternalForm();
        java.lang.String str45 = uRL37.getAuthority();
        java.lang.String str46 = uRL37.getPath();
        java.lang.String str47 = uRL37.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/archive" + "'", str42, "/archive");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!://:100/archive" + "'", str44, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/archive" + "'", str46, "/archive");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ":100" + "'", str47, ":100");
    }

    @Test
    public void test07704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07704");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        java.io.File file14 = null;
        explodedArchive13.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive16.new FileEntry();
        boolean boolean21 = explodedArchive16.filtered;
        boolean boolean22 = explodedArchive16.filtered;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive16.manifest = manifest23;
        boolean boolean25 = explodedArchive16.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive16.entries;
        explodedArchive13.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive13.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
    }

    @Test
    public void test07705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07705");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap24);
        boolean boolean26 = explodedArchive25.filtered;
        explodedArchive25.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive31.new FileEntry();
        java.lang.String str36 = explodedArchive31.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        java.util.jar.Manifest manifest38 = null;
        explodedArchive31.manifest = manifest38;
        java.io.File file40 = null;
        explodedArchive31.root = file40;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive31.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive31.entries;
        explodedArchive25.entries = asciiBytesMap43;
        explodedArchive13.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive13.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = fileEntry46.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
    }

    @Test
    public void test07706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07706");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        java.io.File file29 = explodedArchive26.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap30);
        java.io.File file32 = null;
        explodedArchive31.root = file32;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive31.entries;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
    }

    @Test
    public void test07707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07707");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive0.new FilteredURLStreamHandler();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL16 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
    }

    @Test
    public void test07708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07708");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList13);
    }

    @Test
    public void test07709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07709");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.lang.String str18 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest20 = null;
        explodedArchive11.manifest = manifest20;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive11.getFilteredArchive(entryRenameFilter22);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive11.getEntries();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(archive23);
        org.junit.Assert.assertNotNull(entryCollection24);
    }

    @Test
    public void test07710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07710");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive25.new FileEntry();
        java.util.jar.Manifest manifest29 = explodedArchive25.getManifest();
        java.io.File file30 = null;
        explodedArchive25.root = file30;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest29);
    }

    @Test
    public void test07711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07711");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getHost();
        java.lang.String str55 = uRL51.getPath();
        java.lang.String str56 = uRL51.getHost();
        java.lang.String str57 = uRL51.getHost();
        int int58 = uRL51.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test07712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07712");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/hi!:1]", "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", 35, "/archive://:32/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!:1]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07713");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL49, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL65 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str66 = uRL33.getQuery();
        boolean boolean67 = uRL9.sameFile(uRL33);
        int int68 = uRL9.getDefaultPort();
        java.lang.String str69 = uRL9.toExternalForm();
        java.net.URL uRL71 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive");
        java.lang.String str72 = uRL9.getPath();
        java.lang.String str73 = uRL9.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI74 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100" + "'", str69, "hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test07714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07714");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL29, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL17, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getQuery();
        java.io.File file45 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive46.getNestedArchives(entryFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap52);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive53.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive53.getNestedArchives(entryFilter55);
        java.util.jar.Manifest manifest57 = null;
        explodedArchive53.manifest = manifest57;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[://[archive://:10archive]:100archive://:10archive]:100", (int) '#', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL37, ":10", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "/[/hi!://:100/archive]", (int) ' ', "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL63 = new java.net.URL("archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[archive://:10:100]:1[hi!://:100/:100]", "/archive:0", 52, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.Class<?> wildcardClass64 = uRL63.getClass();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/:10");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[/[/hi!://:100/archive]]:32hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[archive://:10:100]:1[hi!://:100/:100]://[/archive:0]:52archive://:10archive");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test07715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07715");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str52 = uRL37.getQuery();
        boolean boolean53 = uRL27.sameFile(uRL37);
        int int54 = uRL37.getPort();
        java.lang.String str55 = uRL37.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test07716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07716");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07717");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test07718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07718");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getAuthority();
        java.lang.String str25 = uRL23.getRef();
        int int26 = uRL23.getDefaultPort();
        java.lang.String str27 = uRL23.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        int int40 = uRL37.getPort();
        java.lang.String str41 = uRL37.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getFile();
        int int70 = uRL68.getDefaultPort();
        java.lang.String str71 = uRL68.getRef();
        boolean boolean72 = uRL51.sameFile(uRL68);
        boolean boolean73 = uRL37.sameFile(uRL51);
        java.lang.String str74 = uRL51.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str80 = explodedArchive79.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection81 = explodedArchive79.getEntries();
        java.util.jar.Manifest manifest82 = explodedArchive79.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive79.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.lang.String str85 = uRL84.getAuthority();
        int int86 = uRL84.getPort();
        java.lang.String str87 = uRL84.getQuery();
        boolean boolean88 = uRL51.sameFile(uRL84);
        java.lang.String str89 = uRL51.getRef();
        boolean boolean90 = uRL23.sameFile(uRL51);
        java.lang.Class<?> wildcardClass91 = uRL51.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100/hi!://:100" + "'", str27, "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "archive" + "'", str80, "archive");
        org.junit.Assert.assertNotNull(entryCollection81);
        org.junit.Assert.assertNull(manifest82);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!:1" + "'", str85, "hi!:1");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test07719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07719");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        explodedArchive15.filtered = true;
        explodedArchive15.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "archive://:10:100", (int) (byte) 10, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals(uRL21.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[archive://:10:100]:10[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[archive://:10:100]" + "'", str22, "[archive://:10:100]");
    }

    @Test
    public void test07720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07720");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.net.URL uRL28 = new java.net.URL(uRL9, "/archive");
        java.lang.String str29 = uRL28.toExternalForm();
        java.lang.String str30 = uRL28.getUserInfo();
        java.net.URL uRL32 = new java.net.URL(uRL28, "hi!://:100/hi!://:100/hi!://:100");
        java.lang.String str33 = uRL28.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100/archive" + "'", str29, "hi!://:100/archive");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/archive" + "'", str33, "/archive");
    }

    @Test
    public void test07721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07721");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive19.manifest = manifest20;
        java.lang.String str22 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive19.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive19.new FileEntry();
        java.util.jar.Manifest manifest25 = explodedArchive19.getManifest();
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.jar.Manifest manifest29 = null;
        explodedArchive27.manifest = manifest29;
        java.io.File file31 = null;
        explodedArchive27.root = file31;
        boolean boolean33 = explodedArchive27.filtered;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        explodedArchive36.filtered = false;
        java.util.jar.Manifest manifest42 = explodedArchive36.manifest;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        explodedArchive36.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap55);
        explodedArchive27.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap55);
        explodedArchive19.entries = asciiBytesMap55;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
    }

    @Test
    public void test07722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07722");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        java.io.File file2 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(manifest4);
    }

    @Test
    public void test07723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07723");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getAuthority();
        int int45 = uRL41.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.lang.String str56 = explodedArchive50.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        boolean boolean59 = uRL41.sameFile(uRL58);
        java.net.URL uRL61 = new java.net.URL(uRL58, "/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + ":100" + "'", str44, ":100");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertEquals(uRL58.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals(uRL61.toString(), "archive://:0/[hi!://:100/hi!]");
    }

    @Test
    public void test07724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07724");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test07725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07725");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry8.name = asciiBytes9;
        java.io.File file11 = null;
        fileEntry8.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry8.getName();
        java.io.File file14 = fileEntry8.getFile();
        java.io.File file15 = fileEntry8.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test07726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07726");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive17.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest21 = null;
        explodedArchive17.manifest = manifest21;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive17.getEntries();
        java.io.File file24 = explodedArchive17.root;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(file24);
    }

    @Test
    public void test07727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07727");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07728");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL37.getPath();
        java.lang.String str51 = uRL37.getUserInfo();
        java.lang.String str52 = uRL37.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI53 = uRL37.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/archive" + "'", str50, "/archive");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!://:100/archive" + "'", str52, "hi!://:100/archive");
    }

    @Test
    public void test07729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07729");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = null;
        fileEntry4.file = file6;
        java.io.File file8 = fileEntry4.getFile();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry4.name = asciiBytes11;
        java.io.File file13 = fileEntry4.getFile();
        java.io.File file14 = fileEntry4.getFile();
        java.io.File file15 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test07730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07730");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        java.io.File file12 = fileEntry4.file;
        java.io.File file13 = null;
        fileEntry4.file = file13;
        java.io.File file15 = fileEntry4.getFile();
        java.io.File file16 = fileEntry4.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test07731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07731");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
    }

    @Test
    public void test07732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07732");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        explodedArchive4.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("", "hi!://:100/:100", (int) (byte) 100, "/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        java.net.URL uRL26 = new java.net.URL(uRL23, "hi!://:100/hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive36.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive36.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive36.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = explodedArchive36.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive36.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("archive://:10archive", "", (int) (byte) -1, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL("[hi!://:100/:100]:100", "", (int) (byte) 1, "[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL48 = new java.net.URL(uRL23, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str49 = uRL48.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive63.getNestedArchives(entryFilter65);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive63.getNestedArchives(entryFilter67);
        java.lang.String str69 = explodedArchive63.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL72 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL73 = new java.net.URL("/[/hi!://:100/archive]", "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", 10, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL74 = new java.net.URL(uRL48, "hi!://[hi!://:100/hi!]:0archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL23.toString(), "://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!://:100/:100]" + "'", str24, "[hi!://:100/:100]");
        org.junit.Assert.assertEquals(uRL26.toString(), "://[hi!://:100/:100]:100/hi!://hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertEquals(uRL46.toString(), "archive://:10archive:hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "[hi!://:100/:100]:100://:1[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL48.toString(), "://[hi!://:100/:100]:100/hi!://://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!://://[archive://:10archive]:100archive://:10archive" + "'", str49, "/hi!://://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "archive" + "'", str69, "archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL72.toString(), "/archive:///archive:0hi!://:100://[hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL73.toString(), "/[/hi!://:100/archive]://[/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!]:10[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals(uRL74.toString(), "://[hi!://:100/:100]:100/hi!://://[archive://:10archive]:100archive://hi!://[hi!://:100/hi!]:0archive://:10:100");
    }

    @Test
    public void test07733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07733");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getPath();
        java.net.URL uRL17 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:0");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getRef();
        java.lang.String str30 = uRL27.getRef();
        java.lang.String str31 = uRL27.toExternalForm();
        int int32 = uRL27.getDefaultPort();
        boolean boolean33 = uRL9.sameFile(uRL27);
        java.lang.String str34 = uRL27.getAuthority();
        java.lang.String str35 = uRL27.getFile();
        java.lang.String str36 = uRL27.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!://:100" + "'", str31, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ":100" + "'", str34, ":100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test07734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07734");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.io.File file8 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive9.new FileEntry();
        boolean boolean14 = explodedArchive9.filtered;
        boolean boolean15 = explodedArchive9.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive9.getNestedArchives(entryFilter16);
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        explodedArchive9.entries = asciiBytesMap29;
        explodedArchive0.entries = asciiBytesMap29;
        java.util.jar.Manifest manifest32 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest33 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest34 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.io.File file40 = explodedArchive35.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest45 = null;
        explodedArchive41.manifest = manifest45;
        java.lang.String str47 = explodedArchive41.toString();
        boolean boolean48 = explodedArchive41.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive49.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive49.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive49.entries;
        explodedArchive41.entries = asciiBytesMap55;
        explodedArchive35.entries = asciiBytesMap55;
        explodedArchive0.entries = asciiBytesMap55;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
    }

    @Test
    public void test07735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07735");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.net.URL uRL12 = new java.net.URL(uRL9, "://[hi!://:100/:100]:100/hi!://:100");
        java.lang.String str13 = uRL12.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals(uRL12.toString(), "hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/://[hi!://:100/:100]:100/hi!://:100" + "'", str13, "/://[hi!://:100/:100]:100/hi!://:100");
    }

    @Test
    public void test07736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07736");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getHost();
        java.lang.String str61 = uRL59.getUserInfo();
        java.lang.String str62 = uRL59.getRef();
        boolean boolean63 = uRL37.sameFile(uRL59);
        java.net.URL uRL65 = new java.net.URL(uRL59, "hi!://:100/archive:///archive:0hi!://:100");
        java.lang.String str66 = uRL65.getProtocol();
        java.lang.String str67 = uRL65.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection68 = uRL65.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test07737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07737");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getQuery();
        java.lang.String str49 = uRL47.getHost();
        java.lang.String str50 = uRL47.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str67 = explodedArchive66.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive66.getEntries();
        java.util.jar.Manifest manifest69 = explodedArchive66.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.lang.String str72 = uRL71.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str79 = explodedArchive78.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection80 = explodedArchive78.getEntries();
        java.util.jar.Manifest manifest81 = explodedArchive78.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str87 = explodedArchive86.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection88 = explodedArchive86.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler89 = explodedArchive86.new FilteredURLStreamHandler();
        java.net.URL uRL90 = new java.net.URL(uRL83, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler89);
        java.net.URL uRL91 = new java.net.URL(uRL71, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler89);
        java.net.URL uRL92 = new java.net.URL(uRL60, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler89);
        boolean boolean93 = uRL47.sameFile(uRL92);
        int int94 = uRL92.getDefaultPort();
        int int95 = uRL92.getDefaultPort();
        java.lang.String str96 = uRL92.getPath();
        boolean boolean97 = uRL9.sameFile(uRL92);
        java.lang.String str98 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "archive" + "'", str67, "archive");
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "archive" + "'", str79, "archive");
        org.junit.Assert.assertNotNull(entryCollection80);
        org.junit.Assert.assertNull(manifest81);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "archive" + "'", str87, "archive");
        org.junit.Assert.assertNotNull(entryCollection88);
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "/hi!" + "'", str96, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
    }

    @Test
    public void test07738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07738");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        java.lang.Class<?> wildcardClass14 = explodedArchive0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test07739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07739");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        boolean boolean14 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = null;
        explodedArchive18.entries = asciiBytesMap22;
        boolean boolean24 = explodedArchive18.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive18.new FileEntry();
        java.io.File file26 = null;
        java.io.File file27 = null;
        java.io.File file28 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive29.getNestedArchives(entryFilter33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap37);
        explodedArchive18.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive41.entries;
        java.io.File file43 = explodedArchive41.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.jar.Manifest manifest46 = null;
        explodedArchive44.manifest = manifest46;
        java.util.jar.Manifest manifest48 = explodedArchive44.getManifest();
        boolean boolean49 = explodedArchive44.filtered;
        java.util.jar.Manifest manifest50 = explodedArchive44.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive44.entries;
        java.io.File file52 = null;
        java.io.File file53 = null;
        java.io.File file54 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive55.getNestedArchives(entryFilter57);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive55.getNestedArchives(entryFilter59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file53, asciiBytesMap63);
        explodedArchive64.filtered = true;
        java.io.File file67 = null;
        explodedArchive64.root = file67;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive64.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive64.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, asciiBytesMap70);
        explodedArchive44.entries = asciiBytesMap70;
        explodedArchive41.entries = asciiBytesMap70;
        explodedArchive0.entries = asciiBytesMap70;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
    }

    @Test
    public void test07740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07740");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.toExternalForm();
        java.net.URL uRL42 = new java.net.URL(uRL39, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = uRL42.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!://:100/hi!://:100" + "'", str40, "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!://hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test07741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07741");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.lang.String str11 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive15.getNestedArchives(entryFilter22);
        java.io.File file24 = null;
        java.io.File file25 = null;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap35);
        explodedArchive15.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap35);
        java.util.jar.Manifest manifest40 = null;
        explodedArchive39.manifest = manifest40;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive39.getEntries();
        java.io.File file43 = null;
        explodedArchive39.root = file43;
        java.io.File file45 = null;
        explodedArchive39.root = file45;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive39.entries;
        explodedArchive8.entries = asciiBytesMap47;
        java.util.jar.Manifest manifest49 = explodedArchive8.getManifest();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNull(manifest49);
    }

    @Test
    public void test07742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07742");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        explodedArchive0.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        boolean boolean14 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07743");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        java.io.File file8 = fileEntry4.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test07744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07744");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test07745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07745");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        explodedArchive11.filtered = false;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive29.entries;
        explodedArchive0.entries = asciiBytesMap33;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
    }

    @Test
    public void test07746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07746");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive12.new FilteredURLStreamHandler();
        java.lang.String str20 = explodedArchive12.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        org.springframework.boot.loader.archive.Archive archive22 = explodedArchive12.getFilteredArchive(entryRenameFilter21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = null;
        explodedArchive23.entries = asciiBytesMap27;
        java.io.File file29 = explodedArchive23.root;
        java.io.File file30 = explodedArchive23.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        explodedArchive23.entries = asciiBytesMap37;
        explodedArchive23.filtered = false;
        java.lang.String str41 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive23.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        boolean boolean48 = explodedArchive43.filtered;
        java.util.jar.Manifest manifest49 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive50.getNestedArchives(entryFilter57);
        java.io.File file59 = null;
        java.io.File file60 = null;
        java.io.File file61 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, asciiBytesMap68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap70);
        explodedArchive50.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive50.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest75 = explodedArchive50.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.jar.Manifest manifest78 = null;
        explodedArchive76.manifest = manifest78;
        java.util.jar.Manifest manifest80 = explodedArchive76.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive76.entries;
        explodedArchive50.entries = asciiBytesMap81;
        explodedArchive43.entries = asciiBytesMap81;
        explodedArchive23.entries = asciiBytesMap81;
        explodedArchive12.entries = asciiBytesMap81;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap81);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(archive22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
    }

    @Test
    public void test07747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07747");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL26, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL55 = new java.net.URL(uRL9, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str56 = uRL55.getAuthority();
        java.net.URL uRL58 = new java.net.URL(uRL55, ":100");
        java.lang.String str59 = uRL55.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive65.getNestedArchives(entryFilter67);
        java.util.jar.Manifest manifest69 = null;
        explodedArchive65.manifest = manifest69;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("/hi!:1", "hi!://:100/://[archive://:10archive]:100archive://:10archive", (int) ' ', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.net.URL uRL73 = new java.net.URL(uRL55, "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str74 = uRL73.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ":100" + "'", str56, ":100");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!://:100/hi!" + "'", str59, "/hi!://:100/hi!");
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertEquals(uRL72.toString(), "/hi!:1://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!://:100/hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
    }

    @Test
    public void test07748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07748");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[archive://:10:100]", "hi!://:100/hi!://:100/hi!://:100", 32, "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [archive://:10:100]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07749");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry10.name;
        java.io.File file12 = fileEntry10.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry10.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry10.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test07750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07750");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive11.new FilteredURLStreamHandler();
        java.lang.String str19 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter20 = null;
        org.springframework.boot.loader.archive.Archive archive21 = explodedArchive11.getFilteredArchive(entryRenameFilter20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = null;
        explodedArchive22.entries = asciiBytesMap26;
        java.io.File file28 = explodedArchive22.root;
        java.io.File file29 = explodedArchive22.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        explodedArchive22.entries = asciiBytesMap36;
        explodedArchive22.filtered = false;
        java.lang.String str40 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive22.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        boolean boolean47 = explodedArchive42.filtered;
        java.util.jar.Manifest manifest48 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive49.getNestedArchives(entryFilter53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive49.getNestedArchives(entryFilter56);
        java.io.File file58 = null;
        java.io.File file59 = null;
        java.io.File file60 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive61.getNestedArchives(entryFilter63);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive61.getNestedArchives(entryFilter65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive61.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap67);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap69);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, asciiBytesMap69);
        explodedArchive49.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive49.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest74 = explodedArchive49.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.jar.Manifest manifest77 = null;
        explodedArchive75.manifest = manifest77;
        java.util.jar.Manifest manifest79 = explodedArchive75.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive75.entries;
        explodedArchive49.entries = asciiBytesMap80;
        explodedArchive42.entries = asciiBytesMap80;
        explodedArchive22.entries = asciiBytesMap80;
        explodedArchive11.entries = asciiBytesMap80;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap85 = explodedArchive11.entries;
        java.io.File file86 = null;
        explodedArchive11.root = file86;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(archive21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertNull(manifest74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNotNull(asciiBytesMap85);
    }

    @Test
    public void test07751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07751");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://:100/hi!://:100/hi!", ":52", 10, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07752");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        java.lang.String str16 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        java.lang.String str29 = uRL26.getRef();
        java.lang.String str30 = uRL26.toExternalForm();
        boolean boolean31 = uRL13.sameFile(uRL26);
        java.lang.String str32 = uRL26.getUserInfo();
        java.lang.String str33 = uRL26.getHost();
        java.lang.String str34 = uRL26.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.lang.String str42 = explodedArchive36.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL26.getHost();
        java.lang.String str46 = uRL26.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getQuery();
        java.lang.String str63 = uRL61.getHost();
        int int64 = uRL61.getPort();
        java.lang.String str65 = uRL61.getQuery();
        java.net.URL uRL67 = new java.net.URL(uRL61, "");
        java.io.File file69 = null;
        java.io.File file70 = null;
        java.io.File file71 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive72.getNestedArchives(entryFilter74);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive72.getNestedArchives(entryFilter76);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap78 = explodedArchive72.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file71, asciiBytesMap78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive79.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive(file70, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file69, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive82.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL(uRL67, "", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.net.URL uRL85 = new java.net.URL("hi!", "hi!://:100/hi!", (int) (short) 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.net.URL uRL86 = new java.net.URL(uRL26, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.net.URL uRL87 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://[hi!://:100/hi!]:0archive://:10:100", 1, "[hi!://:100/archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.lang.String str88 = uRL87.toExternalForm();
        java.lang.String str89 = uRL87.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!://:100" + "'", str30, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ":100" + "'", str46, ":100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertNotNull(asciiBytesMap78);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL86.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100" + "'", str88, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100" + "'", str89, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100");
    }

    @Test
    public void test07753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07753");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        java.util.jar.Manifest manifest17 = explodedArchive10.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive10.entries;
        java.util.jar.Manifest manifest19 = explodedArchive10.getManifest();
        boolean boolean20 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        org.springframework.boot.loader.archive.Archive archive22 = explodedArchive10.getFilteredArchive(entryRenameFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive10.entries;
        explodedArchive0.entries = asciiBytesMap23;
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL26 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(archive9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(archive22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNull(manifest25);
    }

    @Test
    public void test07754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07754");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getPath();
        int int26 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        java.lang.String str39 = uRL37.getFile();
        java.lang.String str40 = uRL37.getHost();
        java.lang.String str41 = uRL37.getRef();
        java.net.URL uRL43 = new java.net.URL(uRL37, "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        java.io.File file45 = null;
        java.io.File file46 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive47.getNestedArchives(entryFilter49);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive47.getNestedArchives(entryFilter51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive47.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap55);
        explodedArchive56.filtered = true;
        java.io.File file59 = null;
        explodedArchive56.root = file59;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive56.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection62 = explodedArchive56.getEntries();
        java.lang.String str63 = explodedArchive56.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter64 = null;
        org.springframework.boot.loader.archive.Archive archive65 = explodedArchive56.getFilteredArchive(entryRenameFilter64);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL43, "/hi!://:100/hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL9, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(entryCollection62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(archive65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/[hi!://:100/hi!]:10");
    }

    @Test
    public void test07755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07755");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive0.toString();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest13 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(manifest13);
    }

    @Test
    public void test07756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07756");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.net.URL uRL44 = new java.net.URL(uRL41, "hi!");
        java.lang.String str45 = uRL44.getProtocol();
        java.lang.String str46 = uRL44.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
    }

    @Test
    public void test07757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07757");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
    }

    @Test
    public void test07758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07758");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.toExternalForm();
        java.lang.String str26 = uRL23.getRef();
        java.lang.String str27 = uRL23.getRef();
        java.lang.String str28 = uRL23.getPath();
        java.lang.String str29 = uRL23.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!://:100/hi!://:100" + "'", str25, "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/hi!://:100" + "'", str28, "/hi!://:100");
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test07759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07759");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getHost();
        java.lang.String str18 = uRL9.getProtocol();
        java.lang.String str19 = uRL9.toExternalForm();
        java.lang.String str20 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.net.URL uRL32 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getRef();
        java.lang.String str35 = uRL32.getPath();
        java.lang.String str36 = uRL32.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100" + "'", str19, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str33, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str35, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ":100" + "'", str36, ":100");
    }

    @Test
    public void test07760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07760");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        java.io.File file10 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL11 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archive9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test07761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07761");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry8.name = asciiBytes9;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry8.name = asciiBytes12;
        java.io.File file14 = fileEntry8.getFile();
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test07762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07762");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        boolean boolean7 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.lang.String str14 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry15.getName();
        java.io.File file17 = null;
        fileEntry15.file = file17;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive19 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test07763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07763");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive12.getNestedArchives(entryFilter13);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archiveList14);
    }

    @Test
    public void test07764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07764");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(archive10);
    }

    @Test
    public void test07765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07765");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://[hi!://:100/hi!]:1/archive", "hi!://:100/hi!://:100/hi!://:100/hi!", ":52");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://[hi!://:100/hi!]:1/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07766");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[archive://:10:100]:1");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07767");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL42 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str43 = uRL42.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.getPath();
        java.lang.String str70 = uRL67.getPath();
        java.lang.String str71 = uRL67.toExternalForm();
        java.lang.String str72 = uRL67.getRef();
        java.lang.String str73 = uRL67.getPath();
        boolean boolean74 = uRL42.sameFile(uRL67);
        int int75 = uRL67.getDefaultPort();
        java.lang.String str76 = uRL67.getPath();
        java.lang.String str77 = uRL67.getUserInfo();
        java.lang.String str78 = uRL67.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter81 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList82 = explodedArchive79.getNestedArchives(entryFilter81);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry83 = explodedArchive79.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes84 = fileEntry83.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes85 = null;
        fileEntry83.name = asciiBytes85;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes87 = fileEntry83.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes88 = fileEntry83.getName();
        java.io.File file89 = null;
        fileEntry83.file = file89;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes91 = fileEntry83.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes92 = fileEntry83.name;
        java.io.File file93 = fileEntry83.file;
        java.io.File file94 = fileEntry83.file;
        boolean boolean95 = uRL67.equals((java.lang.Object) fileEntry83);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "archive://:10:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!://:100/hi!" + "'", str71, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ":100" + "'", str78, ":100");
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(archiveList82);
        org.junit.Assert.assertNull(asciiBytes84);
        org.junit.Assert.assertNull(asciiBytes87);
        org.junit.Assert.assertNull(asciiBytes88);
        org.junit.Assert.assertNull(asciiBytes91);
        org.junit.Assert.assertNull(asciiBytes92);
        org.junit.Assert.assertNull(file93);
        org.junit.Assert.assertNull(file94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test07768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07768");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", (int) (short) -1, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07769");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.toExternalForm();
        java.lang.String str12 = uRL9.toExternalForm();
        java.lang.String str13 = uRL9.toExternalForm();
        java.net.Proxy proxy14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection15 = uRL9.openConnection(proxy14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!://:100" + "'", str11, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100" + "'", str12, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
    }

    @Test
    public void test07770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07770");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
    }

    @Test
    public void test07771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07771");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getQuery();
        java.lang.String str13 = uRL11.getPath();
        java.lang.String str14 = uRL11.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test07772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07772");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = explodedArchive11.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(archiveList16);
    }

    @Test
    public void test07773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07773");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        java.lang.String str15 = explodedArchive0.toString();
        java.util.jar.Manifest manifest16 = null;
        explodedArchive0.manifest = manifest16;
        java.lang.String str18 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
    }

    @Test
    public void test07774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07774");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.io.File file12 = null;
        explodedArchive0.root = file12;
        java.io.File file14 = null;
        explodedArchive0.root = file14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
    }

    @Test
    public void test07775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07775");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive11.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        boolean boolean34 = explodedArchive33.filtered;
        explodedArchive33.filtered = false;
        boolean boolean37 = explodedArchive33.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive33.entries;
        explodedArchive11.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive11.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive71.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL(uRL68, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL76 = new java.net.URL(uRL56, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL77 = new java.net.URL("hi!:1", "/archive", (int) (short) 0, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.lang.String str78 = uRL77.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection79 = filteredURLStreamHandler42.openConnection(uRL77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!:1:///archive:0archive");
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test07776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07776");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        int int11 = uRL9.getPort();
        java.lang.String str12 = uRL9.getFile();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getUserInfo();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100" + "'", str16, "hi!://:100");
    }

    @Test
    public void test07777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07777");
        java.net.URLConnection.setDefaultRequestProperty("/hi!://:100/hi!://:100", "archive://:10archive://:100");
    }

    @Test
    public void test07778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07778");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = null;
        explodedArchive4.entries = asciiBytesMap8;
        java.io.File file10 = explodedArchive4.root;
        java.io.File file11 = explodedArchive4.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        explodedArchive4.entries = asciiBytesMap18;
        explodedArchive4.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("/hi!://:100/hi!://:100/archive", "://[hi!://:100/:100]:100/hi!://:100", (int) (byte) 10, "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive32.getFilteredArchive(entryRenameFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", "hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", 52, "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL("hi!://:100/:100", "[hi!://:100/hi!]", (int) (byte) -1, ":52", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection40 = filteredURLStreamHandler22.openConnection(uRL39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals(uRL23.toString(), "/hi!://:100/hi!://:100/archive://[://[hi!://:100/:100]:100/hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNotNull(archive36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100://[hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]:52hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/:100://[hi!://:100/hi!]:52");
    }

    @Test
    public void test07779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07779");
        java.net.URLConnection.setDefaultRequestProperty("://[archive://:10archive]:100archive://:10archive", ":10");
    }

    @Test
    public void test07780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07780");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getHost();
        int int41 = uRL9.getPort();
        int int42 = uRL9.getPort();
        java.lang.String str43 = uRL9.getAuthority();
        java.lang.String str44 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getFile();
        int int57 = uRL55.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getQuery();
        java.lang.String str70 = uRL68.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL82 = new java.net.URL(uRL68, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL83 = new java.net.URL(uRL55, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL84 = new java.net.URL(uRL9, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.lang.String str85 = uRL9.toExternalForm();
        java.lang.String str86 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!://:100" + "'", str85, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!://:100" + "'", str86, "hi!://:100");
    }

    @Test
    public void test07781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07781");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive7.new FilteredURLStreamHandler();
        java.lang.String str15 = explodedArchive7.toString();
        java.io.File file16 = null;
        explodedArchive7.root = file16;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive7.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive7.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive7.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive21 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(entryCollection19);
    }

    @Test
    public void test07782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07782");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.lang.String str12 = explodedArchive4.toString();
        java.io.File file13 = explodedArchive4.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive4.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive4.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[hi!://:100/:100]:100", 0, "/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertEquals(uRL18.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/:100]:100:0/hi!://:100/hi!");
    }

    @Test
    public void test07783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07783");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: [hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07784");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getProtocol();
        java.lang.String str28 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test07785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07785");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive9.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive9.getNestedArchives(entryFilter18);
        explodedArchive9.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive9.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive9.getEntries();
        java.lang.String str24 = explodedArchive9.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive9.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive26 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
    }

    @Test
    public void test07786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07786");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL68 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL69 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str70 = uRL69.getProtocol();
        int int71 = uRL69.getDefaultPort();
        boolean boolean72 = uRL9.sameFile(uRL69);
        java.lang.String str73 = uRL69.getFile();
        java.lang.String str74 = uRL69.getAuthority();
        java.net.Proxy proxy75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection76 = uRL69.openConnection(proxy75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL68.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ":100" + "'", str74, ":100");
    }

    @Test
    public void test07787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07787");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        java.io.File file10 = explodedArchive0.root;
        boolean boolean11 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        java.lang.Class<?> wildcardClass16 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test07788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07788");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07789");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        explodedArchive12.filtered = false;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive12.manifest = manifest20;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive47.entries;
        explodedArchive12.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap48);
        explodedArchive0.entries = asciiBytesMap48;
        java.util.jar.Manifest manifest52 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest53 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest54 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file56 = explodedArchive0.root;
        java.util.jar.Manifest manifest57 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest58 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertNull(manifest58);
    }

    @Test
    public void test07790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07790");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/://[hi!://:100/:100]:100/hi!://:100", "://[hi!://:100/:100]:100/hi!://:100");
    }

    @Test
    public void test07791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07791");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        explodedArchive17.filtered = true;
        java.io.File file22 = null;
        explodedArchive17.root = file22;
        java.util.jar.Manifest manifest24 = explodedArchive17.getManifest();
        java.io.File file25 = null;
        explodedArchive17.root = file25;
        boolean boolean27 = explodedArchive17.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test07792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07792");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getAuthority();
        java.lang.String str43 = uRL41.getProtocol();
        java.lang.String str44 = uRL41.toExternalForm();
        java.net.URL uRL46 = new java.net.URL(uRL41, "/hi!://:100/hi!");
        java.net.Proxy proxy47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection48 = uRL46.openConnection(proxy47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":100" + "'", str42, ":100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!://:100/hi!" + "'", str44, "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!://:100/hi!");
    }

    @Test
    public void test07793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07793");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNull(manifest11);
    }

    @Test
    public void test07794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07794");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL15.getQuery();
        java.lang.String str34 = uRL15.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = null;
        explodedArchive36.entries = asciiBytesMap38;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive36.manifest = manifest40;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive36.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest43 = explodedArchive36.manifest;
        java.io.File file44 = explodedArchive36.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL15, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.Class<?> wildcardClass47 = filteredURLStreamHandler45.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test07795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07795");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getUserInfo();
        java.lang.String str42 = uRL22.getUserInfo();
        java.lang.String str43 = uRL22.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI44 = uRL22.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test07796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07796");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test07797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07797");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getAuthority();
        int int45 = uRL41.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.lang.String str56 = explodedArchive50.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        boolean boolean59 = uRL41.sameFile(uRL58);
        java.lang.String str60 = uRL41.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + ":100" + "'", str44, ":100");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertEquals(uRL58.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test07798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07798");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        int int12 = uRL9.getDefaultPort();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL29, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL45 = new java.net.URL(uRL9, "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.io.File file50 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive51.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive51.getNestedArchives(entryFilter55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap57);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive58.getEntries();
        java.io.File file60 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive58.getNestedArchives(entryFilter61);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!://:100/archive:///archive:0hi!://:100", "/archive", (-1), "[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean65 = uRL9.equals((java.lang.Object) "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL44.toString(), "/hi!://:100://archive:1/archive");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/[hi!://:100/:100]:100");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/archive:///archive:0hi!://:100:///archive[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test07799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07799");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.io.File file15 = null;
        explodedArchive8.root = file15;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive8.getFilteredArchive(entryRenameFilter17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        explodedArchive19.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive19.getNestedArchives(entryFilter28);
        explodedArchive19.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive19.entries;
        explodedArchive8.entries = asciiBytesMap32;
        java.io.File file34 = explodedArchive8.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = explodedArchive8.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test07800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07800");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.lang.String str9 = explodedArchive0.toString();
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL12 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
    }

    @Test
    public void test07801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07801");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        java.util.jar.Manifest manifest8 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        java.io.File file13 = fileEntry12.file;
        java.io.File file14 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test07802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07802");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = null;
        fileEntry4.file = file6;
        java.io.File file8 = fileEntry4.getFile();
        java.io.File file9 = fileEntry4.file;
        java.io.File file10 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test07803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07803");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07804");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive12.new FileEntry();
        explodedArchive12.filtered = false;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive18.new FileEntry();
        java.lang.String str23 = explodedArchive18.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive18.new FileEntry();
        java.util.jar.Manifest manifest25 = null;
        explodedArchive18.manifest = manifest25;
        java.lang.String str27 = explodedArchive18.toString();
        java.io.File file28 = null;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive30.getNestedArchives(entryFilter37);
        java.io.File file39 = null;
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap50);
        explodedArchive30.entries = asciiBytesMap50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap55);
        explodedArchive18.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap55);
        explodedArchive12.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap55);
        java.lang.Class<?> wildcardClass62 = explodedArchive61.getClass();
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test07805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07805");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        java.lang.String str15 = uRL13.getQuery();
        java.lang.String str16 = uRL13.getRef();
        java.lang.String str17 = uRL13.toExternalForm();
        java.lang.String str18 = uRL13.getPath();
        java.lang.String str19 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        int int41 = uRL38.getPort();
        java.lang.String str42 = uRL38.getProtocol();
        java.lang.String str43 = uRL38.getPath();
        java.lang.String str44 = uRL38.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getFile();
        int int57 = uRL55.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getQuery();
        java.lang.String str70 = uRL68.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL82 = new java.net.URL(uRL68, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL83 = new java.net.URL(uRL55, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL84 = new java.net.URL(uRL38, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL85 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL86 = new java.net.URL("/hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 52, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL87 = new java.net.URL(uRL13, "/archive://[hi!://:100/hi!]:1hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL88 = new java.net.URL("[/:100]:0", "/hi!://[hi!://:100/hi!]:1/archive", 97, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI89 = uRL88.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in path at index 0: [/:100]:0://[/hi!://[hi!://:100/hi!]:1/archive]:97archive://:10:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!://:100" + "'", str17, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + ":100" + "'", str44, ":100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL86.toString(), "/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:52hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL88.toString(), "[/:100]:0://[/hi!://[hi!://:100/hi!]:1/archive]:97archive://:10:100");
    }

    @Test
    public void test07806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07806");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getQuery();
        java.lang.String str36 = uRL34.getRef();
        int int37 = uRL34.getPort();
        java.lang.String str38 = uRL34.getProtocol();
        java.lang.String str39 = uRL34.getPath();
        java.lang.String str40 = uRL34.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getFile();
        int int53 = uRL51.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getQuery();
        java.lang.String str66 = uRL64.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL(uRL51, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL80 = new java.net.URL(uRL34, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL81 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL82 = new java.net.URL("/hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 52, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL83 = new java.net.URL(uRL9, "/archive://[hi!://:100/hi!]:1hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str84 = uRL83.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL81.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL82.toString(), "/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:52hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ":100" + "'", str84, ":100");
    }

    @Test
    public void test07807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07807");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry4.name = asciiBytes14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry4.name;
        java.io.File file17 = null;
        fileEntry4.file = file17;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test07808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07808");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        int int14 = uRL9.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = null;
        explodedArchive19.entries = asciiBytesMap23;
        boolean boolean25 = explodedArchive19.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive19.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = fileEntry26.name;
        java.io.File file28 = null;
        fileEntry26.file = file28;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes30 = fileEntry26.getName();
        java.lang.Class<?> wildcardClass31 = fileEntry26.getClass();
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap50);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL54 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str55 = uRL54.toExternalForm();
        java.lang.String str56 = uRL54.getAuthority();
        java.lang.Class<?> wildcardClass57 = uRL54.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[] { wildcardClass31, wildcardClass57 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = uRL17.getContent(classArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(asciiBytes27);
        org.junit.Assert.assertNull(asciiBytes30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertEquals(uRL53.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str55, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[://[archive://:10archive]:100archive://:10archive]:0" + "'", str56, "[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray58);
    }

    @Test
    public void test07809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07809");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        boolean boolean30 = uRL9.sameFile(uRL26);
        int int31 = uRL26.getPort();
        java.lang.String str32 = uRL26.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test07810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07810");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        java.io.File file20 = explodedArchive19.root;
        explodedArchive19.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        explodedArchive23.filtered = false;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive23.manifest = manifest31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive23.new FileEntry();
        java.io.File file34 = fileEntry33.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = fileEntry33.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive36 = explodedArchive19.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(asciiBytes35);
    }

    @Test
    public void test07811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07811");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        boolean boolean18 = explodedArchive0.filtered;
        explodedArchive0.filtered = true;
        boolean boolean21 = explodedArchive0.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test07812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07812");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive0.manifest = manifest13;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
    }

    @Test
    public void test07813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07813");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        boolean boolean7 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(archive9);
    }

    @Test
    public void test07814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07814");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test07815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07815");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        java.io.File file17 = null;
        fileEntry16.file = file17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry16.name;
        java.io.File file20 = fileEntry16.getFile();
        java.io.File file21 = null;
        fileEntry16.file = file21;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = fileEntry16.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = fileEntry16.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(asciiBytes23);
        org.junit.Assert.assertNull(asciiBytes24);
    }

    @Test
    public void test07816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07816");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        boolean boolean12 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest13 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive0.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fileEntry14.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(manifest13);
    }

    @Test
    public void test07817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07817");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        boolean boolean4 = explodedArchive2.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive2.getFilteredArchive(entryRenameFilter5);
        explodedArchive2.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive2.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive12.getFilteredArchive(entryRenameFilter13);
        java.io.File file15 = explodedArchive12.root;
        explodedArchive12.filtered = true;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive12.manifest = manifest18;
        java.util.jar.Manifest manifest20 = explodedArchive12.getManifest();
        java.util.jar.Manifest manifest21 = explodedArchive12.manifest;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(manifest21);
    }

    @Test
    public void test07818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07818");
        java.net.URLConnection.setDefaultRequestProperty("/archive", "hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test07819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07819");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        java.lang.String str39 = uRL37.toExternalForm();
        java.lang.String str40 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive42.new FileEntry();
        boolean boolean47 = explodedArchive42.filtered;
        boolean boolean48 = explodedArchive42.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive42.getNestedArchives(entryFilter49);
        java.util.jar.Manifest manifest51 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL(uRL37, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.Proxy proxy54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection55 = uRL37.openConnection(proxy54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/archive" + "'", str39, "hi!://:100/archive");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/:100");
    }

    @Test
    public void test07820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07820");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry20.getName();
        java.io.File file22 = null;
        fileEntry20.file = file22;
        java.io.File file24 = fileEntry20.file;
        java.io.File file25 = fileEntry20.getFile();
        java.io.File file26 = fileEntry20.getFile();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(asciiBytes21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
    }

    @Test
    public void test07821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07821");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        java.lang.String str26 = uRL24.getHost();
        int int27 = uRL24.getPort();
        java.lang.String str28 = uRL24.getQuery();
        java.net.URL uRL30 = new java.net.URL(uRL24, "");
        java.lang.String str31 = uRL30.getPath();
        int int32 = uRL30.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getAuthority();
        int int56 = uRL54.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL(uRL54, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL68 = new java.net.URL(uRL30, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        int int69 = uRL30.getDefaultPort();
        java.net.URL uRL71 = new java.net.URL(uRL30, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive");
        boolean boolean72 = uRL9.equals((java.lang.Object) "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ":100" + "'", str55, ":100");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test07822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07822");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.name;
        java.io.File file12 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test07823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07823");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", "hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07824");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest16 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive11.getFilteredArchive(entryRenameFilter17);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive11.getFilteredArchive(entryRenameFilter19);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive11.getEntries();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertNotNull(entryCollection21);
    }

    @Test
    public void test07825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07825");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getQuery();
        java.net.URL uRL26 = new java.net.URL(uRL9, "/hi!");
        int int27 = uRL9.getPort();
        java.net.Proxy proxy28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection29 = uRL9.openConnection(proxy28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    }

    @Test
    public void test07826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07826");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getPath();
        boolean boolean26 = uRL13.sameFile(uRL23);
        java.net.URLStreamHandler uRLStreamHandler28 = null;
        java.net.URL uRL29 = new java.net.URL(uRL23, "", uRLStreamHandler28);
        int int30 = uRL29.getPort();
        java.lang.String str31 = uRL29.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = null;
        explodedArchive41.entries = asciiBytesMap43;
        java.util.jar.Manifest manifest45 = null;
        explodedArchive41.manifest = manifest45;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL29, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL51 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/:100", (int) (byte) 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str52 = uRL51.getQuery();
        java.net.Proxy proxy53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection54 = uRL51.openConnection(proxy53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test07827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07827");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry12.name = asciiBytes14;
        java.io.File file16 = fileEntry12.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = fileEntry12.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test07828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07828");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry2.getName();
        java.io.File file8 = fileEntry2.getFile();
        java.io.File file9 = fileEntry2.getFile();
        java.io.File file10 = null;
        fileEntry2.file = file10;
        java.io.File file12 = fileEntry2.getFile();
        java.io.File file13 = fileEntry2.file;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test07829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07829");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getHost();
        int int26 = uRL23.getPort();
        java.lang.String str27 = uRL23.getQuery();
        java.net.URL uRL29 = new java.net.URL(uRL23, "");
        java.lang.String str30 = uRL29.getPath();
        int int31 = uRL29.getDefaultPort();
        java.lang.String str32 = uRL29.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str44 = uRL43.getPath();
        java.lang.String str45 = uRL43.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL43, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL29, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL59 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str60 = uRL59.getProtocol();
        int int61 = uRL59.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ":100" + "'", str12, ":100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    }

    @Test
    public void test07830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07830");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        int int14 = uRL9.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL42 = new java.net.URL(uRL28, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str43 = uRL28.getAuthority();
        java.lang.String str44 = uRL28.getUserInfo();
        java.lang.String str45 = uRL28.getRef();
        boolean boolean46 = uRL17.sameFile(uRL28);
        int int47 = uRL17.getPort();
        java.lang.String str48 = uRL17.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test07831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07831");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        explodedArchive0.filtered = true;
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(archive9);
        org.junit.Assert.assertNotNull(archiveList11);
    }

    @Test
    public void test07832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07832");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive4.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("archive://:10archive", "archive://:10archive", (int) (byte) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getHost();
        int int26 = uRL23.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        java.util.jar.Manifest manifest34 = explodedArchive31.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getFile();
        int int38 = uRL36.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL49, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL(uRL36, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str65 = uRL36.toExternalForm();
        boolean boolean66 = uRL23.sameFile(uRL36);
        java.lang.String str67 = uRL36.getAuthority();
        boolean boolean68 = uRL13.sameFile(uRL36);
        java.lang.String str69 = uRL36.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str75 = explodedArchive74.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = null;
        explodedArchive74.entries = asciiBytesMap76;
        java.util.jar.Manifest manifest78 = null;
        explodedArchive74.manifest = manifest78;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive74.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.lang.String str82 = uRL81.getQuery();
        java.lang.String str83 = uRL81.getPath();
        java.lang.String str84 = uRL81.getAuthority();
        java.lang.String str85 = uRL81.getPath();
        java.lang.String str86 = uRL81.getRef();
        boolean boolean87 = uRL36.equals((java.lang.Object) str86);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals(uRL13.toString(), "archive://:10archive://[archive://:10archive]:1/archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!://:100" + "'", str65, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + ":100" + "'", str67, ":100");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "archive" + "'", str75, "archive");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!://:100/hi!" + "'", str83, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[hi!://:100/hi!]:0" + "'", str84, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!://:100/hi!" + "'", str85, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test07833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07833");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07834");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry2.getName();
        java.io.File file6 = fileEntry2.getFile();
        java.io.File file7 = fileEntry2.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry2.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry2.name;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes10);
    }

    @Test
    public void test07835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07835");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.io.File file4 = null;
        explodedArchive0.root = file4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive22.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive22.manifest = manifest26;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive22.entries;
        explodedArchive0.entries = asciiBytesMap29;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
    }

    @Test
    public void test07836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07836");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        boolean boolean8 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.lang.Class<?> wildcardClass10 = explodedArchive0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test07837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07837");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL54, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL69 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL70 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL71 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        boolean boolean72 = uRL32.sameFile(uRL71);
        java.lang.String str73 = uRL71.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection74 = uRL71.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!" + "'", str73, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test07838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07838");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getDefaultPort();
        java.lang.String str45 = uRL41.getAuthority();
        java.lang.String str46 = uRL41.toExternalForm();
        java.net.Proxy proxy47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection48 = uRL41.openConnection(proxy47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!://:100/hi!" + "'", str46, "hi!://:100/hi!");
    }

    @Test
    public void test07839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07839");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("archive://:10archive", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL10.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive://:10archive" + "'", str11, "archive://:10archive");
    }

    @Test
    public void test07840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07840");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test07841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07841");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        explodedArchive16.filtered = false;
        java.util.jar.Manifest manifest22 = explodedArchive16.manifest;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        explodedArchive16.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!://:100", "hi!://:100/hi!://:100/hi!://hi!", (int) (byte) 0, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL("hi!://:100/[/:100]:0", "hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]", (int) '4', "hi!://:100/hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/hi!://:100/:100", 32, "/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL38 = new java.net.URL("hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", "/archive:///archive:0/:100", (int) (byte) 1, ":100://[hi!://:100/hi!]:0archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        int int39 = uRL38.getPort();
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/[/:100]:0://[hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]]:52hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/hi!://:100/:100]:32/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://[/archive:///archive:0/:100]:1:100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test07842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07842");
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL26 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL27 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str28 = uRL27.getProtocol();
        java.net.Proxy proxy29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection30 = uRL27.openConnection(proxy29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertEquals(uRL25.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL27.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/hi!" + "'", str28, "/hi!");
    }

    @Test
    public void test07843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07843");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://[hi!://:100/hi!]:0archive://:10:100", "", (int) 'a', "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://[hi!://:100/hi!]:0archive://:10:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07844");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL42 = new java.net.URL(uRL28, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        int int43 = uRL42.getPort();
        java.lang.String str44 = uRL42.getPath();
        java.lang.String str45 = uRL42.getPath();
        java.lang.String str46 = uRL42.toExternalForm();
        java.lang.String str47 = uRL42.getRef();
        java.lang.String str48 = uRL42.getPath();
        boolean boolean49 = uRL16.sameFile(uRL42);
        java.lang.String str50 = uRL42.getRef();
        java.lang.String str51 = uRL42.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/hi!" + "'", str44, "/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!://:100/hi!" + "'", str46, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ":100" + "'", str51, ":100");
    }

    @Test
    public void test07845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07845");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive8.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        boolean boolean13 = explodedArchive8.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive8.getFilteredArchive(entryRenameFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive8.manifest = manifest16;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(archive15);
    }

    @Test
    public void test07846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07846");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getHost();
        java.lang.String str40 = uRL9.getProtocol();
        java.lang.String str41 = uRL9.toExternalForm();
        java.lang.String str42 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100" + "'", str41, "hi!://:100");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test07847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07847");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getDefaultPort();
        java.lang.String str45 = uRL41.getAuthority();
        java.lang.String str46 = uRL41.getRef();
        java.net.URL uRL48 = new java.net.URL(uRL41, "[hi!://:100/hi!]:100");
        int int49 = uRL48.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/[hi!://:100/hi!]:100");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
    }

    @Test
    public void test07848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07848");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        java.io.File file6 = fileEntry4.getFile();
        java.io.File file7 = fileEntry4.getFile();
        java.io.File file8 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test07849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07849");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test07850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07850");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        java.io.File file12 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive13.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive13.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        explodedArchive0.entries = asciiBytesMap19;
        java.io.File file21 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file21, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
    }

    @Test
    public void test07851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07851");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://hi!:1hi!", "hi!://:100/hi!:1", "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://hi!:1hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07852");
        java.io.File file8 = null;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL22 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str23 = uRL22.toExternalForm();
        java.lang.String str24 = uRL22.getQuery();
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive26.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive26.getNestedArchives(entryFilter31);
        java.util.jar.Manifest manifest33 = null;
        explodedArchive26.manifest = manifest33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive26.new FileEntry();
        java.io.File file36 = explodedArchive26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive26.new FileEntry();
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive39.new FileEntry();
        java.util.jar.Manifest manifest42 = explodedArchive39.getManifest();
        java.util.jar.Manifest manifest43 = explodedArchive39.manifest;
        java.io.File file44 = null;
        explodedArchive39.root = file44;
        explodedArchive39.filtered = true;
        java.io.File file48 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        explodedArchive49.filtered = false;
        java.util.jar.Manifest manifest55 = explodedArchive49.manifest;
        java.io.File file56 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive57.getNestedArchives(entryFilter61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive64.entries;
        explodedArchive49.entries = asciiBytesMap65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, asciiBytesMap65);
        java.util.jar.Manifest manifest68 = null;
        explodedArchive67.manifest = manifest68;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive67.entries;
        explodedArchive39.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap70);
        explodedArchive26.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap70);
        java.lang.Class<?> wildcardClass75 = asciiBytesMap70.getClass();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet78 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet78, strArray77);
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet78;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet78;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet78;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet78;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet78;
        java.lang.Class<?> wildcardClass85 = strSet78.getClass();
        java.lang.Class[] classArray86 = new java.lang.Class[] { wildcardClass75, wildcardClass85 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = uRL22.getContent(classArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals(uRL21.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str23, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(classArray86);
    }

    @Test
    public void test07853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07853");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str44 = uRL43.getFile();
        int int45 = uRL43.getDefaultPort();
        java.lang.String str46 = uRL43.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getQuery();
        java.lang.String str58 = uRL56.getRef();
        java.lang.String str59 = uRL56.getRef();
        java.lang.String str60 = uRL56.toExternalForm();
        boolean boolean61 = uRL43.sameFile(uRL56);
        java.lang.String str62 = uRL56.getUserInfo();
        java.lang.String str63 = uRL56.getHost();
        java.lang.String str64 = uRL56.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive66.getNestedArchives(entryFilter70);
        java.lang.String str72 = explodedArchive66.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL(uRL56, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL76 = new java.net.URL(uRL74, "archive");
        boolean boolean77 = uRL15.equals((java.lang.Object) "archive");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!://:100" + "'", str60, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test07854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07854");
        java.io.File file4 = null;
        java.io.File file5 = null;
        java.io.File file6 = null;
        java.io.File file7 = null;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap18);
        java.lang.String str22 = explodedArchive21.toString();
        java.io.File file23 = explodedArchive21.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!://:100", "hi!://:100/:100", 1, "/archive://[hi!://:100/hi!]:1hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getPath();
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100://[hi!://:100/:100]:1/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/archive://[hi!://:100/hi!]:1hi!://:100/archive" + "'", str26, "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
    }

    @Test
    public void test07855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07855");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file18, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection17);
    }

    @Test
    public void test07856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07856");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.lang.String str11 = explodedArchive0.toString();
        java.lang.String str12 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.io.File file14 = null;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        explodedArchive27.filtered = true;
        java.io.File file30 = null;
        explodedArchive27.root = file30;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive27.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap33);
        explodedArchive0.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive0.getNestedArchives(entryFilter37);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(archiveList38);
    }

    @Test
    public void test07857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07857");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]", "/hi!://:100/hi!://:100/:100", (int) '#', "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07858");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/[/:100]:0", "archive://[/hi!://:100]:10hi!://:100/://[archive://:10archive]:100archive://:10archive", "[hi!://:100/hi!://:100]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[/:100]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07859");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        boolean boolean30 = uRL9.sameFile(uRL26);
        java.lang.String str31 = uRL26.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive33.filtered = true;
        java.io.File file36 = null;
        explodedArchive33.root = file36;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive33.manifest = manifest39;
        boolean boolean41 = explodedArchive33.filtered;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive33.manifest = manifest42;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL(uRL26, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        explodedArchive54.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive54.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "/:100", 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL64 = new java.net.URL("hi!://:100/://[hi!://:100/:100]:100/hi!://:100", "/[/hi!://:100/archive]", (int) (byte) 1, "hi!://:100/hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str65 = uRL64.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection66 = filteredURLStreamHandler44.openConnection(uRL64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertEquals(uRL63.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[/:100]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/://[hi!://:100/:100]:100/hi!://:100://[/[/hi!://:100/archive]]:1hi!://:100/hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test07860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07860");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry9.name = asciiBytes10;
        java.io.File file12 = null;
        fileEntry9.file = file12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
    }

    @Test
    public void test07861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07861");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        java.lang.String str16 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        java.lang.String str29 = uRL26.getRef();
        java.lang.String str30 = uRL26.toExternalForm();
        boolean boolean31 = uRL13.sameFile(uRL26);
        java.lang.String str32 = uRL26.getUserInfo();
        java.lang.String str33 = uRL26.getHost();
        java.lang.String str34 = uRL26.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.lang.String str42 = explodedArchive36.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL26.getPath();
        java.net.URL uRL47 = new java.net.URL(uRL26, "[hi!://:100/hi!]");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive53.getEntries();
        java.util.jar.Manifest manifest56 = explodedArchive53.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str59 = uRL58.getQuery();
        java.lang.String str60 = uRL58.getPath();
        java.lang.String str61 = uRL58.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive63.getNestedArchives(entryFilter65);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive63.getNestedArchives(entryFilter67);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive63.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL(uRL58, "", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL72 = new java.net.URL(uRL47, "hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL73 = new java.net.URL("hi!://:100", "[hi!://:100/hi!]:0", 1, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL75 = new java.net.URL(uRL73, ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        int int76 = uRL73.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!://:100" + "'", str30, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100://[hi!://:100/hi!]:0:1[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100://[hi!://:100/hi!]:0:1[://[archive://:10archive]:100archive://:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test07862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07862");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.io.File file15 = null;
        explodedArchive11.root = file15;
        java.io.File file17 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file17, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
    }

    @Test
    public void test07863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07863");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        explodedArchive12.filtered = false;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive12.manifest = manifest20;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive47.entries;
        explodedArchive12.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap48);
        explodedArchive0.entries = asciiBytesMap48;
        java.io.File file52 = null;
        explodedArchive0.root = file52;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive0.getNestedArchives(entryFilter55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive57.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes62 = fileEntry61.getName();
        java.io.File file63 = fileEntry61.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = fileEntry61.getName();
        java.io.File file65 = fileEntry61.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes66 = fileEntry61.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes67 = fileEntry61.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive68 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNull(asciiBytes62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(asciiBytes64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(asciiBytes66);
        org.junit.Assert.assertNull(asciiBytes67);
    }

    @Test
    public void test07864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07864");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        boolean boolean9 = explodedArchive0.filtered;
        boolean boolean10 = explodedArchive0.filtered;
        boolean boolean11 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test07865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07865");
        java.net.URLConnection.setDefaultRequestProperty("[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive", "hi!");
    }

    @Test
    public void test07866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07866");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        boolean boolean20 = explodedArchive19.filtered;
        java.util.jar.Manifest manifest21 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive19.getNestedArchives(entryFilter22);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive19.getEntries();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(entryCollection24);
    }

    @Test
    public void test07867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07867");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = explodedArchive0.root;
        java.lang.String str14 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(entryCollection18);
    }

    @Test
    public void test07868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07868");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getQuery();
        java.lang.String str28 = uRL9.getRef();
        java.lang.String str29 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100" + "'", str29, "hi!://:100");
    }

    @Test
    public void test07869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07869");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/[hi!://:100/hi!]", "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", ":100://[hi!://:100/hi!]:0archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /[hi!://:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07870");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        java.io.File file12 = null;
        explodedArchive0.root = file12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest11);
    }

    @Test
    public void test07871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07871");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.jar.Manifest manifest5 = explodedArchive1.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive6.manifest = manifest8;
        java.util.jar.Manifest manifest10 = explodedArchive6.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive6.entries;
        explodedArchive1.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive1.getFilteredArchive(entryRenameFilter13);
        java.util.jar.Manifest manifest15 = explodedArchive1.getManifest();
        java.util.jar.Manifest manifest16 = null;
        explodedArchive1.manifest = manifest16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive19.manifest = manifest26;
        java.io.File file28 = null;
        explodedArchive19.root = file28;
        java.io.File file30 = null;
        explodedArchive19.root = file30;
        java.io.File file32 = null;
        explodedArchive19.root = file32;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive19.manifest = manifest34;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive37.getNestedArchives(entryFilter44);
        java.io.File file46 = null;
        java.io.File file47 = null;
        java.io.File file48 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive49.getNestedArchives(entryFilter53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, asciiBytesMap55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap57);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap57);
        explodedArchive37.entries = asciiBytesMap57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap57);
        java.util.jar.Manifest manifest62 = null;
        explodedArchive61.manifest = manifest62;
        java.io.File file64 = explodedArchive61.root;
        java.util.jar.Manifest manifest65 = explodedArchive61.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive66.getNestedArchives(entryFilter70);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive66.entries;
        explodedArchive61.entries = asciiBytesMap72;
        explodedArchive19.entries = asciiBytesMap72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap72);
        explodedArchive1.entries = asciiBytesMap72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap72);
        boolean boolean78 = explodedArchive77.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test07872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07872");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.file;
        java.io.File file10 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry4.name = asciiBytes11;
        java.io.File file13 = fileEntry4.file;
        java.io.File file14 = null;
        fileEntry4.file = file14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test07873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07873");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive19.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive19.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive19.entries;
        explodedArchive0.entries = asciiBytesMap23;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
    }

    @Test
    public void test07874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07874");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getHost();
        java.lang.String str14 = uRL9.getQuery();
        java.lang.String str15 = uRL9.getProtocol();
        java.lang.String str16 = uRL9.getQuery();
        java.lang.String str17 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test07875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07875");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive15.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive15.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("archive://:10:100", "/archive:///archive:0hi!://:100", (int) (byte) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getQuery();
        java.lang.String str34 = uRL32.getRef();
        int int35 = uRL32.getPort();
        java.lang.String str36 = uRL32.getProtocol();
        java.lang.String str37 = uRL32.getPath();
        java.lang.String str38 = uRL32.getAuthority();
        java.lang.String str39 = uRL32.getAuthority();
        java.lang.String str40 = uRL32.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str63 = uRL62.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str66 = explodedArchive65.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive65.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL(uRL62, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL70 = new java.net.URL(uRL50, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str71 = uRL50.getFile();
        java.lang.String str72 = uRL50.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str78 = explodedArchive77.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection79 = explodedArchive77.getEntries();
        java.util.jar.Manifest manifest80 = explodedArchive77.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.lang.String str83 = uRL82.getQuery();
        java.lang.String str84 = uRL82.getRef();
        java.lang.String str85 = uRL82.getRef();
        java.net.URL uRL87 = new java.net.URL(uRL82, "hi!");
        boolean boolean88 = uRL50.sameFile(uRL87);
        java.lang.String str89 = uRL87.toExternalForm();
        boolean boolean90 = uRL32.sameFile(uRL87);
        java.lang.String str91 = uRL32.getQuery();
        boolean boolean92 = uRL21.sameFile(uRL32);
        java.net.URL uRL94 = new java.net.URL(uRL32, "[:100]");
        java.lang.String str95 = uRL94.getFile();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals(uRL21.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/archive" + "'", str22, "/archive");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ":100" + "'", str38, ":100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + ":100" + "'", str39, ":100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "archive" + "'", str78, "archive");
        org.junit.Assert.assertNotNull(entryCollection79);
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!://:100/hi!" + "'", str89, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals(uRL94.toString(), "hi!://:100/[:100]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/[:100]" + "'", str95, "/[:100]");
    }

    @Test
    public void test07876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07876");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        java.io.File file8 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test07877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07877");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive0.getEntries();
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        explodedArchive19.filtered = false;
        java.util.jar.Manifest manifest27 = null;
        explodedArchive19.manifest = manifest27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive30.getNestedArchives(entryFilter37);
        java.io.File file39 = null;
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap50);
        explodedArchive30.entries = asciiBytesMap50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive54.entries;
        explodedArchive19.entries = asciiBytesMap55;
        java.io.File file57 = explodedArchive19.root;
        java.io.File file58 = null;
        java.io.File file59 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        explodedArchive60.filtered = false;
        java.util.jar.Manifest manifest66 = explodedArchive60.manifest;
        java.io.File file67 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive68.getNestedArchives(entryFilter70);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive68.getNestedArchives(entryFilter72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive75.entries;
        explodedArchive60.entries = asciiBytesMap76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive79.new FilteredURLStreamHandler();
        boolean boolean81 = explodedArchive79.filtered;
        explodedArchive79.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap84 = explodedArchive79.entries;
        explodedArchive19.entries = asciiBytesMap84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap84);
        explodedArchive0.entries = asciiBytesMap84;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap84);
    }

    @Test
    public void test07878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07878");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        explodedArchive11.filtered = false;
        java.io.File file18 = explodedArchive11.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest20 = explodedArchive11.manifest;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(manifest20);
    }

    @Test
    public void test07879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07879");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        java.io.File file10 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        java.io.File file14 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test07880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07880");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://:100/hi!://:100/hi!://:100", "[hi!://:100/:100]:100://[hi!:1][hi!://:100/hi!]:10", 0, "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://:100/hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07881");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.lang.String str10 = explodedArchive1.toString();
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive13.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive13.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap38);
        explodedArchive1.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap38);
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive43.new FileEntry();
        java.lang.String str48 = explodedArchive43.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive43.new FileEntry();
        java.util.jar.Manifest manifest50 = null;
        explodedArchive43.manifest = manifest50;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap52);
        explodedArchive41.entries = asciiBytesMap52;
        java.lang.String str55 = explodedArchive41.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.lang.String str62 = explodedArchive56.toString();
        java.util.jar.Manifest manifest63 = explodedArchive56.manifest;
        boolean boolean64 = explodedArchive56.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive56.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes66 = fileEntry65.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive67 = explodedArchive41.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNull(manifest63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(asciiBytes66);
    }

    @Test
    public void test07882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07882");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        boolean boolean14 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNotNull(entryCollection18);
    }

    @Test
    public void test07883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07883");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest19 = explodedArchive0.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL20 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(manifest19);
    }

    @Test
    public void test07884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07884");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getFile();
        java.lang.String str44 = uRL9.getProtocol();
        java.lang.String str45 = uRL9.getUserInfo();
        java.lang.String str46 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test07885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07885");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test07886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07886");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        boolean boolean28 = explodedArchive25.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive25.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive25.entries;
        boolean boolean31 = explodedArchive25.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive25.getNestedArchives(entryFilter33);
        explodedArchive25.filtered = false;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(archiveList34);
    }

    @Test
    public void test07887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07887");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.net.URL uRL60 = new java.net.URL(uRL9, "/archive");
        java.lang.String str61 = uRL9.getUserInfo();
        java.lang.String str62 = uRL9.getRef();
        java.lang.Object obj63 = null;
        boolean boolean64 = uRL9.equals(obj63);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test07888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07888");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        explodedArchive25.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive25.getFilteredArchive(entryRenameFilter29);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archive30);
    }

    @Test
    public void test07889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07889");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        java.lang.String str43 = uRL41.getFile();
        java.lang.String str44 = uRL41.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!://:100" + "'", str44, "hi!://:100");
    }

    @Test
    public void test07890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07890");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:100");
        java.lang.String str15 = uRL9.getHost();
        java.net.URL uRL17 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        java.lang.String str18 = uRL17.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10" + "'", str18, "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
    }

    @Test
    public void test07891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07891");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter41 = null;
        org.springframework.boot.loader.archive.Archive archive42 = explodedArchive0.getFilteredArchive(entryRenameFilter41);
        java.lang.String str43 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archive42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
    }

    @Test
    public void test07892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07892");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL64.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI68 = uRL64.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test07893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07893");
        java.io.File file8 = null;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("/hi!://:100/archive", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (byte) 100, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL22 = new java.net.URL("/archive:0", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (int) (short) 10, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str23 = uRL22.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL22.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals(uRL21.toString(), "/hi!://:100/archive://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:100hi!://:100");
        org.junit.Assert.assertEquals(uRL22.toString(), "/archive:0://[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10" + "'", str23, "[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10");
    }

    @Test
    public void test07894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07894");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getAuthority();
        java.lang.String str43 = uRL41.getProtocol();
        java.lang.String str44 = uRL41.toExternalForm();
        java.net.URL uRL46 = new java.net.URL(uRL41, "/hi!");
        int int47 = uRL46.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":100" + "'", str42, ":100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!://:100/hi!" + "'", str44, "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test07895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07895");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        explodedArchive1.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str10 = explodedArchive9.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive9.new FileEntry();
        java.util.jar.Manifest manifest12 = explodedArchive9.getManifest();
        java.util.jar.Manifest manifest13 = explodedArchive9.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive14.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive14.getNestedArchives(entryFilter19);
        java.util.jar.Manifest manifest21 = null;
        explodedArchive14.manifest = manifest21;
        explodedArchive14.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive14.entries;
        explodedArchive9.entries = asciiBytesMap25;
        explodedArchive1.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.io.File file31 = explodedArchive28.root;
        java.util.jar.Manifest manifest32 = explodedArchive28.getManifest();
        java.io.File file33 = explodedArchive28.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive28.entries;
        explodedArchive1.entries = asciiBytesMap34;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap36);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
    }

    @Test
    public void test07896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07896");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "hi!:1");
        int int16 = uRL9.getDefaultPort();
        java.lang.String str17 = uRL9.getPath();
        int int18 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test07897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07897");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getFile();
        java.lang.String str44 = uRL9.getProtocol();
        java.lang.String str45 = uRL9.getUserInfo();
        java.lang.Class[] classArray46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = uRL9.getContent(classArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test07898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07898");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive10.new FileEntry();
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap24);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive25.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive29 = explodedArchive10.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
    }

    @Test
    public void test07899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07899");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry20.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes22 = null;
        fileEntry20.name = asciiBytes22;
        java.io.File file24 = fileEntry20.getFile();
        java.io.File file25 = fileEntry20.getFile();
        java.io.File file26 = fileEntry20.getFile();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(asciiBytes21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
    }

    @Test
    public void test07900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07900");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://:100/hi!://:100/hi!", "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]", "hi!://[hi!://:100/hi!]:0archive://:10:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07901");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        java.io.File file20 = null;
        java.io.File file21 = null;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap31);
        explodedArchive11.entries = asciiBytesMap31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive35.entries;
        explodedArchive0.entries = asciiBytesMap36;
        java.io.File file38 = explodedArchive0.root;
        java.util.jar.Manifest manifest39 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(manifest39);
    }

    @Test
    public void test07902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07902");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        java.lang.String str14 = explodedArchive8.toString();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
    }

    @Test
    public void test07903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07903");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getHost();
        int int42 = uRL22.getPort();
        java.lang.String str43 = uRL22.toExternalForm();
        int int44 = uRL22.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!://:100" + "'", str43, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
    }

    @Test
    public void test07904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07904");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = fileEntry4.getFile();
        java.io.File file10 = null;
        fileEntry4.file = file10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test07905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07905");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive0.getNestedArchives(entryFilter13);
        java.lang.Class<?> wildcardClass15 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test07906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07906");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        explodedArchive0.filtered = false;
        java.io.File file9 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        boolean boolean12 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test07907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07907");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getHost();
        int int16 = uRL13.getPort();
        java.lang.String str17 = uRL13.getQuery();
        java.net.URL uRL19 = new java.net.URL(uRL13, "");
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL19, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL("hi!://:100/hi!://:100", "/archive", (int) (byte) -1, "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getQuery();
        java.lang.String str66 = uRL64.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL80 = new java.net.URL(uRL48, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str81 = uRL48.getQuery();
        java.lang.String str82 = uRL48.getRef();
        java.net.URL uRL84 = new java.net.URL(uRL48, "/hi!");
        java.lang.String str85 = uRL84.getUserInfo();
        boolean boolean86 = uRL37.equals((java.lang.Object) str85);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]" + "'", str38, "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test07908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07908");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive2.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive2.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = explodedArchive2.root;
        java.lang.String str8 = explodedArchive2.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive10.getNestedArchives(entryFilter11);
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.jar.Manifest manifest39 = null;
        explodedArchive38.manifest = manifest39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive38.new FileEntry();
        java.util.jar.Manifest manifest42 = explodedArchive38.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter43 = null;
        org.springframework.boot.loader.archive.Archive archive44 = explodedArchive38.getFilteredArchive(entryRenameFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive38.entries;
        explodedArchive10.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap45);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNotNull(archive44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
    }

    @Test
    public void test07909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07909");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive0.getNestedArchives(entryFilter16);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
    }

    @Test
    public void test07910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07910");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getUserInfo();
        java.lang.String str26 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.lang.Class<?> wildcardClass33 = explodedArchive27.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[] { wildcardClass33 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = uRL9.getContent(classArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray34);
    }

    @Test
    public void test07911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07911");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        boolean boolean14 = explodedArchive13.filtered;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive13.manifest = manifest15;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive13.entries;
        java.util.jar.Manifest manifest18 = explodedArchive13.getManifest();
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNull(manifest18);
    }

    @Test
    public void test07912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07912");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive43.getNestedArchives(entryFilter44);
        java.lang.String str46 = explodedArchive43.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(archiveList48);
    }

    @Test
    public void test07913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07913");
        java.net.URLConnection.setDefaultRequestProperty(":10", "[archive://:10archive]:100");
    }

    @Test
    public void test07914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07914");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        boolean boolean16 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive11.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        java.io.File file20 = null;
        explodedArchive11.root = file20;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = explodedArchive11.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(archiveList18);
    }

    @Test
    public void test07915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07915");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/hi!", "");
    }

    @Test
    public void test07916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07916");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL(uRL15, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL15.getRef();
        java.lang.String str32 = uRL15.getPath();
        java.lang.String str33 = uRL15.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + ":100" + "'", str33, ":100");
    }

    @Test
    public void test07917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07917");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive15.getNestedArchives(entryFilter16);
        java.util.jar.Manifest manifest18 = explodedArchive15.getManifest();
        java.util.jar.Manifest manifest19 = explodedArchive15.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive15.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive47.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes49 = fileEntry48.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes50 = fileEntry48.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive51 = explodedArchive15.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNull(asciiBytes49);
        org.junit.Assert.assertNull(asciiBytes50);
    }

    @Test
    public void test07918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07918");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.toExternalForm();
        java.lang.String str28 = uRL23.getRef();
        java.lang.String str29 = uRL23.toExternalForm();
        java.net.URL uRL31 = new java.net.URL(uRL23, "/hi!:1");
        java.lang.String str32 = uRL23.getFile();
        java.lang.String str33 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str44 = uRL43.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL(uRL55, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL43, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str64 = uRL43.getFile();
        java.lang.String str65 = uRL43.getRef();
        java.lang.String str66 = uRL43.toExternalForm();
        java.lang.String str67 = uRL43.getFile();
        java.lang.String str68 = uRL43.getRef();
        java.lang.String str69 = uRL43.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive71.filtered = true;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive71.manifest = manifest74;
        java.io.File file76 = explodedArchive71.root;
        java.lang.String str77 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive71.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter79 = null;
        org.springframework.boot.loader.archive.Archive archive80 = explodedArchive71.getFilteredArchive(entryRenameFilter79);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter81 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList82 = explodedArchive71.getNestedArchives(entryFilter81);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL(uRL43, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        boolean boolean85 = uRL23.equals((java.lang.Object) uRL84);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100/hi!" + "'", str27, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100/hi!" + "'", str29, "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!://:100" + "'", str66, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNotNull(archive80);
        org.junit.Assert.assertNotNull(archiveList82);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test07919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07919");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07920");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.io.File file7 = explodedArchive0.root;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test07921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07921");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive2.manifest = manifest10;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive13.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive13.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive2.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap38);
        boolean boolean42 = explodedArchive41.filtered;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test07922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07922");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        explodedArchive17.filtered = true;
        java.io.File file22 = null;
        explodedArchive17.root = file22;
        java.lang.String str24 = explodedArchive17.toString();
        boolean boolean25 = explodedArchive17.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = explodedArchive17.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test07923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07923");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection13);
    }

    @Test
    public void test07924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07924");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        boolean boolean12 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean14 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test07925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07925");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str6 = explodedArchive5.toString();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive5.manifest = manifest7;
        java.util.jar.Manifest manifest9 = explodedArchive5.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive5.entries;
        explodedArchive0.entries = asciiBytesMap10;
        java.lang.String str12 = explodedArchive0.toString();
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive0.entries;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
    }

    @Test
    public void test07926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07926");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL54, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL69 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL70 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL71 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        boolean boolean72 = uRL32.sameFile(uRL71);
        java.lang.String str73 = uRL71.toExternalForm();
        java.lang.String str74 = uRL71.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream75 = uRL71.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!" + "'", str73, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!://:100/:100" + "'", str74, "hi!://:100/:100");
    }

    @Test
    public void test07927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07927");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest19 = null;
        explodedArchive12.manifest = manifest19;
        java.io.File file21 = explodedArchive12.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = explodedArchive23.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
    }

    @Test
    public void test07928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07928");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.lang.String str9 = explodedArchive0.toString();
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive12.getNestedArchives(entryFilter19);
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap32);
        explodedArchive12.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap37);
        explodedArchive0.entries = asciiBytesMap37;
        java.lang.String str40 = explodedArchive0.toString();
        java.util.jar.Manifest manifest41 = null;
        explodedArchive0.manifest = manifest41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getFilteredArchive(entryRenameFilter44);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(archive45);
    }

    @Test
    public void test07929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07929");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getHost();
        int int29 = uRL26.getPort();
        java.lang.String str30 = uRL26.getQuery();
        java.net.URL uRL32 = new java.net.URL(uRL26, "");
        java.lang.String str33 = uRL32.getPath();
        int int34 = uRL32.getDefaultPort();
        java.lang.String str35 = uRL32.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL60 = new java.net.URL(uRL46, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL61 = new java.net.URL(uRL32, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL62 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str63 = uRL9.getRef();
        java.lang.String str64 = uRL9.getRef();
        java.lang.String str65 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test07930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07930");
        java.net.URLConnection.setDefaultRequestProperty("[/hi!://:100/archive]:32", "/hi!://hi!:1hi!");
    }

    @Test
    public void test07931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07931");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://:100", "[hi!://:100/hi!:1]", "/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07932");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.toExternalForm();
        java.lang.String str41 = uRL39.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive47.getNestedArchives(entryFilter49);
        explodedArchive47.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive47.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("archive://:10archive", "archive://:10archive", (int) (byte) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL39, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        int int58 = uRL57.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!://:100/hi!://:100" + "'", str40, "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertEquals(uRL56.toString(), "archive://:10archive://[archive://:10archive]:1/archive");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!://hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test07933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07933");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL9 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(entryCollection8);
    }

    @Test
    public void test07934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07934");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL26, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL55 = new java.net.URL(uRL9, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str56 = uRL55.getAuthority();
        java.lang.String str57 = uRL55.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ":100" + "'", str56, ":100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test07935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07935");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive0.entries = asciiBytesMap11;
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        int int34 = uRL33.getPort();
        java.lang.String str35 = uRL33.toExternalForm();
        java.lang.String str36 = uRL33.getQuery();
        java.lang.String str37 = uRL33.getAuthority();
        java.net.URL uRL39 = new java.net.URL(uRL33, "[/hi!://:100/archive]");
        java.lang.String str40 = uRL33.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection41 = filteredURLStreamHandler16.openConnection(uRL33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(asciiBytesMap15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!://:100/hi!" + "'", str35, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ":100" + "'", str37, ":100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test07936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07936");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test07937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07937");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL37 = new java.net.URL(":100", "[hi!://:100/hi!]", (int) (short) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL38 = new java.net.URL("/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100", (int) (byte) -1, "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "/hi!://:100://archive:1/archive");
        org.junit.Assert.assertEquals(uRL37.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!://[hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100]hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
    }

    @Test
    public void test07938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07938");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
    }

    @Test
    public void test07939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07939");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive0.entries;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive16.new FileEntry();
        java.lang.String str21 = explodedArchive16.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive16.new FileEntry();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive16.manifest = manifest23;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        explodedArchive0.entries = asciiBytesMap25;
        java.lang.String str28 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive29.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry31.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry31.name;
        java.io.File file34 = null;
        fileEntry31.file = file34;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry31.getName();
        java.io.File file37 = fileEntry31.getFile();
        java.io.File file38 = fileEntry31.getFile();
        java.io.File file39 = null;
        fileEntry31.file = file39;
        java.io.File file41 = fileEntry31.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes42 = fileEntry31.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive43 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNull(asciiBytes32);
        org.junit.Assert.assertNull(asciiBytes33);
        org.junit.Assert.assertNull(asciiBytes36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(asciiBytes42);
    }

    @Test
    public void test07940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07940");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry4.name;
        java.io.File file16 = null;
        fileEntry4.file = file16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = null;
        fileEntry4.name = asciiBytes18;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test07941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07941");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0", ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[://[archive://:10archive]:100archive://:10archive]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07942");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry3 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest4 = explodedArchive1.getManifest();
        java.util.jar.Manifest manifest5 = explodedArchive1.manifest;
        java.io.File file6 = null;
        explodedArchive1.root = file6;
        explodedArchive1.filtered = true;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        explodedArchive11.filtered = false;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap27);
        java.util.jar.Manifest manifest30 = null;
        explodedArchive29.manifest = manifest30;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive29.entries;
        explodedArchive1.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive34.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(entryCollection36);
    }

    @Test
    public void test07943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07943");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive29.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.getFile();
        java.lang.String str40 = uRL37.getFile();
        int int41 = uRL37.getDefaultPort();
        java.lang.String str42 = uRL37.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertEquals(uRL36.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/hi!://:100" + "'", str39, "/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!://:100" + "'", str40, "/hi!://:100");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test07944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07944");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getPath();
        java.lang.String str14 = uRL9.getHost();
        int int15 = uRL9.getDefaultPort();
        java.lang.String str16 = uRL9.getRef();
        java.lang.String str17 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!://:100" + "'", str17, "hi!://:100");
    }

    @Test
    public void test07945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07945");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getAuthority();
        java.lang.String str19 = uRL9.getAuthority();
        java.lang.String str20 = uRL9.getUserInfo();
        java.lang.String str21 = uRL9.getProtocol();
        java.lang.String str22 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + ":100" + "'", str19, ":100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!://:100" + "'", str22, "hi!://:100");
    }

    @Test
    public void test07946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07946");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        java.net.URL uRL29 = new java.net.URL(uRL9, "hi!://:100/hi!://:100");
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getFile();
        java.lang.String str32 = uRL29.getProtocol();
        java.lang.String str33 = uRL29.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI34 = uRL29.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://:100/hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!://:100/hi!://:100" + "'", str31, "/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!://:100/hi!://:100/hi!://:100" + "'", str33, "hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test07947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07947");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL42 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str43 = uRL42.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.getPath();
        java.lang.String str70 = uRL67.getPath();
        java.lang.String str71 = uRL67.toExternalForm();
        java.lang.String str72 = uRL67.getRef();
        java.lang.String str73 = uRL67.getPath();
        boolean boolean74 = uRL42.sameFile(uRL67);
        int int75 = uRL67.getDefaultPort();
        java.lang.String str76 = uRL67.getFile();
        java.lang.String str77 = uRL67.getAuthority();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "archive://:10:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!://:100/hi!" + "'", str71, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ":100" + "'", str77, ":100");
    }

    @Test
    public void test07948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07948");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL9, "/hi!");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getFile();
        int int58 = uRL56.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getQuery();
        java.lang.String str71 = uRL69.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str78 = explodedArchive77.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection79 = explodedArchive77.getEntries();
        java.util.jar.Manifest manifest80 = explodedArchive77.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL83 = new java.net.URL(uRL69, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL84 = new java.net.URL(uRL56, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.lang.String str85 = uRL84.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter89 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList90 = explodedArchive87.getNestedArchives(entryFilter89);
        explodedArchive87.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter93 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList94 = explodedArchive87.getNestedArchives(entryFilter93);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler95 = explodedArchive87.new FilteredURLStreamHandler();
        java.net.URL uRL96 = new java.net.URL(uRL84, "", (java.net.URLStreamHandler) filteredURLStreamHandler95);
        java.net.URL uRL97 = new java.net.URL(uRL45, "/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler95);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI98 = uRL45.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "archive" + "'", str78, "archive");
        org.junit.Assert.assertNotNull(entryCollection79);
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/archive" + "'", str85, "/archive");
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNotNull(archiveList90);
        org.junit.Assert.assertNotNull(archiveList94);
        org.junit.Assert.assertEquals(uRL96.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL97.toString(), "hi!://:100/hi!://:100");
    }

    @Test
    public void test07949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07949");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        int int18 = uRL15.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive24.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getFile();
        int int44 = uRL42.getDefaultPort();
        java.lang.String str45 = uRL42.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive71.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL(uRL68, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL76 = new java.net.URL(uRL56, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL77 = new java.net.URL(uRL42, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL78 = new java.net.URL(uRL31, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL79 = new java.net.URL(uRL15, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.lang.String str80 = uRL15.getAuthority();
        java.lang.String str81 = uRL15.getFile();
        int int82 = uRL15.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertEquals(uRL31.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL78.toString(), "/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ":100" + "'", str80, ":100");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test07950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07950");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("archive://[/hi!://:100]:10hi!://:100/://[archive://:10archive]:100archive://:10archive", "[archive://:10:100]:1", "://[archive://:10archive]:100archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive://[/hi!://:100]:10hi!://:100/://[archive://:10archive]:100archive://:10archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07951");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        boolean boolean10 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        java.lang.String str14 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
    }

    @Test
    public void test07952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07952");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        int int18 = uRL16.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getRef();
        int int31 = uRL28.getPort();
        java.lang.String str32 = uRL28.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL42, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getFile();
        int int61 = uRL59.getDefaultPort();
        java.lang.String str62 = uRL59.getRef();
        boolean boolean63 = uRL42.sameFile(uRL59);
        boolean boolean64 = uRL28.sameFile(uRL42);
        boolean boolean65 = uRL16.sameFile(uRL42);
        java.io.File file70 = null;
        java.io.File file71 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive72.getNestedArchives(entryFilter74);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive72.getNestedArchives(entryFilter76);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap78 = explodedArchive72.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file71, asciiBytesMap78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive79.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive(file70, asciiBytesMap80);
        explodedArchive81.filtered = true;
        java.io.File file84 = null;
        explodedArchive81.root = file84;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection86 = explodedArchive81.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection87 = explodedArchive81.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler88 = explodedArchive81.new FilteredURLStreamHandler();
        java.net.URL uRL89 = new java.net.URL("hi!://:100", "/hi!://:100/archive", 0, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        boolean boolean90 = uRL42.sameFile(uRL89);
        int int91 = uRL42.getPort();
        java.lang.String str92 = uRL42.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertNotNull(asciiBytesMap78);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNotNull(entryCollection86);
        org.junit.Assert.assertNotNull(entryCollection87);
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100://[/hi!://:100/archive]:0/archive:///archive:0hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 100 + "'", int91 == 100);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test07953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07953");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest17 = null;
        explodedArchive11.manifest = manifest17;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive11.new FileEntry();
        java.io.File file22 = explodedArchive11.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test07954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07954");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        explodedArchive12.filtered = false;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive12.manifest = manifest20;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive47.entries;
        explodedArchive12.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap48);
        explodedArchive0.entries = asciiBytesMap48;
        java.io.File file52 = null;
        explodedArchive0.root = file52;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean55 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest56 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(manifest56);
    }

    @Test
    public void test07955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07955");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        java.lang.String str28 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getPath();
        java.lang.String str41 = uRL38.getFile();
        int int42 = uRL38.getPort();
        boolean boolean43 = uRL9.sameFile(uRL38);
        java.lang.String str44 = uRL38.getFile();
        java.lang.String str45 = uRL38.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test07956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07956");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        java.io.File file9 = null;
        fileEntry7.file = file9;
        java.io.File file11 = fileEntry7.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test07957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07957");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getHost();
        java.io.File file49 = null;
        java.io.File file50 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive51.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive51.getNestedArchives(entryFilter55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap59);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive60.new FileEntry();
        explodedArchive60.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "/archive:///archive:0hi!://:100", (int) (byte) 10, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.lang.String str66 = uRL65.getProtocol();
        boolean boolean67 = uRL41.sameFile(uRL65);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream68 = uRL41.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!://:100/hi!://hi!:1hi!" + "'", str66, "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test07958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07958");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getQuery();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getPort();
        java.lang.String str45 = uRL41.getQuery();
        java.net.URL uRL47 = new java.net.URL(uRL41, "");
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL47, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL30, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str66 = uRL30.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive71.getEntries();
        java.util.jar.Manifest manifest74 = explodedArchive71.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.lang.String str77 = uRL76.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str80 = explodedArchive79.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection81 = explodedArchive79.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive79.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL(uRL76, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.toExternalForm();
        java.lang.String str85 = uRL83.getRef();
        boolean boolean86 = uRL30.sameFile(uRL83);
        java.net.URL uRL87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = uRL83.sameFile(uRL87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!://:100/archive" + "'", str66, "/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertNull(manifest74);
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "archive" + "'", str80, "archive");
        org.junit.Assert.assertNotNull(entryCollection81);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!://:100/hi!" + "'", str84, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test07959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07959");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.lang.String str18 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive11.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file23, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(archiveList22);
    }

    @Test
    public void test07960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07960");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        boolean boolean16 = explodedArchive11.filtered;
        java.util.jar.Manifest manifest17 = explodedArchive11.getManifest();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(manifest17);
    }

    @Test
    public void test07961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07961");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("archive://:0/:100", "hi!://:100/://[archive://:10archive]:100archive://:10archive", "/hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive://:0/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07962");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest25 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive0.manifest;
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        java.lang.String str34 = explodedArchive28.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive28.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest36 = explodedArchive28.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap37);
        explodedArchive0.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive0.new FileEntry();
        java.io.File file41 = fileEntry40.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNull(file41);
    }

    @Test
    public void test07963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07963");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive8.getFilteredArchive(entryRenameFilter10);
        explodedArchive8.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
    }

    @Test
    public void test07964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07964");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        java.lang.String str26 = uRL24.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.net.URL uRL38 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getFile();
        boolean boolean50 = uRL38.sameFile(uRL48);
        int int51 = uRL48.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getQuery();
        java.lang.String str63 = uRL61.getRef();
        java.lang.String str64 = uRL61.getRef();
        java.net.URL uRL66 = new java.net.URL(uRL61, "hi!");
        boolean boolean67 = uRL48.sameFile(uRL66);
        int int68 = uRL48.getDefaultPort();
        boolean boolean69 = uRL9.sameFile(uRL48);
        java.lang.String str70 = uRL48.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
    }

    @Test
    public void test07965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07965");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!://:100/archive");
        int int31 = uRL22.getDefaultPort();
        java.lang.String str32 = uRL22.getUserInfo();
        java.lang.String str33 = uRL22.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test07966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07966");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.io.File file4 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file12 = null;
        explodedArchive0.root = file12;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test07967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07967");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive8.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest13 = explodedArchive8.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest15 = null;
        explodedArchive8.manifest = manifest15;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = explodedArchive8.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(entryCollection14);
    }

    @Test
    public void test07968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07968");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        java.util.jar.Manifest manifest8 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        java.io.File file10 = null;
        explodedArchive1.root = file10;
        explodedArchive1.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive14.getFilteredArchive(entryRenameFilter17);
        java.io.File file19 = explodedArchive14.root;
        java.lang.String str20 = explodedArchive14.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive14.entries;
        boolean boolean22 = explodedArchive14.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive14.entries;
        explodedArchive1.entries = asciiBytesMap23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap23);
        java.lang.String str26 = explodedArchive25.toString();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
    }

    @Test
    public void test07969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07969");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("archive://:10archive", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getQuery();
        java.lang.String str22 = uRL20.getRef();
        int int23 = uRL20.getPort();
        java.lang.String str24 = uRL20.getProtocol();
        java.lang.String str25 = uRL20.getPath();
        java.lang.String str26 = uRL20.getPath();
        java.lang.String str27 = uRL20.getUserInfo();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL10.sameFile(uRL20);
        java.net.URI uRI30 = uRL10.toURI();
        java.lang.String str31 = uRL10.getPath();
        java.lang.String str32 = uRL10.getPath();
        java.net.URL uRL34 = new java.net.URL(uRL10, "hi!://:100/hi!://:100/archive");
        java.lang.String str35 = uRL34.toString();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL10.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(uRI30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals(uRL34.toString(), "archive://:10archive://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive://:10archive://:100/hi!://:100/hi!://:100/archive" + "'", str35, "archive://:10archive://:100/hi!://:100/hi!://:100/archive");
    }

    @Test
    public void test07970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07970");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/hi!://:100/:100", "hi!://:100/archive");
    }

    @Test
    public void test07971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07971");
        java.net.URLConnection.setDefaultRequestProperty("/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", "[archive://:10:100]:1");
    }

    @Test
    public void test07972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07972");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive7.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive7.manifest = manifest11;
        java.lang.String str13 = explodedArchive7.toString();
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive15.new FileEntry();
        java.util.jar.Manifest manifest18 = explodedArchive15.getManifest();
        java.util.jar.Manifest manifest19 = explodedArchive15.manifest;
        java.io.File file20 = null;
        explodedArchive15.root = file20;
        explodedArchive15.filtered = true;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        explodedArchive25.filtered = false;
        java.util.jar.Manifest manifest31 = explodedArchive25.manifest;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        explodedArchive25.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap41);
        java.util.jar.Manifest manifest44 = null;
        explodedArchive43.manifest = manifest44;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive43.entries;
        explodedArchive15.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap46);
        explodedArchive7.entries = asciiBytesMap46;
        explodedArchive0.entries = asciiBytesMap46;
        java.io.File file51 = explodedArchive0.root;
        java.io.File file52 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file52, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNull(file51);
    }

    @Test
    public void test07973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07973");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        java.util.jar.Manifest manifest12 = explodedArchive0.manifest;
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive0.new FilteredURLStreamHandler();
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection17 = filteredURLStreamHandler15.openConnection(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(manifest12);
    }

    @Test
    public void test07974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07974");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.name;
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test07975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07975");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean66 = uRL9.sameFile(uRL65);
        java.lang.String str67 = uRL65.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive69.getNestedArchives(entryFilter71);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive69.getNestedArchives(entryFilter73);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter75 = null;
        org.springframework.boot.loader.archive.Archive archive76 = explodedArchive69.getFilteredArchive(entryRenameFilter75);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry77 = explodedArchive69.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL65, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.lang.String str80 = uRL79.getUserInfo();
        int int81 = uRL79.getDefaultPort();
        java.net.Proxy proxy82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection83 = uRL79.openConnection(proxy82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!://:100" + "'", str67, "/hi!://:100");
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNotNull(archive76);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
    }

    @Test
    public void test07976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07976");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive8.manifest = manifest15;
        boolean boolean17 = explodedArchive8.filtered;
        java.util.jar.Manifest manifest18 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive8.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive8.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive8.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", (int) (byte) -1, "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive", "[hi!://:100]:97", (int) ' ', "[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.Class[] classArray28 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = uRL27.getContent(classArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertEquals(uRL26.toString(), "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive://[hi!://:100]:97:32[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNotNull(classArray28);
    }

    @Test
    public void test07977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07977");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry6.name = asciiBytes7;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = fileEntry6.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(entryCollection5);
    }

    @Test
    public void test07978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07978");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.toExternalForm();
        int int14 = uRL11.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str13, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test07979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07979");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        boolean boolean7 = explodedArchive0.filtered;
        boolean boolean8 = explodedArchive0.filtered;
        java.lang.String str9 = explodedArchive0.toString();
        boolean boolean10 = explodedArchive0.filtered;
        java.lang.String str11 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
    }

    @Test
    public void test07980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07980");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.lang.String str6 = explodedArchive0.toString();
        java.io.File file7 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL9 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(entryCollection8);
    }

    @Test
    public void test07981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07981");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive17.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        org.springframework.boot.loader.archive.Archive archive22 = explodedArchive17.getFilteredArchive(entryRenameFilter21);
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.lang.String str30 = explodedArchive24.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive24.new FilteredURLStreamHandler();
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap44);
        explodedArchive24.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap44);
        explodedArchive17.entries = asciiBytesMap44;
        java.util.jar.Manifest manifest51 = explodedArchive17.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive17.getEntries();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(archive22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertNotNull(entryCollection52);
    }

    @Test
    public void test07982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07982");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        boolean boolean13 = explodedArchive11.filtered;
        java.util.jar.Manifest manifest14 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test07983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07983");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://://[archive://:10archive]:100archive://:10archive", "/hi!:1", (int) '#', "[hi!://:100/hi!]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://://[archive://:10archive]:100archive://:10archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07984");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest13 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive0.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive0.getEntries();
        java.io.File file18 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test07985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07985");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        java.io.File file14 = null;
        explodedArchive0.root = file14;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest13);
    }

    @Test
    public void test07986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07986");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive1.manifest = manifest9;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive12.getNestedArchives(entryFilter19);
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap32);
        explodedArchive12.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive36.entries;
        explodedArchive1.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap37);
        java.util.jar.Manifest manifest40 = null;
        explodedArchive39.manifest = manifest40;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive39.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive39.new FilteredURLStreamHandler();
        java.lang.Class<?> wildcardClass45 = explodedArchive39.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test07987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07987");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test07988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07988");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        java.io.File file9 = fileEntry7.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test07989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07989");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.toExternalForm();
        java.io.File file46 = null;
        java.io.File file47 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive48.getNestedArchives(entryFilter50);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive48.getNestedArchives(entryFilter52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive48.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.toExternalForm();
        boolean boolean61 = uRL40.sameFile(uRL59);
        int int62 = uRL59.getPort();
        java.lang.String str63 = uRL59.getRef();
        java.lang.String str64 = uRL59.getQuery();
        java.lang.String str65 = uRL59.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100/hi!" + "'", str41, "hi!://:100/hi!");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertEquals(uRL59.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str60, "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test07990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07990");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry20.getName();
        java.io.File file22 = null;
        fileEntry20.file = file22;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = null;
        fileEntry20.name = asciiBytes24;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = fileEntry20.getName();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(asciiBytes21);
        org.junit.Assert.assertNull(asciiBytes26);
    }

    @Test
    public void test07991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07991");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(entryCollection9);
    }

    @Test
    public void test07992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07992");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getHost();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getFile();
        int int29 = uRL27.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.jar.Manifest manifest38 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.getQuery();
        java.lang.String str42 = uRL40.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL54 = new java.net.URL(uRL40, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL55 = new java.net.URL(uRL27, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str56 = uRL27.toExternalForm();
        java.lang.String str57 = uRL27.getQuery();
        java.lang.String str58 = uRL27.getHost();
        int int59 = uRL27.getPort();
        int int60 = uRL27.getPort();
        java.lang.String str61 = uRL27.getAuthority();
        java.net.URL uRL63 = new java.net.URL(uRL27, "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1");
        boolean boolean64 = uRL9.equals((java.lang.Object) uRL27);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ":100" + "'", str61, ":100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test07993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07993");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        explodedArchive0.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        java.io.File file16 = null;
        explodedArchive0.root = file16;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(entryCollection13);
    }

    @Test
    public void test07994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07994");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
    }

    @Test
    public void test07995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07995");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        boolean boolean26 = uRL9.sameFile(uRL21);
        java.lang.String str27 = uRL9.toExternalForm();
        java.net.URL uRL29 = new java.net.URL(uRL9, "/hi!");
        java.lang.String str30 = uRL9.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100" + "'", str27, "hi!://:100");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test07996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07996");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!://:100" + "'", str28, "hi!://:100");
    }

    @Test
    public void test07997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07997");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive25.getEntries();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNotNull(entryCollection28);
    }

    @Test
    public void test07998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07998");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getPath();
        java.lang.String str12 = uRL9.getFile();
        java.lang.String str13 = uRL9.getFile();
        int int14 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test07999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07999");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "/[hi!://:100/hi!://:100/hi!://:100/archive://[/hi!:1]:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /[hi!://:100/hi!://:100/hi!://:100/archive://[/hi!:1]:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test08000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test08000");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive", "", (int) ' ', "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }
}

