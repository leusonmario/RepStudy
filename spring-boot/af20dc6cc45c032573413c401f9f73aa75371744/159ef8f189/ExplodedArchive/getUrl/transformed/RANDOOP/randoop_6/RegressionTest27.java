import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest27 {

    public static boolean debug = false;

    @Test
    public void test13501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13501");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getRef();
        java.net.URL uRL30 = new java.net.URL(uRL27, "[://[archive://:10archive]:100archive://:10archive]:0");
        java.lang.String str31 = uRL30.getHost();
        java.net.Proxy proxy32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection33 = uRL30.openConnection(proxy32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test13502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13502");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive0.new FileEntry();
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive18.getNestedArchives(entryFilter25);
        java.io.File file27 = null;
        java.io.File file28 = null;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap38);
        explodedArchive18.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = explodedArchive42.new FileEntry();
        java.io.File file44 = fileEntry43.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes45 = null;
        fileEntry43.name = asciiBytes45;
        java.io.File file47 = fileEntry43.getFile();
        java.io.File file48 = fileEntry43.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive49 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
    }

    @Test
    public void test13503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13503");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "hi!://:100/hi!://:100/:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13504");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.io.File file9 = explodedArchive0.root;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.io.File file14 = fileEntry13.file;
        java.io.File file15 = fileEntry13.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13505");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL(uRL22, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!://:100" + "'", str36, "hi!://:100");
    }

    @Test
    public void test13506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13506");
        java.net.URLConnection.setDefaultRequestProperty("[/hi!://:100/archive]", "archive://:0/:100");
    }

    @Test
    public void test13507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13507");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getDefaultPort();
        java.lang.String str18 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test13508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13508");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = explodedArchive0.root;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
    }

    @Test
    public void test13509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13509");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!://:100/archive", "hi!", "archive", "/hi!://:100", "/archive", "/hi!", "/hi!://:100/archive", "/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/hi!://:100", "hi!://:100" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet11;
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test13510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13510");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive14.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        java.lang.String str21 = uRL19.getPath();
        boolean boolean22 = uRL9.sameFile(uRL19);
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL19, "", uRLStreamHandler24);
        int int26 = uRL25.getPort();
        java.lang.String str27 = uRL25.getRef();
        java.lang.String str28 = uRL25.getHost();
        java.net.Proxy proxy29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection30 = uRL25.openConnection(proxy29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test13511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13511");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL9, "/hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getFile();
        int int27 = uRL25.getDefaultPort();
        java.lang.String str28 = uRL25.getHost();
        boolean boolean29 = uRL9.sameFile(uRL25);
        int int30 = uRL9.getPort();
        java.net.URL uRL32 = new java.net.URL(uRL9, "");
        java.net.URL uRL34 = new java.net.URL(uRL9, "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.lang.String str35 = uRL34.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!://:100/hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str35, "hi!://:100/hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test13512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13512");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file26 = null;
        explodedArchive0.root = file26;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
    }

    @Test
    public void test13513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13513");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        boolean boolean9 = explodedArchive0.filtered;
        java.lang.String str10 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest12 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(manifest12);
    }

    @Test
    public void test13514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13514");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive13.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive13.entries;
        java.util.jar.Manifest manifest16 = explodedArchive13.manifest;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(manifest16);
    }

    @Test
    public void test13515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13515");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive17.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest21 = null;
        explodedArchive17.manifest = manifest21;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive17.getEntries();
        boolean boolean24 = explodedArchive17.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive17.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
    }

    @Test
    public void test13516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13516");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive4.getNestedArchives(entryFilter11);
        java.io.File file13 = null;
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap24);
        explodedArchive4.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive4.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("[hi!://:100]", "archive://[/hi!://:100]:10hi!://:100/hi!:1", (int) ' ', "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertEquals(uRL30.toString(), "[hi!://:100]://[archive://[/hi!://:100]:10hi!://:100/hi!:1]:32hi!://hi!:1hi!");
    }

    @Test
    public void test13517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13517");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getHost();
        java.lang.String str41 = uRL9.toExternalForm();
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100" + "'", str41, "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test13518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13518");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        java.io.File file4 = null;
        java.io.File file5 = null;
        java.io.File file6 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap16);
        java.util.jar.Manifest manifest22 = explodedArchive21.getManifest();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive21.manifest = manifest23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive25.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes30 = fileEntry29.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = null;
        fileEntry29.name = asciiBytes31;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry29.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes34 = fileEntry29.getName();
        java.io.File file35 = null;
        fileEntry29.file = file35;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes37 = fileEntry29.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes38 = fileEntry29.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry29.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = fileEntry29.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive41 = explodedArchive21.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(asciiBytes30);
        org.junit.Assert.assertNull(asciiBytes33);
        org.junit.Assert.assertNull(asciiBytes34);
        org.junit.Assert.assertNull(asciiBytes37);
        org.junit.Assert.assertNull(asciiBytes38);
        org.junit.Assert.assertNull(asciiBytes39);
        org.junit.Assert.assertNull(asciiBytes40);
    }

    @Test
    public void test13519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13519");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.file;
        java.io.File file10 = fileEntry4.getFile();
        java.io.File file11 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13520");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        java.util.jar.Manifest manifest34 = explodedArchive31.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL(uRL24, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL46 = new java.net.URL("archive", "/hi!://:100", (int) (byte) 10, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL48 = new java.net.URL(uRL46, ":10");
        java.net.Proxy proxy49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection50 = uRL46.openConnection(proxy49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "archive://[/hi!://:100]:10hi!://:100/hi!:1");
        org.junit.Assert.assertEquals(uRL48.toString(), "archive://[/hi!://:100]:10hi!://:100/:10");
    }

    @Test
    public void test13521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13521");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://:100/:52");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/:52");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13522");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        boolean boolean13 = explodedArchive11.filtered;
        java.util.jar.Manifest manifest14 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = explodedArchive11.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test13523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13523");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.lang.String str9 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry10.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test13524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13524");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive", "/hi!://:100/hi!://:100/hi!://:100", "hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13525");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive25.getFilteredArchive(entryRenameFilter28);
        java.io.File file30 = null;
        explodedArchive25.root = file30;
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        explodedArchive35.filtered = false;
        java.util.jar.Manifest manifest41 = explodedArchive35.manifest;
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive50.entries;
        explodedArchive35.entries = asciiBytesMap51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap51);
        explodedArchive25.entries = asciiBytesMap51;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive25.entries;
        java.util.jar.Manifest manifest58 = explodedArchive25.manifest;
        java.util.jar.Manifest manifest59 = explodedArchive25.getManifest();
        java.io.File file60 = null;
        explodedArchive25.root = file60;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archive29);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertNull(manifest59);
    }

    @Test
    public void test13526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13526");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL9.getQuery();
        int int43 = uRL9.getDefaultPort();
        int int44 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
    }

    @Test
    public void test13527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13527");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive16.getFilteredArchive(entryRenameFilter19);
        java.io.File file21 = explodedArchive16.root;
        java.lang.String str22 = explodedArchive16.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap23);
        explodedArchive0.entries = asciiBytesMap23;
        java.util.jar.Manifest manifest27 = null;
        explodedArchive0.manifest = manifest27;
        java.io.File file29 = explodedArchive0.root;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNull(file29);
    }

    @Test
    public void test13528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13528");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry10.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry10.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry10.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry10.name;
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test13529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13529");
        java.net.URLConnection.setDefaultRequestProperty("[/hi!://:100/hi!://:100]:0", "/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test13530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13530");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archive16);
    }

    @Test
    public void test13531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13531");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        java.io.File file13 = fileEntry4.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13532");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL42 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str43 = uRL42.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getPath();
        java.lang.String str57 = uRL54.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive59.getNestedArchives(entryFilter61);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive59.getNestedArchives(entryFilter63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL54, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL42, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "archive://:10/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100");
    }

    @Test
    public void test13533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13533");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getProtocol();
        int int31 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        explodedArchive37.filtered = false;
        java.util.jar.Manifest manifest43 = explodedArchive37.manifest;
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive52.entries;
        explodedArchive37.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!://:100", "hi!://:100/hi!://:100/hi!://hi!", (int) (byte) 0, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL9, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str58 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test13534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13534");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        java.io.File file3 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive4.new FileEntry();
        java.util.jar.Manifest manifest7 = explodedArchive4.getManifest();
        java.util.jar.Manifest manifest8 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive9.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive9.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive9.manifest = manifest16;
        explodedArchive9.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive9.entries;
        explodedArchive4.entries = asciiBytesMap20;
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = fileEntry23.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = fileEntry23.getName();
        java.io.File file26 = null;
        fileEntry23.file = file26;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(asciiBytes24);
        org.junit.Assert.assertNull(asciiBytes25);
    }

    @Test
    public void test13535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13535");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.jar.Manifest manifest34 = null;
        explodedArchive32.manifest = manifest34;
        java.io.File file36 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive32.getNestedArchives(entryFilter37);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest40 = null;
        explodedArchive32.manifest = manifest40;
        java.io.File file42 = explodedArchive32.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("[archive://:10:100]:1", "/:52", 0, "[hi!://:100/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL(uRL23, "/archive:///archive:0hi!://:100:///archive:10hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = explodedArchive61.new FileEntry();
        explodedArchive61.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "/archive:///archive:0hi!://:100", (int) (byte) 10, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.toExternalForm();
        java.lang.String str68 = uRL66.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection69 = filteredURLStreamHandler43.openConnection(uRL66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertEquals(uRL44.toString(), "[archive://:10:100]:1://[/:52]:0[hi!://:100/:100]:0");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/archive:///archive:0hi!://:100:///archive:10hi!://:100/hi!");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0" + "'", str67, "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[://[archive://:10archive]:100archive://:10archive]:0" + "'", str68, "[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test13536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13536");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive10.getEntries();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(entryCollection12);
    }

    @Test
    public void test13537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13537");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getPath();
        java.lang.String str31 = uRL29.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL15, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive54.new FileEntry();
        java.lang.String str59 = explodedArchive54.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive54.new FileEntry();
        explodedArchive54.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://:100", "hi!://:100/hi!", (int) '4', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL(uRL44, "/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str67 = uRL44.getQuery();
        java.lang.String str68 = uRL44.getPath();
        java.lang.String str69 = uRL44.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive71.getEntries();
        java.io.File file74 = explodedArchive71.root;
        java.util.jar.Manifest manifest75 = explodedArchive71.getManifest();
        java.io.File file76 = null;
        explodedArchive71.root = file76;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry78 = explodedArchive71.new FileEntry();
        java.util.jar.Manifest manifest79 = explodedArchive71.manifest;
        explodedArchive71.filtered = true;
        java.io.File file82 = explodedArchive71.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL(uRL44, "hi!://:100/hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream85 = uRL84.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://:100/hi!://:100/:100");
    }

    @Test
    public void test13538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13538");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!");
        java.lang.String str15 = uRL9.getProtocol();
        java.lang.String str16 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        int int29 = uRL26.getDefaultPort();
        int int30 = uRL26.getDefaultPort();
        java.lang.String str31 = uRL26.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL60 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL61 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL62 = new java.net.URL(uRL26, "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        boolean boolean63 = uRL9.sameFile(uRL62);
        java.lang.String str64 = uRL9.getPath();
        java.lang.String str65 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL61.toString(), "/hi!://:100://archive:1/archive");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/[hi!://:100/:100]:100");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + ":100" + "'", str65, ":100");
    }

    @Test
    public void test13539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13539");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive15.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("[hi!://:100/hi!]", "hi!://:100/hi!://:100/hi!://hi!", (int) (short) 0, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str19 = uRL18.getHost();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals(uRL18.toString(), "[hi!://:100/hi!]://[hi!://:100/hi!://:100/hi!://hi!]:0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!://:100/hi!://:100/hi!://hi!]" + "'", str19, "[hi!://:100/hi!://:100/hi!://hi!]");
    }

    @Test
    public void test13540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13540");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getProtocol();
        java.lang.String str29 = uRL27.getUserInfo();
        java.lang.String str30 = uRL27.getPath();
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL27, ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test13541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13541");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL59 = new java.net.URL(uRL39, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str60 = uRL39.getFile();
        java.lang.String str61 = uRL39.getProtocol();
        java.lang.String str62 = uRL39.getAuthority();
        boolean boolean63 = uRL22.sameFile(uRL39);
        java.net.URL uRL65 = new java.net.URL(uRL22, "");
        java.lang.String str66 = uRL65.getQuery();
        java.net.URL uRL68 = new java.net.URL(uRL65, "");
        java.lang.String str69 = uRL65.getUserInfo();
        java.lang.String str70 = uRL65.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test13542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13542");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getPath();
        java.net.URL uRL17 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:0");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        explodedArchive19.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL(uRL17, "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection27 = uRL26.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100/[://[archive://:10archive]:100archive://hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
    }

    @Test
    public void test13543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13543");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive13.entries = asciiBytesMap14;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest16 = explodedArchive13.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
    }

    @Test
    public void test13544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13544");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive2.entries = asciiBytesMap6;
        java.io.File file8 = explodedArchive2.root;
        java.io.File file9 = explodedArchive2.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        java.util.jar.Manifest manifest19 = null;
        explodedArchive18.manifest = manifest19;
        explodedArchive18.filtered = true;
        java.io.File file23 = null;
        explodedArchive18.root = file23;
        java.util.jar.Manifest manifest25 = explodedArchive18.getManifest();
        java.util.jar.Manifest manifest26 = null;
        explodedArchive18.manifest = manifest26;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive18.manifest = manifest28;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap30);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test13545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13545");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.io.File file9 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test13546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13546");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        explodedArchive0.filtered = false;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
    }

    @Test
    public void test13547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13547");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.lang.String str15 = explodedArchive11.toString();
        java.util.jar.Manifest manifest16 = null;
        explodedArchive11.manifest = manifest16;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive11.manifest = manifest18;
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file20, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
    }

    @Test
    public void test13548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13548");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive34.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getFile();
        int int54 = uRL52.getDefaultPort();
        java.lang.String str55 = uRL52.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str74 = explodedArchive73.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection75 = explodedArchive73.getEntries();
        java.util.jar.Manifest manifest76 = explodedArchive73.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive73.new FilteredURLStreamHandler();
        java.net.URL uRL78 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.lang.String str79 = uRL78.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str82 = explodedArchive81.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection83 = explodedArchive81.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler84 = explodedArchive81.new FilteredURLStreamHandler();
        java.net.URL uRL85 = new java.net.URL(uRL78, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL86 = new java.net.URL(uRL66, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL87 = new java.net.URL(uRL52, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL88 = new java.net.URL(uRL41, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL89 = new java.net.URL(uRL22, "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.lang.String str90 = uRL22.getPath();
        int int91 = uRL22.getDefaultPort();
        java.lang.String str92 = uRL22.getHost();
        java.lang.String str93 = uRL22.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertEquals(uRL41.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "archive" + "'", str74, "archive");
        org.junit.Assert.assertNotNull(entryCollection75);
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "archive" + "'", str82, "archive");
        org.junit.Assert.assertNotNull(entryCollection83);
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL86.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL88.toString(), "/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test13549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13549");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.io.File file4 = null;
        explodedArchive0.root = file4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test13550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13550");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getHost();
        int int16 = uRL13.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL26, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str55 = uRL26.toExternalForm();
        boolean boolean56 = uRL13.sameFile(uRL26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive62.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL70 = new java.net.URL(uRL26, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL71 = new java.net.URL(":10", "", (int) '#', "/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI72 = uRL71.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: :10://:35/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!://:100" + "'", str55, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertEquals(uRL69.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), ":10://:35/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
    }

    @Test
    public void test13551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13551");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        java.io.File file6 = explodedArchive1.root;
        java.lang.String str7 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive9.getNestedArchives(entryFilter10);
        java.io.File file12 = null;
        explodedArchive9.root = file12;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive9.getFilteredArchive(entryRenameFilter14);
        java.io.File file16 = explodedArchive9.root;
        boolean boolean17 = explodedArchive9.filtered;
        java.lang.Class<?> wildcardClass18 = explodedArchive9.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test13552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13552");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL15.getQuery();
        java.lang.String str34 = uRL15.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = null;
        explodedArchive36.entries = asciiBytesMap38;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive36.manifest = manifest40;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive36.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest43 = explodedArchive36.manifest;
        java.io.File file44 = explodedArchive36.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL15, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        int int47 = uRL15.getPort();
        java.lang.String str48 = uRL15.getQuery();
        java.net.Proxy proxy49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection50 = uRL15.openConnection(proxy49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test13553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13553");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive4.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("archive://:10archive", "archive://:10archive", (int) (byte) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getHost();
        int int26 = uRL23.getPort();
        java.lang.String str27 = uRL23.getQuery();
        java.net.URL uRL29 = new java.net.URL(uRL23, "");
        java.lang.String str30 = uRL29.getPath();
        int int31 = uRL29.getDefaultPort();
        java.lang.String str32 = uRL29.getQuery();
        java.lang.String str33 = uRL29.getProtocol();
        boolean boolean34 = uRL13.sameFile(uRL29);
        java.lang.String str35 = uRL29.getPath();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals(uRL13.toString(), "archive://:10archive://[archive://:10archive]:1/archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test13554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13554");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        java.io.File file12 = null;
        explodedArchive0.root = file12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNull(manifest11);
    }

    @Test
    public void test13555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13555");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive25.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL9.getFile();
        java.lang.String str34 = uRL9.getPath();
        java.lang.String str35 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test13556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13556");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getProtocol();
        java.lang.String str29 = uRL27.getUserInfo();
        java.lang.String str30 = uRL27.getPath();
        int int31 = uRL27.getDefaultPort();
        java.io.File file41 = null;
        java.io.File file42 = null;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!://:100/:100", "hi!://:100/hi!:1", (int) (short) 100, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL("/archive", "/://[archive://:10archive]:100archive://:10archive", (int) ' ', "[hi!://:100/hi!]:1", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL27, "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getQuery();
        java.lang.String str70 = uRL68.getRef();
        int int71 = uRL68.getPort();
        java.lang.String str72 = uRL68.getProtocol();
        java.lang.String str73 = uRL68.getPath();
        java.lang.String str74 = uRL68.getAuthority();
        java.lang.String str75 = uRL68.getRef();
        int int76 = uRL68.getPort();
        java.lang.String str77 = uRL68.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str83 = explodedArchive82.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection84 = explodedArchive82.getEntries();
        java.util.jar.Manifest manifest85 = explodedArchive82.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler86 = explodedArchive82.new FilteredURLStreamHandler();
        java.net.URL uRL87 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.lang.String str88 = uRL87.getQuery();
        java.lang.String str89 = uRL87.getRef();
        java.lang.String str90 = uRL87.getRef();
        java.net.URL uRL92 = new java.net.URL(uRL87, "hi!");
        boolean boolean93 = uRL68.sameFile(uRL92);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection94 = filteredURLStreamHandler55.openConnection(uRL68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/:100://[hi!://:100/hi!:1]:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "/archive://[/://[archive://:10archive]:100archive://:10archive]:32[hi!://:100/hi!]:1");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ":100" + "'", str74, ":100");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!://:100" + "'", str77, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "archive" + "'", str83, "archive");
        org.junit.Assert.assertNotNull(entryCollection84);
        org.junit.Assert.assertNull(manifest85);
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test13557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13557");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.lang.String str11 = explodedArchive0.toString();
        java.lang.String str12 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str14 = explodedArchive13.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive13.new FileEntry();
        java.util.jar.Manifest manifest16 = explodedArchive13.getManifest();
        java.util.jar.Manifest manifest17 = explodedArchive13.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive18.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive18.getNestedArchives(entryFilter23);
        java.util.jar.Manifest manifest25 = null;
        explodedArchive18.manifest = manifest25;
        explodedArchive18.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive18.entries;
        explodedArchive13.entries = asciiBytesMap29;
        boolean boolean31 = explodedArchive13.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive13.entries;
        explodedArchive0.entries = asciiBytesMap32;
        java.io.File file34 = null;
        explodedArchive0.root = file34;
        java.util.jar.Manifest manifest36 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive0.getNestedArchives(entryFilter37);
        java.util.jar.Manifest manifest39 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(manifest39);
    }

    @Test
    public void test13558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13558");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        explodedArchive11.filtered = true;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL17 = explodedArchive11.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNull(manifest14);
    }

    @Test
    public void test13559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13559");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://[hi!://:100/hi!:1]:97", ":1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13560");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.lang.String str9 = explodedArchive0.toString();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(archive13);
    }

    @Test
    public void test13561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13561");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.name;
        java.io.File file19 = fileEntry12.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test13562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13562");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        java.io.File file14 = null;
        fileEntry4.file = file14;
        java.io.File file16 = fileEntry4.file;
        java.io.File file17 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = null;
        fileEntry4.name = asciiBytes19;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
    }

    @Test
    public void test13563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13563");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive1.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive1.manifest = manifest11;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive1.getNestedArchives(entryFilter13);
        boolean boolean15 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive1.getFilteredArchive(entryRenameFilter16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive18.new FileEntry();
        java.util.jar.Manifest manifest21 = explodedArchive18.getManifest();
        boolean boolean22 = explodedArchive18.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive18.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        boolean boolean26 = explodedArchive24.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter27 = null;
        org.springframework.boot.loader.archive.Archive archive28 = explodedArchive24.getFilteredArchive(entryRenameFilter27);
        java.io.File file29 = explodedArchive24.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter33 = null;
        org.springframework.boot.loader.archive.Archive archive34 = explodedArchive30.getFilteredArchive(entryRenameFilter33);
        java.io.File file35 = explodedArchive30.root;
        java.lang.String str36 = explodedArchive30.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive30.entries;
        explodedArchive24.entries = asciiBytesMap37;
        explodedArchive18.entries = asciiBytesMap37;
        java.io.File file40 = null;
        explodedArchive18.root = file40;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive18.entries;
        explodedArchive1.entries = asciiBytesMap42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap42);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(archive17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(archive28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNotNull(archive34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
    }

    @Test
    public void test13564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13564");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        boolean boolean16 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive11.getNestedArchives(entryFilter17);
        java.util.jar.Manifest manifest19 = explodedArchive11.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive11.new FilteredURLStreamHandler();
        java.io.File file21 = explodedArchive11.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test13565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13565");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive6.getNestedArchives(entryFilter13);
        java.io.File file15 = null;
        explodedArchive6.root = file15;
        java.io.File file17 = null;
        explodedArchive6.root = file17;
        java.util.jar.Manifest manifest19 = null;
        explodedArchive6.manifest = manifest19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive21.manifest = manifest23;
        java.io.File file25 = null;
        explodedArchive21.root = file25;
        java.util.jar.Manifest manifest27 = null;
        explodedArchive21.manifest = manifest27;
        boolean boolean29 = explodedArchive21.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive21.entries;
        explodedArchive6.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap30);
        explodedArchive0.entries = asciiBytesMap30;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test13566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13566");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.getHost();
        java.lang.String str28 = uRL23.getRef();
        java.lang.Class<?> wildcardClass29 = uRL23.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test13567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13567");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        boolean boolean20 = explodedArchive19.filtered;
        java.util.jar.Manifest manifest21 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive19.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        java.util.jar.Manifest manifest29 = null;
        explodedArchive25.manifest = manifest29;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter32 = null;
        org.springframework.boot.loader.archive.Archive archive33 = explodedArchive25.getFilteredArchive(entryRenameFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive25.entries;
        explodedArchive19.entries = asciiBytesMap34;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archive33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
    }

    @Test
    public void test13568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13568");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getRef();
        java.lang.String str32 = uRL9.toExternalForm();
        java.lang.String str33 = uRL9.getPath();
        java.lang.String str34 = uRL9.getPath();
        java.lang.Class<?> wildcardClass35 = uRL9.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!://:100" + "'", str32, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test13569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13569");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        boolean boolean11 = explodedArchive8.filtered;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive8.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fileEntry14.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test13570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13570");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        java.io.File file14 = null;
        fileEntry4.file = file14;
        java.io.File file16 = fileEntry4.file;
        java.io.File file17 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test13571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13571");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive23.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = fileEntry24.getName();
        java.io.File file26 = null;
        fileEntry24.file = file26;
        java.io.File file28 = fileEntry24.file;
        java.io.File file29 = null;
        fileEntry24.file = file29;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry24.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry24.name;
        java.io.File file33 = fileEntry24.getFile();
        java.io.File file34 = fileEntry24.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive35 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(asciiBytes25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(asciiBytes31);
        org.junit.Assert.assertNull(asciiBytes32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test13572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13572");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL66.getHost();
        java.lang.String str68 = uRL66.getQuery();
        java.lang.String str69 = uRL66.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100/:100" + "'", str69, "hi!://:100/:100");
    }

    @Test
    public void test13573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13573");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        java.net.URL uRL29 = new java.net.URL(uRL9, "hi!://:100/hi!://:100");
        int int30 = uRL29.getDefaultPort();
        java.net.Proxy proxy31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection32 = uRL29.openConnection(proxy31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test13574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13574");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getFile();
        int int34 = uRL32.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getQuery();
        java.lang.String str47 = uRL45.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive53.getEntries();
        java.util.jar.Manifest manifest56 = explodedArchive53.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL59 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL60 = new java.net.URL(uRL32, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL61 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str62 = uRL61.getFile();
        boolean boolean63 = uRL15.sameFile(uRL61);
        java.lang.String str64 = uRL15.getRef();
        int int65 = uRL15.getPort();
        java.lang.Object obj66 = null;
        boolean boolean67 = uRL15.equals(obj66);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL61.toString(), "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 100 + "'", int65 == 100);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test13575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13575");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL51 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL52 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str53 = uRL52.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str64 = uRL63.getQuery();
        java.lang.String str65 = uRL63.getRef();
        int int66 = uRL63.getPort();
        java.lang.String str67 = uRL63.toExternalForm();
        java.lang.String str68 = uRL63.getRef();
        java.lang.String str69 = uRL63.getPath();
        java.net.URL uRL71 = new java.net.URL(uRL63, "[://[archive://:10archive]:100archive://:10archive]:0");
        java.lang.String str72 = uRL71.getUserInfo();
        boolean boolean73 = uRL52.sameFile(uRL71);
        java.lang.String str74 = uRL71.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL51.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/:100" + "'", str53, "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100" + "'", str67, "hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ":100" + "'", str74, ":100");
    }

    @Test
    public void test13576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13576");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        java.lang.String str15 = uRL9.getProtocol();
        java.lang.String str16 = uRL9.getUserInfo();
        java.lang.String str17 = uRL9.getQuery();
        java.lang.String str18 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test13577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13577");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive29.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getQuery();
        java.lang.String str40 = uRL37.getFile();
        java.lang.String str41 = uRL37.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertEquals(uRL36.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!://:100" + "'", str40, "/hi!://:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!://:100" + "'", str41, "/hi!://:100");
    }

    @Test
    public void test13578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13578");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        java.io.File file14 = fileEntry4.getFile();
        java.io.File file15 = null;
        fileEntry4.file = file15;
        java.io.File file17 = null;
        fileEntry4.file = file17;
        java.io.File file19 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry4.name = asciiBytes20;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes22 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(asciiBytes22);
    }

    @Test
    public void test13579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13579");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getProtocol();
        int int31 = uRL9.getPort();
        java.lang.String str32 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getQuery();
        java.lang.String str44 = uRL42.getRef();
        int int45 = uRL42.getPort();
        java.lang.String str46 = uRL42.getProtocol();
        java.lang.String str47 = uRL42.getPath();
        java.lang.String str48 = uRL42.getAuthority();
        java.lang.String str49 = uRL42.getRef();
        int int50 = uRL42.getPort();
        java.lang.String str51 = uRL42.getAuthority();
        boolean boolean52 = uRL9.sameFile(uRL42);
        java.lang.String str53 = uRL42.getProtocol();
        java.lang.Class[] classArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = uRL42.getContent(classArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ":100" + "'", str48, ":100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ":100" + "'", str51, ":100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test13580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13580");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        java.io.File file10 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL11 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13581");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getAuthority();
        int int11 = uRL9.getPort();
        java.lang.String str12 = uRL9.toExternalForm();
        java.lang.String str13 = uRL9.getPath();
        java.io.File file15 = null;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive26.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive26.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL9, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        int int33 = uRL32.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:1" + "'", str10, "hi!:1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://hi!:1hi!" + "'", str12, "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://hi!:1/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test13582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13582");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL37.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL60, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.toExternalForm();
        java.lang.String str70 = uRL67.getQuery();
        boolean boolean71 = uRL37.sameFile(uRL67);
        java.net.URL uRL73 = new java.net.URL(uRL37, "[/hi!://:100/archive]");
        int int74 = uRL37.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection75 = uRL37.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100/archive" + "'", str50, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100/hi!" + "'", str69, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test13583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13583");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        explodedArchive8.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive8.getNestedArchives(entryFilter16);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive8.manifest = manifest18;
        boolean boolean20 = explodedArchive8.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        org.springframework.boot.loader.archive.Archive archive22 = explodedArchive8.getFilteredArchive(entryRenameFilter21);
        java.lang.String str23 = explodedArchive8.toString();
        java.io.File file24 = explodedArchive8.root;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive8.manifest = manifest25;
        java.util.jar.Manifest manifest27 = explodedArchive8.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive8.entries;
        explodedArchive0.entries = asciiBytesMap28;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(archive22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
    }

    @Test
    public void test13584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13584");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(archive16);
    }

    @Test
    public void test13585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13585");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.lang.String str14 = explodedArchive0.toString();
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest16 = explodedArchive0.manifest;
        explodedArchive0.filtered = false;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        boolean boolean25 = explodedArchive20.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter30 = null;
        org.springframework.boot.loader.archive.Archive archive31 = explodedArchive0.getFilteredArchive(entryRenameFilter30);
        java.lang.String str32 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL33 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archive31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
    }

    @Test
    public void test13586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13586");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive4.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive4.getNestedArchives(entryFilter12);
        java.util.jar.Manifest manifest14 = explodedArchive4.getManifest();
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        explodedArchive16.filtered = false;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive16.manifest = manifest24;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive27.getNestedArchives(entryFilter34);
        java.io.File file36 = null;
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap47);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap47);
        explodedArchive27.entries = asciiBytesMap47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        explodedArchive16.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap52);
        explodedArchive4.entries = asciiBytesMap52;
        java.util.jar.Manifest manifest56 = explodedArchive4.manifest;
        java.util.jar.Manifest manifest57 = explodedArchive4.getManifest();
        java.util.jar.Manifest manifest58 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("[/hi!://:100/archive]:0://[/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100]:0", "hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 10, "hi!://:100/[:100]", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "[/hi!://:100/archive]:0://[/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100]:0://[hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:10hi!://:100/[:100]");
    }

    @Test
    public void test13587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13587");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest16 = explodedArchive11.getManifest();
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        boolean boolean20 = explodedArchive11.filtered;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test13588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13588");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        int int16 = uRL13.getPort();
        java.lang.String str17 = uRL13.getProtocol();
        java.lang.String str18 = uRL13.getPath();
        java.lang.String str19 = uRL13.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getHost();
        int int33 = uRL30.getPort();
        java.lang.String str34 = uRL30.getQuery();
        java.net.URL uRL36 = new java.net.URL(uRL30, "");
        java.lang.String str37 = uRL36.getPath();
        int int38 = uRL36.getDefaultPort();
        java.lang.String str39 = uRL36.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getPath();
        java.lang.String str52 = uRL50.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL64 = new java.net.URL(uRL50, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL65 = new java.net.URL(uRL36, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL66 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL67 = new java.net.URL("[hi!://:100]:97", "[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100", 35, "archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str68 = uRL67.getUserInfo();
        java.lang.String str69 = uRL67.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI70 = uRL67.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 0: [hi!://:100]:97://[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100:35archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + ":100" + "'", str19, ":100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL67.toString(), "[hi!://:100]:97://[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100:35archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!" + "'", str69, "archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test13589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13589");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test13590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13590");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive11);
    }

    @Test
    public void test13591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13591");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        org.springframework.boot.loader.archive.Archive archive8 = explodedArchive4.getFilteredArchive(entryRenameFilter7);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive4.new FileEntry();
        explodedArchive4.filtered = true;
        java.util.jar.Manifest manifest12 = explodedArchive4.manifest;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.lang.String str20 = explodedArchive14.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive14.new FilteredURLStreamHandler();
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.jar.Manifest manifest40 = explodedArchive39.getManifest();
        explodedArchive39.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter43 = null;
        org.springframework.boot.loader.archive.Archive archive44 = explodedArchive39.getFilteredArchive(entryRenameFilter43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter48 = null;
        org.springframework.boot.loader.archive.Archive archive49 = explodedArchive45.getFilteredArchive(entryRenameFilter48);
        java.io.File file50 = explodedArchive45.root;
        java.lang.String str51 = explodedArchive45.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive45.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive45.entries;
        explodedArchive39.entries = asciiBytesMap53;
        explodedArchive4.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("[archive://:10archive]", "hi!", 100, "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://[archive://:10archive]:10/[/hi!://:100/archive]://[:100]:52:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(archive8);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(archive44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNotNull(archive49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertEquals(uRL57.toString(), "[archive://:10archive]://hi!:100/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://[archive://:10archive]:10/[/hi!://:100/archive]://[:100]:52:100/:100");
    }

    @Test
    public void test13592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13592");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive2.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive2.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive2.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive2.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        explodedArchive2.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap20);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter25 = null;
        org.springframework.boot.loader.archive.Archive archive26 = explodedArchive24.getFilteredArchive(entryRenameFilter25);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archive26);
    }

    @Test
    public void test13593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13593");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive69.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler72 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL73 = new java.net.URL(uRL66, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL74 = new java.net.URL(uRL54, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL75 = new java.net.URL(uRL43, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL76 = new java.net.URL("archive", "/hi!://:100", (int) (byte) 10, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        boolean boolean77 = uRL28.sameFile(uRL76);
        java.lang.String str78 = uRL28.getRef();
        java.lang.String str79 = uRL28.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL76.toString(), "archive://[/hi!://:100]:10hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "archive://:10archive" + "'", str79, "archive://:10archive");
    }

    @Test
    public void test13594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13594");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.toExternalForm();
        int int14 = uRL11.getDefaultPort();
        java.lang.String str15 = uRL11.getHost();
        java.net.URL uRL17 = new java.net.URL(uRL11, "hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str13, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!://:100/hi!]" + "'", str15, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
    }

    @Test
    public void test13595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13595");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "hi!://:100/hi!://:100/hi!://:100/hi!", "/[hi!://:100/hi!]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13596");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        explodedArchive23.filtered = true;
        java.io.File file26 = null;
        explodedArchive23.root = file26;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive23.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive23.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        explodedArchive23.root = file32;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive23.getNestedArchives(entryFilter34);
        java.io.File file36 = explodedArchive23.root;
        explodedArchive23.filtered = true;
        java.io.File file39 = null;
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = null;
        explodedArchive42.entries = asciiBytesMap46;
        boolean boolean48 = explodedArchive42.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive42.new FileEntry();
        java.io.File file50 = null;
        java.io.File file51 = null;
        java.io.File file52 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive53.getNestedArchives(entryFilter55);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive53.getNestedArchives(entryFilter57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive53.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, asciiBytesMap59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap61);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap61);
        explodedArchive42.entries = asciiBytesMap61;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap61);
        java.io.File file66 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive67.getNestedArchives(entryFilter71);
        java.lang.String str73 = explodedArchive67.toString();
        java.util.jar.Manifest manifest74 = explodedArchive67.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap75);
        explodedArchive65.entries = asciiBytesMap75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap75);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap75);
        explodedArchive23.entries = asciiBytesMap75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap75);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap75);
        explodedArchive0.entries = asciiBytesMap75;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNull(manifest74);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
    }

    @Test
    public void test13597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13597");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getPath();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        int int35 = uRL33.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL60 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL61 = new java.net.URL(uRL33, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str62 = uRL61.getUserInfo();
        java.net.URL uRL64 = new java.net.URL(uRL61, "hi!");
        java.lang.String str65 = uRL64.getHost();
        java.lang.String str66 = uRL64.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive68.filtered = true;
        explodedArchive68.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive68.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL(uRL64, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        boolean boolean76 = uRL22.sameFile(uRL75);
        java.lang.String str77 = uRL75.toExternalForm();
        int int78 = uRL75.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI79 = uRL75.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://:100/hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + ":100" + "'", str66, ":100");
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!://:100/hi!://:100/hi!://:100" + "'", str77, "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 100 + "'", int78 == 100);
    }

    @Test
    public void test13598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13598");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        explodedArchive12.filtered = false;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive12.manifest = manifest20;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive47.entries;
        explodedArchive12.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap48);
        explodedArchive0.entries = asciiBytesMap48;
        java.util.jar.Manifest manifest52 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive0.getNestedArchives(entryFilter54);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(entryCollection56);
    }

    @Test
    public void test13599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13599");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test13600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13600");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        java.io.File file20 = null;
        java.io.File file21 = null;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap31);
        explodedArchive11.entries = asciiBytesMap31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive35.entries;
        explodedArchive0.entries = asciiBytesMap36;
        java.util.jar.Manifest manifest38 = null;
        explodedArchive0.manifest = manifest38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
    }

    @Test
    public void test13601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13601");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.lang.String str9 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
        boolean boolean15 = explodedArchive0.filtered;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test13602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13602");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive7.new FileEntry();
        java.lang.String str12 = explodedArchive7.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        explodedArchive0.entries = asciiBytesMap13;
        java.io.File file15 = explodedArchive0.root;
        boolean boolean16 = explodedArchive0.filtered;
        boolean boolean17 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive0.getEntries();
        java.io.File file19 = null;
        explodedArchive0.root = file19;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(entryCollection18);
    }

    @Test
    public void test13603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13603");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        java.io.File file14 = null;
        fileEntry4.file = file14;
        java.io.File file16 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes17);
    }

    @Test
    public void test13604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13604");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter23 = null;
        org.springframework.boot.loader.archive.Archive archive24 = explodedArchive21.getFilteredArchive(entryRenameFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.jar.Manifest manifest27 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive21.getNestedArchives(entryFilter28);
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = null;
        explodedArchive32.entries = asciiBytesMap36;
        java.io.File file38 = explodedArchive32.root;
        java.io.File file39 = explodedArchive32.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive40.entries;
        explodedArchive32.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap46);
        explodedArchive21.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap46);
        explodedArchive0.entries = asciiBytesMap46;
        java.util.jar.Manifest manifest53 = null;
        explodedArchive0.manifest = manifest53;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
    }

    @Test
    public void test13605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13605");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.io.File file8 = null;
        fileEntry7.file = file8;
        java.io.File file10 = null;
        fileEntry7.file = file10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry7.name = asciiBytes12;
        java.io.File file14 = fileEntry7.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13606");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        int int14 = uRL9.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL42 = new java.net.URL(uRL28, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str43 = uRL28.getAuthority();
        java.lang.String str44 = uRL28.getUserInfo();
        java.lang.String str45 = uRL28.getRef();
        boolean boolean46 = uRL17.sameFile(uRL28);
        java.lang.String str47 = uRL28.getUserInfo();
        java.net.Proxy proxy48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection49 = uRL28.openConnection(proxy48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test13607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13607");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(entryCollection12);
    }

    @Test
    public void test13608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13608");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[archive://:0hi!://:100/hi!]");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13609");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL29.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = null;
        explodedArchive45.entries = asciiBytesMap47;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive45.manifest = manifest49;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getPath();
        java.lang.String str54 = uRL52.getHost();
        boolean boolean55 = uRL29.sameFile(uRL52);
        java.lang.String str56 = uRL29.getRef();
        java.lang.String str57 = uRL29.getUserInfo();
        java.lang.String str58 = uRL29.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/:100" + "'", str40, "/:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/hi!" + "'", str53, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!://:100/hi!]" + "'", str54, "[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test13610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13610");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive8.new FileEntry();
        java.lang.String str13 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive8.new FileEntry();
        explodedArchive8.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL19 = new java.net.URL("/archive:///archive:0hi!://:100", "/:100", (int) (byte) 0, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str20 = uRL19.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI21 = uRL19.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in path at index 34: /archive:///archive:0hi!://:100://[/:100]:0hi!://:100/hi!:1");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals(uRL18.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL19.toString(), "/archive:///archive:0hi!://:100://[/:100]:0hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[/:100]:0" + "'", str20, "[/:100]:0");
    }

    @Test
    public void test13611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13611");
        java.net.URLConnection.setDefaultRequestProperty("/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100", "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
    }

    @Test
    public void test13612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13612");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        explodedArchive21.filtered = true;
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        explodedArchive21.filtered = true;
        java.io.File file27 = null;
        explodedArchive21.root = file27;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive21.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive21.new FileEntry();
        java.io.File file31 = fileEntry30.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file31);
    }

    @Test
    public void test13613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13613");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNotNull(entryCollection6);
    }

    @Test
    public void test13614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13614");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive7.new FileEntry();
        java.lang.String str12 = explodedArchive7.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        explodedArchive0.entries = asciiBytesMap13;
        java.io.File file15 = explodedArchive0.root;
        boolean boolean16 = explodedArchive0.filtered;
        boolean boolean17 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive0.getNestedArchives(entryFilter19);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL21 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(archiveList20);
    }

    @Test
    public void test13615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13615");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.jar.Manifest manifest33 = explodedArchive32.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        java.lang.Class<?> wildcardClass36 = explodedArchive32.getClass();
        java.lang.Class[] classArray37 = new java.lang.Class[] { wildcardClass36 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj38 = uRL23.getContent(classArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(classArray37);
    }

    @Test
    public void test13616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13616");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.lang.String str19 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter20 = null;
        org.springframework.boot.loader.archive.Archive archive21 = explodedArchive11.getFilteredArchive(entryRenameFilter20);
        java.util.jar.Manifest manifest22 = explodedArchive11.getManifest();
        java.io.File file23 = null;
        explodedArchive11.root = file23;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive11.getNestedArchives(entryFilter25);
        boolean boolean27 = explodedArchive11.filtered;
        java.io.File file28 = explodedArchive11.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(archive21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(file28);
    }

    @Test
    public void test13617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13617");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test13618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13618");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        explodedArchive4.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive4.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("/[hi!://:100/hi!]", "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]:///hi!:0hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0", (int) (short) 0, "[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getPath();
        java.lang.String str32 = uRL29.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive34.getNestedArchives(entryFilter38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL29, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/[hi!://:100/hi!]", (int) '#', "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str44 = uRL43.getRef();
        boolean boolean45 = uRL15.equals((java.lang.Object) str44);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertEquals(uRL15.toString(), "/[hi!://:100/hi!]://[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]:///hi!:0hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0:0[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://:100/hi!");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test13619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13619");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getPath();
        java.lang.String str16 = uRL13.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL(uRL13, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/[hi!://:100/hi!]", (int) '#', "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        int int28 = uRL27.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream29 = uRL27.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test13620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13620");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        boolean boolean33 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive0.manifest = manifest34;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test13621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13621");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.toExternalForm();
        java.lang.String str28 = uRL23.getRef();
        java.lang.String str29 = uRL23.getPath();
        int int30 = uRL23.getDefaultPort();
        int int31 = uRL23.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100/hi!" + "'", str27, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
    }

    @Test
    public void test13622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13622");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        explodedArchive8.filtered = false;
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        explodedArchive8.entries = asciiBytesMap24;
        explodedArchive0.entries = asciiBytesMap24;
        java.io.File file27 = null;
        explodedArchive0.root = file27;
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap39);
        explodedArchive40.filtered = true;
        java.io.File file43 = null;
        explodedArchive40.root = file43;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive40.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive40.getEntries();
        java.lang.String str47 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive40.new FileEntry();
        explodedArchive40.filtered = true;
        boolean boolean51 = explodedArchive40.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive40.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive53 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test13623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13623");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        int int31 = uRL9.getPort();
        java.lang.String str32 = uRL9.getProtocol();
        java.lang.String str33 = uRL9.getHost();
        java.net.Proxy proxy34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection35 = uRL9.openConnection(proxy34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test13624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13624");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.lang.String str14 = explodedArchive0.toString();
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest16 = explodedArchive0.manifest;
        explodedArchive0.filtered = false;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        boolean boolean25 = explodedArchive20.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter30 = null;
        org.springframework.boot.loader.archive.Archive archive31 = explodedArchive0.getFilteredArchive(entryRenameFilter30);
        java.lang.String str32 = explodedArchive0.toString();
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file33, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archive31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
    }

    @Test
    public void test13625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13625");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        boolean boolean26 = uRL9.sameFile(uRL21);
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!:1");
        java.lang.String str29 = uRL28.getRef();
        int int30 = uRL28.getDefaultPort();
        java.lang.String str31 = uRL28.getPath();
        java.lang.String str32 = uRL28.getProtocol();
        java.net.URL uRL34 = new java.net.URL(uRL28, "/hi!://:100/hi!://:100/archive");
        java.lang.String str35 = uRL34.toExternalForm();
        java.lang.String str36 = uRL34.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!:1" + "'", str31, "/hi!:1");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!://:100/hi!://:100/hi!://:100/archive" + "'", str35, "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!://:100/hi!://:100/hi!://:100/archive" + "'", str36, "hi!://:100/hi!://:100/hi!://:100/archive");
    }

    @Test
    public void test13626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13626");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.io.File file11 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13627");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        boolean boolean33 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest34 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive0.getFilteredArchive(entryRenameFilter35);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive0.getEntries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNotNull(archive36);
        org.junit.Assert.assertNotNull(entryCollection37);
    }

    @Test
    public void test13628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13628");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive1.new FilteredURLStreamHandler();
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.io.File file27 = null;
        explodedArchive26.root = file27;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
    }

    @Test
    public void test13629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13629");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive11.getManifest();
        explodedArchive11.filtered = false;
        boolean boolean35 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter36 = null;
        org.springframework.boot.loader.archive.Archive archive37 = explodedArchive11.getFilteredArchive(entryRenameFilter36);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive11.getEntries();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(archive37);
        org.junit.Assert.assertNotNull(entryCollection38);
    }

    @Test
    public void test13630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13630");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        java.io.File file14 = null;
        fileEntry4.file = file14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = null;
        fileEntry4.name = asciiBytes16;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13631");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/archive:///archive:1hi!://:100/archive", "[hi!://:100/hi!://:100/hi!://:100/hi!://:100]");
    }

    @Test
    public void test13632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13632");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = fileEntry5.name;
        java.io.File file7 = fileEntry5.getFile();
        java.io.File file8 = fileEntry5.file;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(asciiBytes6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test13633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13633");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        java.net.URL uRL29 = new java.net.URL(uRL9, "hi!://:100/hi!://:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.jar.Manifest manifest38 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.getPath();
        java.lang.String str42 = uRL40.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL54 = new java.net.URL(uRL40, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL55 = new java.net.URL(uRL29, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str61 = explodedArchive60.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection62 = explodedArchive60.getEntries();
        java.util.jar.Manifest manifest63 = explodedArchive60.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.lang.String str66 = uRL65.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str78 = uRL77.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str81 = explodedArchive80.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection82 = explodedArchive80.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL(uRL77, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.net.URL uRL85 = new java.net.URL(uRL65, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.lang.String str86 = uRL65.getProtocol();
        int int87 = uRL65.getPort();
        boolean boolean88 = uRL55.sameFile(uRL65);
        java.lang.String str89 = uRL65.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "archive" + "'", str61, "archive");
        org.junit.Assert.assertNotNull(entryCollection62);
        org.junit.Assert.assertNull(manifest63);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "archive" + "'", str81, "archive");
        org.junit.Assert.assertNotNull(entryCollection82);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 100 + "'", int87 == 100);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test13634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13634");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.lang.String str14 = uRL9.getFile();
        java.lang.String str15 = uRL9.getRef();
        java.lang.String str16 = uRL9.getFile();
        int int17 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test13635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13635");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file5 = null;
        java.io.File file6 = null;
        java.io.File file7 = null;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap18);
        explodedArchive0.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive0.getNestedArchives(entryFilter22);
        java.io.File file24 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive0.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
    }

    @Test
    public void test13636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13636");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        java.io.File file21 = null;
        fileEntry20.file = file21;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = null;
        fileEntry20.name = asciiBytes23;
        java.io.File file25 = null;
        fileEntry20.file = file25;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
    }

    @Test
    public void test13637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13637");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI12 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test13638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13638");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getFile();
        java.net.URL uRL22 = new java.net.URL(uRL16, "archive");
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL16, "[/hi!://:100/archive]", uRLStreamHandler24);
        java.lang.String str26 = uRL16.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100/hi!" + "'", str26, "hi!://:100/hi!");
    }

    @Test
    public void test13639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13639");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        explodedArchive11.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive11.getEntries();
        explodedArchive11.filtered = false;
        java.io.File file21 = explodedArchive11.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test13640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13640");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0", ":0", (int) (short) 10, "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13641");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(manifest12);
    }

    @Test
    public void test13642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13642");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest25 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.jar.Manifest manifest28 = null;
        explodedArchive26.manifest = manifest28;
        java.util.jar.Manifest manifest30 = explodedArchive26.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive26.entries;
        explodedArchive0.entries = asciiBytesMap31;
        java.util.jar.Manifest manifest33 = explodedArchive0.manifest;
        java.lang.String str34 = explodedArchive0.toString();
        java.io.File file35 = null;
        explodedArchive0.root = file35;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive0.getNestedArchives(entryFilter37);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(archiveList38);
    }

    @Test
    public void test13643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13643");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest12);
    }

    @Test
    public void test13644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13644");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getProtocol();
        java.lang.String str16 = uRL9.getFile();
        java.lang.String str17 = uRL9.getPath();
        java.lang.String str18 = uRL9.getProtocol();
        java.net.URL uRL20 = new java.net.URL(uRL9, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.lang.String str21 = uRL20.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":100" + "'", str21, ":100");
    }

    @Test
    public void test13645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13645");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry4.name = asciiBytes11;
        java.io.File file13 = null;
        fileEntry4.file = file13;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
    }

    @Test
    public void test13646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13646");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = explodedArchive0.root;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.io.File file14 = null;
        explodedArchive0.root = file14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archive13);
    }

    @Test
    public void test13647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13647");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getFilteredArchive(entryRenameFilter44);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive0.new FileEntry();
        java.io.File file49 = fileEntry48.getFile();
        java.io.File file50 = fileEntry48.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
    }

    @Test
    public void test13648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13648");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive11.entries;
        java.util.jar.Manifest manifest16 = explodedArchive11.manifest;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive18.getNestedArchives(entryFilter25);
        java.io.File file27 = null;
        java.io.File file28 = null;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap38);
        explodedArchive18.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap38);
        java.util.jar.Manifest manifest43 = null;
        explodedArchive42.manifest = manifest43;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive42.getEntries();
        java.io.File file46 = null;
        explodedArchive42.root = file46;
        java.io.File file48 = null;
        explodedArchive42.root = file48;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive42.entries;
        explodedArchive11.entries = asciiBytesMap50;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter52 = null;
        org.springframework.boot.loader.archive.Archive archive53 = explodedArchive11.getFilteredArchive(entryRenameFilter52);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(archive53);
    }

    @Test
    public void test13649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13649");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getRef();
        int int28 = uRL9.getDefaultPort();
        int int29 = uRL9.getDefaultPort();
        java.lang.String str30 = uRL9.getFile();
        java.net.URL uRL32 = new java.net.URL(uRL9, "/archive:///archive:0/:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL(uRL54, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL42, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str63 = uRL42.getFile();
        int int64 = uRL42.getPort();
        java.lang.String str65 = uRL42.getFile();
        boolean boolean66 = uRL32.sameFile(uRL42);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/archive:///archive:0/:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test13650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13650");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.net.URL uRL44 = new java.net.URL(uRL41, "hi!");
        java.lang.String str45 = uRL41.getHost();
        java.lang.String str46 = uRL41.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test13651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13651");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        boolean boolean6 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        java.lang.String str12 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
    }

    @Test
    public void test13652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13652");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getPath();
        java.lang.String str39 = uRL9.getPath();
        java.lang.String str40 = uRL9.getHost();
        java.lang.String str41 = uRL9.getQuery();
        java.lang.String str42 = uRL9.getQuery();
        int int43 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = null;
        explodedArchive48.entries = asciiBytesMap50;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive48.manifest = manifest52;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getProtocol();
        java.lang.String str57 = uRL55.toExternalForm();
        boolean boolean58 = uRL9.sameFile(uRL55);
        java.lang.String str59 = uRL55.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100/hi!" + "'", str56, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str57, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!://:100/hi!" + "'", str59, "hi!://:100/hi!");
    }

    @Test
    public void test13653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13653");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive0.manifest = manifest23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        explodedArchive25.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive25.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive25.new FilteredURLStreamHandler();
        explodedArchive25.filtered = true;
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter48 = null;
        org.springframework.boot.loader.archive.Archive archive49 = explodedArchive46.getFilteredArchive(entryRenameFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.util.jar.Manifest manifest52 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive46.getNestedArchives(entryFilter53);
        java.io.File file55 = null;
        java.io.File file56 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = null;
        explodedArchive57.entries = asciiBytesMap61;
        java.io.File file63 = explodedArchive57.root;
        java.io.File file64 = explodedArchive57.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive65.getNestedArchives(entryFilter67);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive65.getNestedArchives(entryFilter69);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap71 = explodedArchive65.entries;
        explodedArchive57.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap71);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap71);
        explodedArchive46.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap71);
        explodedArchive25.entries = asciiBytesMap71;
        explodedArchive0.entries = asciiBytesMap71;
        java.io.File file79 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file79, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNotNull(archive49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(asciiBytesMap71);
    }

    @Test
    public void test13654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13654");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("[/hi!://:100/archive]:0", "/hi!://:100/hi!://:100", (-1), "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection18 = uRL17.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals(uRL17.toString(), "[/hi!://:100/archive]:0://[/hi!://:100/hi!://:100][://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test13655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13655");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(archiveList10);
    }

    @Test
    public void test13656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13656");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = fileEntry9.file;
        java.io.File file11 = fileEntry9.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13657");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive17.entries;
        java.util.jar.Manifest manifest22 = explodedArchive17.getManifest();
        explodedArchive17.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive17.manifest;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNull(manifest25);
    }

    @Test
    public void test13658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13658");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive4.filtered = true;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive4.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive4.getFilteredArchive(entryRenameFilter9);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive4.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest13 = explodedArchive4.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive4.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!://:100/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 10, "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:10hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test13659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13659");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive4.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("archive://:10archive", "archive://:10archive", (int) (byte) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getHost();
        int int26 = uRL23.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        java.util.jar.Manifest manifest34 = explodedArchive31.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getFile();
        int int38 = uRL36.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL49, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL(uRL36, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str65 = uRL36.toExternalForm();
        boolean boolean66 = uRL23.sameFile(uRL36);
        java.lang.String str67 = uRL36.getAuthority();
        boolean boolean68 = uRL13.sameFile(uRL36);
        java.lang.String str69 = uRL13.getHost();
        int int70 = uRL13.getPort();
        java.lang.String str71 = uRL13.getFile();
        java.lang.String str72 = uRL13.getAuthority();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals(uRL13.toString(), "archive://:10archive://[archive://:10archive]:1/archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!://:100" + "'", str65, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + ":100" + "'", str67, ":100");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[archive://:10archive]" + "'", str69, "[archive://:10archive]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/archive" + "'", str71, "/archive");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[archive://:10archive]:1" + "'", str72, "[archive://:10archive]:1");
    }

    @Test
    public void test13660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13660");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter45 = null;
        org.springframework.boot.loader.archive.Archive archive46 = explodedArchive42.getFilteredArchive(entryRenameFilter45);
        java.io.File file47 = explodedArchive42.root;
        java.util.jar.Manifest manifest48 = explodedArchive42.getManifest();
        java.util.jar.Manifest manifest49 = null;
        explodedArchive42.manifest = manifest49;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNotNull(archive46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
    }

    @Test
    public void test13661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13661");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getAuthority();
        java.lang.String str17 = uRL9.getUserInfo();
        int int18 = uRL9.getDefaultPort();
        java.lang.String str19 = uRL9.getHost();
        int int20 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL(uRL30, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str45 = uRL30.getFile();
        java.lang.String str46 = uRL30.getAuthority();
        java.net.URL uRL48 = new java.net.URL(uRL30, "");
        java.net.URL uRL50 = new java.net.URL(uRL30, "");
        boolean boolean51 = uRL9.equals((java.lang.Object) "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ":100" + "'", str46, ":100");
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test13662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13662");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "hi!://[:100]:52/hi!://:100/hi!://:100/hi!", 100, "hi!://:100/hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13663");
        java.net.URLConnection.setDefaultRequestProperty("/hi!://:100/:100", "archive://[/hi!://:100]:10hi!://:100/hi!:1");
    }

    @Test
    public void test13664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13664");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        java.io.File file15 = null;
        explodedArchive0.root = file15;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test13665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13665");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive1.filtered = true;
        java.io.File file4 = null;
        explodedArchive1.root = file4;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive1.getEntries();
        explodedArchive1.filtered = false;
        explodedArchive1.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest12 = explodedArchive1.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive1.getNestedArchives(entryFilter13);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive1.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
    }

    @Test
    public void test13666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13666");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.jar.Manifest manifest6 = null;
        explodedArchive4.manifest = manifest6;
        java.util.jar.Manifest manifest8 = explodedArchive4.getManifest();
        boolean boolean9 = explodedArchive4.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive4.entries;
        java.io.File file12 = null;
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        explodedArchive24.filtered = true;
        java.io.File file27 = null;
        explodedArchive24.root = file27;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive24.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap30);
        explodedArchive4.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("[hi!://:100/hi!://:100/archive]", "[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!", (int) (short) -1, "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals(uRL34.toString(), "[hi!://:100/hi!://:100/archive]://[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10" + "'", str35, "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
    }

    @Test
    public void test13667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13667");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        java.io.File file21 = null;
        fileEntry20.file = file21;
        java.io.File file23 = null;
        fileEntry20.file = file23;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
    }

    @Test
    public void test13668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13668");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL29.getUserInfo();
        java.lang.String str41 = uRL29.toExternalForm();
        java.lang.String str42 = uRL29.getRef();
        java.lang.String str43 = uRL29.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100/:100" + "'", str41, "hi!://:100/:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test13669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13669");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        int int10 = uRL9.getPort();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:1" + "'", str11, "hi!:1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:1" + "'", str12, "hi!:1");
    }

    @Test
    public void test13670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13670");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL(":10", "/hi!://:100/[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10", "[hi!://:100/hi!]:10://[hi!://:100/hi!]:97hi!://:100/:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: :10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13671");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
    }

    @Test
    public void test13672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13672");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        explodedArchive0.filtered = true;
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive18.new FileEntry();
        java.lang.String str23 = explodedArchive18.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        explodedArchive11.entries = asciiBytesMap24;
        java.io.File file26 = explodedArchive11.root;
        boolean boolean27 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive11.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = null;
        fileEntry30.name = asciiBytes31;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry30.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive34 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNull(asciiBytes33);
    }

    @Test
    public void test13673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13673");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        java.util.jar.Manifest manifest20 = explodedArchive17.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive17.new FileEntry();
        java.io.File file22 = fileEntry21.getFile();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test13674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13674");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = null;
        fileEntry12.name = asciiBytes16;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = fileEntry12.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test13675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13675");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive15.new FileEntry();
        explodedArchive15.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive15.getFilteredArchive(entryRenameFilter19);
        java.lang.String str21 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive15.getFilteredArchive(entryRenameFilter22);
        java.lang.String str24 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest26 = explodedArchive15.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "hi!://:100/:100", 35, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getFile();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(archive23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/:100]:35");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test13676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13676");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(entryCollection14);
    }

    @Test
    public void test13677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13677");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.lang.String str11 = explodedArchive0.toString();
        java.lang.String str12 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.io.File file14 = null;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        explodedArchive27.filtered = true;
        java.io.File file30 = null;
        explodedArchive27.root = file30;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive27.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap33);
        explodedArchive0.entries = asciiBytesMap33;
        java.util.jar.Manifest manifest37 = explodedArchive0.getManifest();
        java.io.File file38 = null;
        explodedArchive0.root = file38;
        java.io.File file40 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNull(file40);
    }

    @Test
    public void test13678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13678");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100", ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test13679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13679");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getPath();
        java.lang.String str39 = uRL9.getPath();
        java.lang.String str40 = uRL9.getHost();
        java.lang.String str41 = uRL9.getQuery();
        java.lang.String str42 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!://:100" + "'", str42, "hi!://:100");
    }

    @Test
    public void test13680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13680");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.lang.String str2 = explodedArchive0.toString();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str12 = explodedArchive11.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest14 = explodedArchive11.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getQuery();
        java.lang.String str18 = uRL16.getRef();
        int int19 = uRL16.getPort();
        java.net.URL uRL21 = new java.net.URL(uRL16, "hi!://:100/archive");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection22 = filteredURLStreamHandler6.openConnection(uRL21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100/hi!://:100/archive");
    }

    @Test
    public void test13681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13681");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytesMap9);
    }

    @Test
    public void test13682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13682");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive0.toString();
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13683");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        boolean boolean33 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive0.entries;
        boolean boolean35 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive0.entries;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
    }

    @Test
    public void test13684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13684");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getFile();
        int int34 = uRL32.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getQuery();
        java.lang.String str47 = uRL45.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive53.getEntries();
        java.util.jar.Manifest manifest56 = explodedArchive53.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL59 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL60 = new java.net.URL(uRL32, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL61 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str62 = uRL61.getFile();
        boolean boolean63 = uRL15.sameFile(uRL61);
        java.lang.String str64 = uRL61.getFile();
        java.lang.String str65 = uRL61.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL61.toString(), "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ":100" + "'", str64, ":100");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + ":100" + "'", str65, ":100");
    }

    @Test
    public void test13685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13685");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (int) 'a', "[hi!://:100/[hi!://:100/hi!]]:32");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13686");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getQuery();
        java.lang.String str43 = uRL41.getRef();
        java.lang.String str44 = uRL41.getRef();
        java.net.URL uRL46 = new java.net.URL(uRL41, "hi!");
        boolean boolean47 = uRL9.sameFile(uRL46);
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.lang.String str50 = uRL46.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
    }

    @Test
    public void test13687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13687");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test13688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13688");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getFile();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getQuery();
        java.lang.Class<?> wildcardClass15 = uRL9.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test13689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13689");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL(":100", "[hi!://:100/hi!]", (int) (short) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL35 = new java.net.URL(uRL33, "hi!:1");
        java.lang.String str36 = uRL35.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getFile();
        int int48 = uRL46.getDefaultPort();
        int int49 = uRL46.getDefaultPort();
        java.lang.String str50 = uRL46.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getHost();
        java.lang.String str62 = uRL60.toExternalForm();
        java.lang.String str63 = uRL60.toExternalForm();
        boolean boolean64 = uRL46.sameFile(uRL60);
        boolean boolean65 = uRL35.sameFile(uRL46);
        java.net.URL uRL67 = new java.net.URL(uRL46, "[hi!://:100/hi!]:10");
        java.lang.String str68 = uRL46.getUserInfo();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "/hi!://:100://archive:1/archive");
        org.junit.Assert.assertEquals(uRL33.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL35.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ":100" + "'", str36, ":100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!://:100" + "'", str62, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!://:100" + "'", str63, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test13690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13690");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        boolean boolean6 = explodedArchive0.filtered;
        java.io.File file7 = explodedArchive0.root;
        boolean boolean8 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13691");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.io.File file14 = fileEntry13.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry13.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test13692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13692");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest5 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
    }

    @Test
    public void test13693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13693");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getUserInfo();
        java.lang.String str26 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getAuthority();
        int int54 = uRL52.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL52, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL("hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) -1, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL67 = new java.net.URL(uRL9, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str68 = uRL67.getUserInfo();
        java.lang.String str69 = uRL67.getUserInfo();
        java.lang.String str70 = uRL67.getPath();
        java.lang.String str71 = uRL67.getUserInfo();
        java.lang.String str72 = uRL67.toExternalForm();
        java.lang.String str73 = uRL67.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!://:100/hi!" + "'", str72, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
    }

    @Test
    public void test13694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13694");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
        explodedArchive0.filtered = true;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.jar.Manifest manifest22 = null;
        explodedArchive20.manifest = manifest22;
        java.io.File file24 = null;
        explodedArchive20.root = file24;
        boolean boolean26 = explodedArchive20.filtered;
        java.io.File file27 = null;
        java.io.File file28 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        explodedArchive29.filtered = false;
        java.util.jar.Manifest manifest35 = explodedArchive29.manifest;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive44.entries;
        explodedArchive29.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive47.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap48);
        explodedArchive20.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap48);
        explodedArchive0.entries = asciiBytesMap48;
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
    }

    @Test
    public void test13695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13695");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = null;
        fileEntry10.file = file11;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(archiveList9);
    }

    @Test
    public void test13696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13696");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getAuthority();
        java.lang.String str41 = uRL9.getUserInfo();
        int int42 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test13697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13697");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.io.File file11 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive0.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry16.name = asciiBytes17;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archive13);
    }

    @Test
    public void test13698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13698");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.lang.String str14 = explodedArchive0.toString();
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest16 = explodedArchive0.manifest;
        boolean boolean17 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test13699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13699");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getFile();
        int int24 = uRL22.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL22, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str51 = uRL22.toExternalForm();
        boolean boolean52 = uRL9.sameFile(uRL22);
        java.lang.String str53 = uRL9.getHost();
        java.lang.String str54 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!://:100" + "'", str51, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ":100" + "'", str54, ":100");
    }

    @Test
    public void test13700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13700");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL49, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL65 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str66 = uRL33.getQuery();
        boolean boolean67 = uRL9.sameFile(uRL33);
        java.lang.String str68 = uRL33.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str74 = explodedArchive73.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = null;
        explodedArchive73.entries = asciiBytesMap75;
        java.util.jar.Manifest manifest77 = null;
        explodedArchive73.manifest = manifest77;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive73.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("hi!://:100/archive", "/archive", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str81 = uRL80.getPath();
        java.lang.String str82 = uRL80.getFile();
        java.lang.String str83 = uRL80.getRef();
        boolean boolean84 = uRL33.sameFile(uRL80);
        java.lang.String str85 = uRL80.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "archive" + "'", str74, "archive");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/archive:///archive:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!://:100/archive" + "'", str81, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!://:100/archive" + "'", str82, "hi!://:100/archive");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test13701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13701");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getDefaultPort();
        java.lang.String str45 = uRL41.getAuthority();
        int int46 = uRL41.getDefaultPort();
        int int47 = uRL41.getDefaultPort();
        int int48 = uRL41.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test13702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13702");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = null;
        explodedArchive8.entries = asciiBytesMap12;
        java.io.File file14 = explodedArchive8.root;
        java.io.File file15 = explodedArchive8.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        explodedArchive8.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!://[:100]:52hi!", "hi!:1", (int) (byte) -1, "/[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = null;
        explodedArchive31.entries = asciiBytesMap33;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive31.manifest = manifest35;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100", 100, "/hi!://://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream41 = uRL40.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://[:100]:52hi!://[hi!:1]/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://[:100]:52hi!://[hi!:1]/[/hi!://:100/hi!://:100/hi!:1");
        org.junit.Assert.assertEquals(uRL40.toString(), "[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100]:100/hi!://://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test13703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13703");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest26 = explodedArchive0.manifest;
        java.io.File file27 = null;
        explodedArchive0.root = file27;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest26);
    }

    @Test
    public void test13704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13704");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
    }

    @Test
    public void test13705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13705");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "hi!://:100/[:100]", (int) (short) 10, "/://[archive://:10archive]:100archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13706");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.lang.String str59 = uRL9.getQuery();
        java.net.URL uRL61 = new java.net.URL(uRL9, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.net.URL uRL63 = new java.net.URL(uRL61, "hi!://:100/hi!://:100/hi!://:100");
        java.net.URL uRL65 = new java.net.URL(uRL63, "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]");
        java.net.URL uRL67 = new java.net.URL(uRL63, "[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test13707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13707");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive13.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry14.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry14.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry14.name = asciiBytes17;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test13708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13708");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.net.URL uRL40 = new java.net.URL(uRL37, "hi!");
        java.lang.String str41 = uRL40.getHost();
        java.lang.String str42 = uRL40.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive44.filtered = true;
        explodedArchive44.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL(uRL40, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        int int52 = uRL40.getPort();
        java.lang.String str53 = uRL40.getRef();
        java.lang.Class<?> wildcardClass54 = uRL40.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":100" + "'", str42, ":100");
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test13709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13709");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        boolean boolean3 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        explodedArchive1.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive1.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive1.manifest = manifest10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive1.getNestedArchives(entryFilter12);
        explodedArchive1.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.lang.String str22 = explodedArchive16.toString();
        java.util.jar.Manifest manifest23 = explodedArchive16.manifest;
        java.io.File file24 = null;
        explodedArchive16.root = file24;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive26.new FileEntry();
        boolean boolean31 = explodedArchive26.filtered;
        boolean boolean32 = explodedArchive26.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive26.getNestedArchives(entryFilter33);
        java.io.File file35 = null;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive45.entries;
        explodedArchive26.entries = asciiBytesMap46;
        explodedArchive16.entries = asciiBytesMap46;
        explodedArchive1.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap46);
        java.io.File file51 = null;
        explodedArchive50.root = file51;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
    }

    @Test
    public void test13710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13710");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = explodedArchive0.root;
        boolean boolean12 = explodedArchive0.filtered;
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive0.new FileEntry();
        java.io.File file16 = fileEntry15.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test13711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13711");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.net.URL uRL33 = new java.net.URL(uRL13, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str34 = uRL13.getFile();
        java.lang.String str35 = uRL13.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getQuery();
        java.lang.String str47 = uRL45.getRef();
        java.lang.String str48 = uRL45.getRef();
        java.net.URL uRL50 = new java.net.URL(uRL45, "hi!");
        boolean boolean51 = uRL13.sameFile(uRL50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str66 = explodedArchive65.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive65.getEntries();
        java.util.jar.Manifest manifest68 = explodedArchive65.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str71 = uRL70.getQuery();
        java.lang.String str72 = uRL70.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str79 = explodedArchive78.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection80 = explodedArchive78.getEntries();
        java.util.jar.Manifest manifest81 = explodedArchive78.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL84 = new java.net.URL(uRL70, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL85 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL86 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL87 = new java.net.URL(uRL50, "hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL88 = new java.net.URL("hi!:1", "hi!://:100/hi!:1", 52, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str89 = uRL88.getRef();
        java.lang.String str90 = uRL88.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNull(manifest68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "archive" + "'", str79, "archive");
        org.junit.Assert.assertNotNull(entryCollection80);
        org.junit.Assert.assertNull(manifest81);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL86.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive" + "'", str90, "hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
    }

    @Test
    public void test13712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13712");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        boolean boolean13 = explodedArchive0.filtered;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive15.new FilteredURLStreamHandler();
        explodedArchive15.filtered = true;
        java.io.File file25 = explodedArchive15.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
    }

    @Test
    public void test13713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13713");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0", "archive://[/hi!://:100/archive]:32", (int) (short) -1, "/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13714");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive", "/://[archive://:10archive]:100archive://:10archive", 32, "hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13715");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getPath();
        java.lang.String str16 = uRL13.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL(uRL13, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/[hi!://:100/hi!]", (int) '#', "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        int int28 = uRL27.getDefaultPort();
        java.lang.String str29 = uRL27.getUserInfo();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test13716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13716");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.lang.String str14 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.net.URL uRL17 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive19.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL(uRL17, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = uRL17.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertEquals(uRL16.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "/archive:///archive:0hi!://:100://[hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/archive");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertEquals(uRL25.toString(), "/archive:///archive:0hi!://:100://[hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/[hi!://:100/hi!]:10");
    }

    @Test
    public void test13717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13717");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/hi!]:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "/hi!", (int) (short) 1, "hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!]:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13718");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        java.lang.String str26 = uRL24.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.net.URL uRL38 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getFile();
        boolean boolean50 = uRL38.sameFile(uRL48);
        int int51 = uRL48.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getQuery();
        java.lang.String str63 = uRL61.getRef();
        java.lang.String str64 = uRL61.getRef();
        java.net.URL uRL66 = new java.net.URL(uRL61, "hi!");
        boolean boolean67 = uRL48.sameFile(uRL66);
        int int68 = uRL48.getDefaultPort();
        boolean boolean69 = uRL9.sameFile(uRL48);
        java.lang.String str70 = uRL9.getUserInfo();
        java.lang.String str71 = uRL9.getRef();
        java.lang.String str72 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test13719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13719");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.lang.Class<?> wildcardClass10 = fileEntry9.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test13720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13720");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest45 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest46 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertNull(manifest46);
    }

    @Test
    public void test13721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13721");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str14 = explodedArchive13.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive13.getEntries();
        java.util.jar.Manifest manifest16 = explodedArchive13.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive13.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str19 = uRL18.getQuery();
        int int20 = uRL18.getPort();
        java.lang.String str21 = uRL18.getFile();
        java.lang.String str22 = uRL18.getAuthority();
        java.lang.String str23 = uRL18.getQuery();
        java.lang.String str24 = uRL18.toExternalForm();
        java.lang.String str25 = uRL18.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection26 = filteredURLStreamHandler8.openConnection(uRL18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertEquals(uRL18.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + ":100" + "'", str22, ":100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!://:100" + "'", str24, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
    }

    @Test
    public void test13722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13722");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL15 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
    }

    @Test
    public void test13723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13723");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13724");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!:1://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]", 100, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!:1://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13725");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getRef();
        java.lang.String str32 = uRL9.toExternalForm();
        java.lang.String str33 = uRL9.getFile();
        java.lang.String str34 = uRL9.getRef();
        java.lang.String str35 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive37.filtered = true;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive37.manifest = manifest40;
        java.io.File file42 = explodedArchive37.root;
        java.lang.String str43 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive37.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter45 = null;
        org.springframework.boot.loader.archive.Archive archive46 = explodedArchive37.getFilteredArchive(entryRenameFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive37.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL9, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        int int51 = uRL9.getPort();
        java.lang.String str52 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!://:100" + "'", str32, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNotNull(archive46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test13726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13726");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry8.getName();
        java.io.File file11 = fileEntry8.file;
        java.io.File file12 = fileEntry8.getFile();
        java.io.File file13 = fileEntry8.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry8.name = asciiBytes14;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13727");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive1.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive1.getFilteredArchive(entryRenameFilter5);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        boolean boolean9 = explodedArchive7.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive7.getFilteredArchive(entryRenameFilter10);
        explodedArchive7.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive7.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive7.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter18 = null;
        org.springframework.boot.loader.archive.Archive archive19 = explodedArchive17.getFilteredArchive(entryRenameFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive17.getNestedArchives(entryFilter20);
        java.io.File file22 = explodedArchive17.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL23 = explodedArchive17.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(archive19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test13728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13728");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        int int18 = uRL16.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL16, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.io.File file34 = null;
        java.io.File file35 = null;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap45);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!://:100/:100", "hi!://:100/hi!:1", (int) (short) 100, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.net.URL uRL50 = new java.net.URL(uRL16, "[archive://:10:100]:1", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getFile();
        int int62 = uRL60.getDefaultPort();
        int int63 = uRL60.getDefaultPort();
        java.lang.String str64 = uRL60.getHost();
        java.net.URL uRL66 = new java.net.URL(uRL60, "/hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive71.getEntries();
        java.util.jar.Manifest manifest74 = explodedArchive71.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.lang.String str77 = uRL76.getFile();
        int int78 = uRL76.getDefaultPort();
        java.lang.String str79 = uRL76.getHost();
        boolean boolean80 = uRL60.sameFile(uRL76);
        int int81 = uRL60.getPort();
        java.lang.String str82 = uRL60.getPath();
        int int83 = uRL60.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection84 = filteredURLStreamHandler48.openConnection(uRL60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/:100://[hi!://:100/hi!:1]:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/[archive://:10:100]:1");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertNull(manifest74);
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test13729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13729");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        java.lang.String str18 = uRL9.getFile();
        java.lang.String str19 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getRef();
        java.lang.String str32 = uRL29.getRef();
        java.lang.String str33 = uRL29.toExternalForm();
        int int34 = uRL29.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL29, "hi!://:100/hi!://:100", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str63 = uRL48.getAuthority();
        java.lang.String str64 = uRL48.getUserInfo();
        java.lang.String str65 = uRL48.getRef();
        boolean boolean66 = uRL37.sameFile(uRL48);
        java.net.URL uRL68 = new java.net.URL(uRL48, "hi!://:100/:100");
        boolean boolean69 = uRL9.sameFile(uRL48);
        java.lang.String str70 = uRL48.getPath();
        java.lang.String str71 = uRL48.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + ":100" + "'", str19, ":100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!://:100" + "'", str33, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ":100" + "'", str63, ":100");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test13730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13730");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        java.io.File file9 = null;
        fileEntry7.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry7.name;
        java.io.File file13 = null;
        fileEntry7.file = file13;
        java.io.File file15 = null;
        fileEntry7.file = file15;
        java.io.File file17 = fileEntry7.getFile();
        java.lang.Class<?> wildcardClass18 = fileEntry7.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test13731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13731");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = null;
        fileEntry4.file = file10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test13732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13732");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        java.lang.String str19 = uRL15.getUserInfo();
        java.net.URL uRL21 = new java.net.URL(uRL15, "[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
        java.lang.String str22 = uRL21.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100/[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100" + "'", str22, "/[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
    }

    @Test
    public void test13733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13733");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive15.getNestedArchives(entryFilter16);
        java.util.jar.Manifest manifest18 = explodedArchive15.getManifest();
        java.util.jar.Manifest manifest19 = explodedArchive15.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive15.getNestedArchives(entryFilter20);
        java.io.File file22 = explodedArchive15.root;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive15.manifest = manifest23;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test13734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13734");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file4 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        org.springframework.boot.loader.archive.Archive archive8 = explodedArchive0.getFilteredArchive(entryRenameFilter7);
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        java.util.jar.Manifest manifest17 = explodedArchive10.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap18);
        explodedArchive0.entries = asciiBytesMap18;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getQuery();
        java.lang.String str34 = uRL32.getHost();
        int int35 = uRL32.getPort();
        java.lang.String str36 = uRL32.getQuery();
        java.lang.String str37 = uRL32.getFile();
        java.lang.String str38 = uRL32.getRef();
        java.lang.String str39 = uRL32.getPath();
        java.lang.String str40 = uRL32.getHost();
        java.lang.String str41 = uRL32.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection42 = filteredURLStreamHandler22.openConnection(uRL32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archive8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test13735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13735");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = null;
        fileEntry4.file = file6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test13736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13736");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        int int16 = uRL13.getPort();
        java.lang.String str17 = uRL13.toExternalForm();
        java.lang.String str18 = uRL13.getRef();
        java.lang.String str19 = uRL13.getQuery();
        java.lang.String str20 = uRL13.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        explodedArchive22.filtered = false;
        java.util.jar.Manifest manifest28 = explodedArchive22.manifest;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive22.manifest = manifest40;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive22.manifest = manifest42;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL(uRL13, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.net.URL uRL46 = new java.net.URL("hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/archive:///archive:1hi!://:100/archive", 52, "/hi!://:100/[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!://:100" + "'", str17, "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/archive:///archive:1hi!://:100/archive]:52/hi!://:100/[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10");
    }

    @Test
    public void test13737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13737");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = null;
        fileEntry12.name = asciiBytes19;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
    }

    @Test
    public void test13738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13738");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL26, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL55 = new java.net.URL(uRL9, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive57.getNestedArchives(entryFilter61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive57.getNestedArchives(entryFilter64);
        java.io.File file66 = null;
        java.io.File file67 = null;
        java.io.File file68 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive69.getNestedArchives(entryFilter71);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive69.getNestedArchives(entryFilter73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file68, asciiBytesMap75);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive76.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap77);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap77);
        explodedArchive57.entries = asciiBytesMap77;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive57.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL(uRL55, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL55.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test13739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13739");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        explodedArchive0.filtered = true;
        java.lang.String str10 = explodedArchive0.toString();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
    }

    @Test
    public void test13740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13740");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.lang.String str44 = uRL9.getQuery();
        java.lang.String str45 = uRL9.getRef();
        java.lang.String str46 = uRL9.getPath();
        java.lang.String str47 = uRL9.getQuery();
        java.lang.String str48 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!://:100" + "'", str48, "hi!://:100");
    }

    @Test
    public void test13741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13741");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str14 = explodedArchive13.toString();
        java.util.jar.Manifest manifest15 = null;
        explodedArchive13.manifest = manifest15;
        java.util.jar.Manifest manifest17 = explodedArchive13.getManifest();
        boolean boolean18 = explodedArchive13.filtered;
        java.util.jar.Manifest manifest19 = explodedArchive13.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive13.entries;
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        explodedArchive33.filtered = true;
        java.io.File file36 = null;
        explodedArchive33.root = file36;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive33.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap39);
        explodedArchive13.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive13.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive13.getFilteredArchive(entryRenameFilter44);
        boolean boolean46 = explodedArchive13.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive13.entries;
        explodedArchive0.entries = asciiBytesMap47;
        java.io.File file49 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file49, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
    }

    @Test
    public void test13742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13742");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archive11);
    }

    @Test
    public void test13743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13743");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getUserInfo();
        java.lang.String str17 = uRL15.getPath();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        java.lang.String str20 = uRL15.getPath();
        java.lang.String str21 = uRL15.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test13744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13744");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getUserInfo();
        java.lang.String str17 = uRL9.getUserInfo();
        java.lang.String str18 = uRL9.getHost();
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.jar.Manifest manifest22 = null;
        explodedArchive20.manifest = manifest22;
        java.util.jar.Manifest manifest24 = explodedArchive20.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap25);
        boolean boolean27 = uRL9.equals((java.lang.Object) explodedArchive26);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test13745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13745");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive11.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
    }

    @Test
    public void test13746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13746");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        explodedArchive0.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNotNull(archive14);
    }

    @Test
    public void test13747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13747");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        java.io.File file6 = fileEntry4.getFile();
        java.io.File file7 = fileEntry4.getFile();
        java.io.File file8 = null;
        fileEntry4.file = file8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        java.io.File file12 = null;
        fileEntry4.file = file12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test13748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13748");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive8.entries = asciiBytesMap10;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.URL uRL16 = new java.net.URL("[:100]", "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (int) (byte) 10, "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL26, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str55 = uRL26.getPath();
        java.lang.String str56 = uRL26.getRef();
        java.lang.String str57 = uRL26.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection58 = filteredURLStreamHandler14.openConnection(uRL26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL16.toString(), "[:100]://[hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!]:10[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test13749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13749");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
    }

    @Test
    public void test13750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13750");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("archive://:10archive", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getQuery();
        java.lang.String str22 = uRL20.getRef();
        int int23 = uRL20.getPort();
        java.lang.String str24 = uRL20.getProtocol();
        java.lang.String str25 = uRL20.getPath();
        java.lang.String str26 = uRL20.getPath();
        java.lang.String str27 = uRL20.getUserInfo();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL10.sameFile(uRL20);
        java.net.URI uRI30 = uRL10.toURI();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive36.getNestedArchives(entryFilter43);
        java.io.File file45 = null;
        explodedArchive36.root = file45;
        java.io.File file47 = null;
        explodedArchive36.root = file47;
        java.util.jar.Manifest manifest49 = explodedArchive36.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter50 = null;
        org.springframework.boot.loader.archive.Archive archive51 = explodedArchive36.getFilteredArchive(entryRenameFilter50);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter52 = null;
        org.springframework.boot.loader.archive.Archive archive53 = explodedArchive36.getFilteredArchive(entryRenameFilter52);
        explodedArchive36.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("[archive://:10archive]", "[hi!://:100/hi!]", (int) (byte) 10, "[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.net.URL uRL58 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str59 = uRL10.getHost();
        java.lang.String str60 = uRL10.getProtocol();
        int int61 = uRL10.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream62 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL10.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(uRI30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertNotNull(archive51);
        org.junit.Assert.assertNotNull(archive53);
        org.junit.Assert.assertEquals(uRL57.toString(), "[archive://:10archive]://[hi!://:100/hi!]:10[/:100]:0");
        org.junit.Assert.assertEquals(uRL58.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive://:10archive" + "'", str60, "archive://:10archive");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
    }

    @Test
    public void test13751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13751");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.getName();
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.getFile();
        java.io.File file16 = null;
        fileEntry4.file = file16;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13752");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        java.io.File file29 = explodedArchive26.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap30);
        java.io.File file32 = null;
        explodedArchive31.root = file32;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive42.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive42.new FileEntry();
        java.io.File file47 = null;
        java.io.File file48 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive49.getNestedArchives(entryFilter53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive49.getNestedArchives(entryFilter56);
        java.io.File file58 = null;
        java.io.File file59 = null;
        java.io.File file60 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive61.getNestedArchives(entryFilter63);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive61.getNestedArchives(entryFilter65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive61.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap67);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap69);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, asciiBytesMap69);
        explodedArchive49.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, asciiBytesMap69);
        java.util.jar.Manifest manifest74 = null;
        explodedArchive73.manifest = manifest74;
        java.io.File file76 = explodedArchive73.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive73.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap77);
        explodedArchive42.entries = asciiBytesMap77;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive42.entries;
        explodedArchive31.entries = asciiBytesMap80;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
    }

    @Test
    public void test13753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13753");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(entryCollection11);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test13754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13754");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive4.manifest = manifest11;
        java.io.File file13 = null;
        explodedArchive4.root = file13;
        java.io.File file15 = null;
        explodedArchive4.root = file15;
        java.io.File file17 = explodedArchive4.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!://:100/:100", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (short) 0, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getFile();
        java.lang.String str21 = uRL19.getAuthority();
        java.lang.String str22 = uRL19.getUserInfo();
        java.net.Proxy proxy23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection24 = uRL19.openConnection(proxy23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100/:100://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0" + "'", str21, "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test13755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13755");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive8.new FileEntry();
        boolean boolean13 = explodedArchive8.filtered;
        boolean boolean14 = explodedArchive8.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive8.getNestedArchives(entryFilter15);
        java.util.jar.Manifest manifest17 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("archive://:0hi!://:100/hi!", "hi!://:100/hi!://:100/hi!://:100/hi!://:100", (int) (short) -1, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.net.URL uRL20 = new java.net.URL("/[hi!://:100/hi!://:100/hi!://:100/archive", "/hi!:1", (int) (byte) 1, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream21 = uRL20.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "archive://:0hi!://:100/hi!://[hi!://:100/hi!://:100/hi!://:100/hi!://:100]://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL20.toString(), "/[hi!://:100/hi!://:100/hi!://:100/archive://[/hi!:1]:1");
    }

    @Test
    public void test13756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13756");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive13);
    }

    @Test
    public void test13757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13757");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        java.io.File file14 = null;
        fileEntry4.file = file14;
        java.io.File file16 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry4.name = asciiBytes17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry4.name = asciiBytes20;
        java.io.File file22 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test13758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13758");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        explodedArchive21.filtered = true;
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        explodedArchive21.filtered = true;
        java.io.File file27 = null;
        explodedArchive21.root = file27;
        explodedArchive21.filtered = false;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(manifest24);
    }

    @Test
    public void test13759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13759");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.lang.String str44 = uRL9.getQuery();
        java.lang.String str45 = uRL9.getRef();
        java.lang.String str46 = uRL9.getRef();
        java.lang.String str47 = uRL9.getHost();
        java.lang.String str48 = uRL9.getQuery();
        java.net.URL uRL50 = new java.net.URL(uRL9, "[hi!://:100/hi!]");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI51 = uRL50.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/[hi!://:100/hi!]");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/[hi!://:100/hi!]");
    }

    @Test
    public void test13760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13760");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL9, "/hi!://:100/archive");
        int int16 = uRL9.getDefaultPort();
        int int17 = uRL9.getDefaultPort();
        java.lang.String str18 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL(uRL28, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getAuthority();
        java.lang.String str37 = uRL35.getProtocol();
        boolean boolean38 = uRL9.sameFile(uRL35);
        java.lang.String str39 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ":100" + "'", str36, ":100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + ":100" + "'", str39, ":100");
    }

    @Test
    public void test13761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13761");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        explodedArchive11.filtered = false;
        java.lang.String str16 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive11.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
    }

    @Test
    public void test13762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13762");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
    }

    @Test
    public void test13763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13763");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        boolean boolean6 = explodedArchive1.filtered;
        boolean boolean7 = explodedArchive1.filtered;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive1.new FileEntry();
        java.lang.String str11 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.lang.String str18 = explodedArchive12.toString();
        java.util.jar.Manifest manifest19 = explodedArchive12.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive12.entries;
        java.io.File file21 = null;
        explodedArchive12.root = file21;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        explodedArchive34.filtered = true;
        java.util.jar.Manifest manifest37 = explodedArchive34.getManifest();
        java.util.jar.Manifest manifest38 = explodedArchive34.manifest;
        java.io.File file39 = null;
        explodedArchive34.root = file39;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        explodedArchive34.entries = asciiBytesMap50;
        explodedArchive12.entries = asciiBytesMap50;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive12.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive12.entries;
        explodedArchive1.entries = asciiBytesMap54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap54);
        java.util.jar.Manifest manifest57 = null;
        explodedArchive56.manifest = manifest57;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
    }

    @Test
    public void test13764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13764");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        explodedArchive0.filtered = true;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
    }

    @Test
    public void test13765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13765");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = explodedArchive0.root;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test13766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13766");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive8.getEntries();
        explodedArchive8.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive8.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
    }

    @Test
    public void test13767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13767");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive8.entries = asciiBytesMap10;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.URL uRL16 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        int int17 = uRL16.getDefaultPort();
        int int18 = uRL16.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = uRL16.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test13768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13768");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive26.getFilteredArchive(entryRenameFilter29);
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive26.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive26.getFilteredArchive(entryRenameFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap37);
        java.io.File file39 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive38.buildEntries(file39, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archive36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
    }

    @Test
    public void test13769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13769");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry7.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry7.name = asciiBytes10;
        java.io.File file12 = fileEntry7.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13770");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "hi!:1");
        java.lang.String str16 = uRL15.toExternalForm();
        java.lang.String str17 = uRL15.getRef();
        java.lang.String str18 = uRL15.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getHost();
        int int36 = uRL33.getPort();
        java.lang.String str37 = uRL33.getQuery();
        java.net.URL uRL39 = new java.net.URL(uRL33, "");
        java.io.File file41 = null;
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL39, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter60 = null;
        org.springframework.boot.loader.archive.Archive archive61 = explodedArchive57.getFilteredArchive(entryRenameFilter60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL(uRL39, "hi!://:100/://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.io.File file65 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = null;
        explodedArchive66.entries = asciiBytesMap70;
        java.io.File file72 = explodedArchive66.root;
        java.io.File file73 = explodedArchive66.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive74.getNestedArchives(entryFilter76);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive74.getNestedArchives(entryFilter78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive74.entries;
        explodedArchive66.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap80);
        java.util.jar.Manifest manifest83 = null;
        explodedArchive82.manifest = manifest83;
        explodedArchive82.filtered = true;
        java.io.File file87 = null;
        explodedArchive82.root = file87;
        java.util.jar.Manifest manifest89 = null;
        explodedArchive82.manifest = manifest89;
        java.util.jar.Manifest manifest91 = explodedArchive82.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive82.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL63, "://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL("://[hi!://:100/:100]:100/hi!://:100", "", (int) (short) 1, "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL15, "://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream96 = uRL15.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100/hi!:1" + "'", str16, "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNotNull(archive61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest91);
        org.junit.Assert.assertEquals(uRL93.toString(), "hi!://:100/hi!://:100/://[hi!://:100/:100]:100/hi!://://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL94.toString(), "://[hi!://:100/:100]:100/hi!://:100://:1hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]");
    }

    @Test
    public void test13771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13771");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test13772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13772");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        java.lang.String str12 = explodedArchive11.toString();
        boolean boolean13 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive11.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive11.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
    }

    @Test
    public void test13773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13773");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
    }

    @Test
    public void test13774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13774");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        explodedArchive0.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        java.io.File file15 = null;
        explodedArchive0.root = file15;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest17);
    }

    @Test
    public void test13775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13775");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        explodedArchive3.filtered = false;
        java.util.jar.Manifest manifest9 = explodedArchive3.manifest;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        explodedArchive3.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap19);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive23.getFilteredArchive(entryRenameFilter24);
        java.io.File file26 = null;
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap36);
        java.io.File file38 = null;
        explodedArchive37.root = file38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive37.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes41 = null;
        fileEntry40.name = asciiBytes41;
        java.io.File file43 = fileEntry40.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive44 = explodedArchive23.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archive25);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNull(file43);
    }

    @Test
    public void test13776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13776");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getPath();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getQuery();
        java.lang.String str34 = uRL32.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.net.URL uRL46 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        int int47 = uRL46.getPort();
        java.lang.String str48 = uRL46.getPath();
        java.lang.String str49 = uRL46.getPath();
        java.lang.String str50 = uRL46.toExternalForm();
        java.lang.String str51 = uRL46.getRef();
        boolean boolean52 = uRL9.sameFile(uRL46);
        int int53 = uRL9.getPort();
        int int54 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100/hi!" + "'", str50, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 100 + "'", int53 == 100);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
    }

    @Test
    public void test13777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13777");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive17.new FilteredURLStreamHandler();
        java.lang.String str21 = explodedArchive17.toString();
        java.util.jar.Manifest manifest22 = null;
        explodedArchive17.manifest = manifest22;
        java.io.File file24 = explodedArchive17.root;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNull(file24);
    }

    @Test
    public void test13778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13778");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        java.io.File file3 = explodedArchive0.root;
        explodedArchive0.filtered = true;
        boolean boolean6 = explodedArchive0.filtered;
        boolean boolean7 = explodedArchive0.filtered;
        boolean boolean8 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test13779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13779");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getAuthority();
        java.lang.String str17 = uRL9.getUserInfo();
        int int18 = uRL9.getDefaultPort();
        java.lang.String str19 = uRL9.getHost();
        java.lang.String str20 = uRL9.getQuery();
        java.net.URL uRL22 = new java.net.URL(uRL9, "[/hi!://:100/archive]");
        int int23 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }

    @Test
    public void test13780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13780");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getRef();
        java.net.URL uRL40 = new java.net.URL(uRL9, "/[://[archive://:10archive]:100archive://:10archive]:0");
        java.lang.String str41 = uRL40.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/[://[archive://:10archive]:100archive://:10archive]:0" + "'", str41, "/[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test13781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13781");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive10.new FilteredURLStreamHandler();
        java.io.File file18 = null;
        java.io.File file19 = null;
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap30);
        explodedArchive10.entries = asciiBytesMap30;
        explodedArchive0.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean37 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test13782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13782");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getQuery();
        int int25 = uRL9.getPort();
        int int26 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL(uRL9, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.Proxy proxy67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection68 = uRL9.openConnection(proxy67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/archive");
    }

    @Test
    public void test13783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13783");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL29.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = null;
        explodedArchive45.entries = asciiBytesMap47;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive45.manifest = manifest49;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getPath();
        java.lang.String str54 = uRL52.getHost();
        boolean boolean55 = uRL29.sameFile(uRL52);
        java.lang.String str56 = uRL29.getRef();
        java.lang.String str57 = uRL29.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI58 = uRL29.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/:100" + "'", str40, "/:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/hi!" + "'", str53, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!://:100/hi!]" + "'", str54, "[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test13784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13784");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test13785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13785");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.getPath();
        java.net.URL uRL29 = new java.net.URL(uRL23, "://[archive://:10archive]:100archive://:10archive");
        java.lang.String str30 = uRL29.toExternalForm();
        java.lang.String str31 = uRL29.getHost();
        int int32 = uRL29.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!://:100/://[archive://:10archive]:100archive://:10archive" + "'", str30, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test13786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13786");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        explodedArchive15.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive15.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter25 = null;
        org.springframework.boot.loader.archive.Archive archive26 = explodedArchive15.getFilteredArchive(entryRenameFilter25);
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = null;
        explodedArchive28.entries = asciiBytesMap32;
        boolean boolean34 = explodedArchive28.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive28.new FileEntry();
        java.io.File file36 = null;
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap47);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap47);
        explodedArchive28.entries = asciiBytesMap47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap47);
        java.io.File file52 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive53.getNestedArchives(entryFilter55);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive53.getNestedArchives(entryFilter57);
        java.lang.String str59 = explodedArchive53.toString();
        java.util.jar.Manifest manifest60 = explodedArchive53.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive53.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, asciiBytesMap61);
        explodedArchive51.entries = asciiBytesMap61;
        explodedArchive15.entries = asciiBytesMap61;
        explodedArchive0.entries = asciiBytesMap61;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive0.entries;
        java.util.jar.Manifest manifest67 = explodedArchive0.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive0.getEntries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archive26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertNotNull(entryCollection69);
    }

    @Test
    public void test13787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13787");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getAuthority();
        java.lang.String str25 = uRL23.getRef();
        int int26 = uRL23.getDefaultPort();
        java.lang.String str27 = uRL23.getHost();
        java.lang.String str28 = uRL23.getUserInfo();
        java.lang.String str29 = uRL23.toExternalForm();
        java.lang.String str30 = uRL23.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100/hi!://:100" + "'", str29, "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + ":100" + "'", str30, ":100");
    }

    @Test
    public void test13788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13788");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean66 = uRL9.sameFile(uRL65);
        java.lang.String str67 = uRL65.getFile();
        java.lang.String str68 = uRL65.getRef();
        java.lang.String str69 = uRL65.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!://:100" + "'", str67, "/hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test13789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13789");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getPath();
        int int19 = uRL9.getPort();
        java.lang.String str20 = uRL9.getQuery();
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive24.entries = asciiBytesMap28;
        java.io.File file30 = explodedArchive24.root;
        java.io.File file31 = explodedArchive24.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        explodedArchive24.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap38);
        java.lang.Class<?> wildcardClass43 = explodedArchive42.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        explodedArchive44.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive44.getNestedArchives(entryFilter50);
        java.lang.String str52 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest54 = null;
        explodedArchive44.manifest = manifest54;
        java.lang.Class<?> wildcardClass56 = explodedArchive44.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive57.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter61 = null;
        org.springframework.boot.loader.archive.Archive archive62 = explodedArchive57.getFilteredArchive(entryRenameFilter61);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter63 = null;
        org.springframework.boot.loader.archive.Archive archive64 = explodedArchive57.getFilteredArchive(entryRenameFilter63);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive57.getNestedArchives(entryFilter65);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive57.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes68 = fileEntry67.name;
        java.io.File file69 = fileEntry67.getFile();
        java.lang.Class<?> wildcardClass70 = fileEntry67.getClass();
        java.lang.Class[] classArray71 = new java.lang.Class[] { wildcardClass43, wildcardClass56, wildcardClass70 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = uRL9.getContent(classArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNotNull(archive62);
        org.junit.Assert.assertNotNull(archive64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNull(asciiBytes68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(classArray71);
    }

    @Test
    public void test13790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13790");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getQuery();
        int int28 = uRL9.getPort();
        java.lang.String str29 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getFile();
        int int41 = uRL39.getDefaultPort();
        java.lang.String str42 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        boolean boolean57 = uRL39.sameFile(uRL52);
        int int58 = uRL39.getPort();
        boolean boolean59 = uRL9.sameFile(uRL39);
        java.lang.String str60 = uRL9.getUserInfo();
        java.lang.String str61 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!://:100" + "'", str61, "hi!://:100");
    }

    @Test
    public void test13791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13791");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL66.toExternalForm();
        java.lang.String str68 = uRL66.getQuery();
        java.lang.String str69 = uRL66.getUserInfo();
        java.lang.String str70 = uRL66.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100/:100" + "'", str67, "hi!://:100/:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test13792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13792");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        explodedArchive8.filtered = false;
        java.util.jar.Manifest manifest17 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive8.new FileEntry();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest17);
    }

    @Test
    public void test13793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13793");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        int int20 = uRL17.getPort();
        java.lang.String str21 = uRL17.getProtocol();
        java.lang.String str22 = uRL17.getPath();
        java.lang.String str23 = uRL17.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getFile();
        int int36 = uRL34.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getQuery();
        java.lang.String str49 = uRL47.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL(uRL34, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL63 = new java.net.URL(uRL17, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL64 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL65 = new java.net.URL("/hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 52, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str66 = uRL65.getUserInfo();
        java.lang.String str67 = uRL65.toString();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":100" + "'", str23, ":100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:52hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:52hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str67, "/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:52hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test13794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13794");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getUserInfo();
        java.lang.String str20 = uRL16.getPath();
        java.lang.String str21 = uRL16.getUserInfo();
        java.lang.String str22 = uRL16.getRef();
        java.lang.String str23 = uRL16.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":100" + "'", str23, ":100");
    }

    @Test
    public void test13795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13795");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        explodedArchive0.filtered = true;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL14 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(archive9);
        org.junit.Assert.assertNotNull(archiveList11);
    }

    @Test
    public void test13796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13796");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.io.File file8 = fileEntry7.file;
        java.io.File file9 = null;
        fileEntry7.file = file9;
        java.io.File file11 = null;
        fileEntry7.file = file11;
        java.io.File file13 = null;
        fileEntry7.file = file13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry7.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry7.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(asciiBytes17);
    }

    @Test
    public void test13797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13797");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getHost();
        java.lang.String str61 = uRL59.getUserInfo();
        java.lang.String str62 = uRL59.getRef();
        boolean boolean63 = uRL37.sameFile(uRL59);
        java.net.URL uRL65 = new java.net.URL(uRL37, "/hi!://:100");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream66 = uRL37.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
    }

    @Test
    public void test13798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13798");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getQuery();
        java.lang.String str13 = uRL11.getPath();
        java.lang.String str14 = uRL11.getUserInfo();
        java.lang.String str15 = uRL11.getProtocol();
        java.lang.String str16 = uRL11.getHost();
        int int17 = uRL11.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100/hi!" + "'", str15, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!://:100/hi!]" + "'", str16, "[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test13799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13799");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        explodedArchive8.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive8.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest14);
    }

    @Test
    public void test13800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13800");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.file;
        java.io.File file16 = null;
        fileEntry4.file = file16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = null;
        fileEntry4.name = asciiBytes18;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13801");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        explodedArchive11.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive11.getFilteredArchive(entryRenameFilter19);
        java.io.File file21 = explodedArchive11.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive11.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap23);
        explodedArchive0.entries = asciiBytesMap23;
        boolean boolean27 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.Entry entry28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive29 = explodedArchive0.getNestedArchive(entry28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test13802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13802");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive0.manifest = manifest23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        explodedArchive25.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive25.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive25.new FilteredURLStreamHandler();
        explodedArchive25.filtered = true;
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter48 = null;
        org.springframework.boot.loader.archive.Archive archive49 = explodedArchive46.getFilteredArchive(entryRenameFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.util.jar.Manifest manifest52 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive46.getNestedArchives(entryFilter53);
        java.io.File file55 = null;
        java.io.File file56 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = null;
        explodedArchive57.entries = asciiBytesMap61;
        java.io.File file63 = explodedArchive57.root;
        java.io.File file64 = explodedArchive57.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive65.getNestedArchives(entryFilter67);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive65.getNestedArchives(entryFilter69);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap71 = explodedArchive65.entries;
        explodedArchive57.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap71);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap71);
        explodedArchive46.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap71);
        explodedArchive25.entries = asciiBytesMap71;
        explodedArchive0.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter79 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList80 = explodedArchive0.getNestedArchives(entryFilter79);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNotNull(archive49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(asciiBytesMap71);
        org.junit.Assert.assertNotNull(archiveList80);
    }

    @Test
    public void test13803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13803");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getHost();
        java.lang.String str25 = uRL9.getProtocol();
        java.lang.String str26 = uRL9.getHost();
        java.lang.String str27 = uRL9.getAuthority();
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap39);
        explodedArchive40.filtered = true;
        java.io.File file43 = null;
        explodedArchive40.root = file43;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive40.new FileEntry();
        java.util.jar.Manifest manifest46 = null;
        explodedArchive40.manifest = manifest46;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL9, "hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive55.getNestedArchives(entryFilter57);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive55.getNestedArchives(entryFilter59);
        java.util.jar.Manifest manifest61 = explodedArchive55.getManifest();
        java.util.jar.Manifest manifest62 = explodedArchive55.manifest;
        java.util.jar.Manifest manifest63 = null;
        explodedArchive55.manifest = manifest63;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/hi!", 97, "hi!://:100/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL49, "[archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL69 = new java.net.URL(uRL67, "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
        java.lang.String str70 = uRL69.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100/hi!://:100/archive:///archive:0hi!://[archive://hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!://:100/hi!://:100/archive:///archive:0hi!://[archive://hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive" + "'", str70, "hi!://:100/hi!://:100/archive:///archive:0hi!://[archive://hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
    }

    @Test
    public void test13804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13804");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getPath();
        java.lang.String str14 = uRL9.getHost();
        int int15 = uRL9.getDefaultPort();
        int int16 = uRL9.getPort();
        java.lang.String str17 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test13805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13805");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!:1://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "/[://[archive://:10archive]:100archive://:10archive]:0", (int) '#', "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!:1://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13806");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.getFile();
        java.io.File file12 = fileEntry10.file;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(archive9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13807");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str52 = uRL37.getQuery();
        boolean boolean53 = uRL27.sameFile(uRL37);
        int int54 = uRL27.getDefaultPort();
        java.net.URL uRL56 = new java.net.URL(uRL27, "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        java.lang.String str57 = uRL27.getQuery();
        int int58 = uRL27.getPort();
        java.lang.String str59 = uRL27.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test13808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13808");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.jar.Manifest manifest3 = null;
        explodedArchive1.manifest = manifest3;
        java.io.File file5 = null;
        explodedArchive1.root = file5;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive1.manifest = manifest7;
        boolean boolean9 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str11 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        java.util.jar.Manifest manifest13 = explodedArchive10.getManifest();
        java.util.jar.Manifest manifest14 = explodedArchive10.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive15.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive15.getNestedArchives(entryFilter20);
        java.util.jar.Manifest manifest22 = null;
        explodedArchive15.manifest = manifest22;
        explodedArchive15.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive15.entries;
        explodedArchive10.entries = asciiBytesMap26;
        explodedArchive1.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap26);
        java.util.jar.Manifest manifest30 = null;
        explodedArchive29.manifest = manifest30;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
    }

    @Test
    public void test13809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13809");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive22.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = fileEntry23.getName();
        java.io.File file25 = fileEntry23.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(asciiBytes24);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test13810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13810");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive15.new FileEntry();
        explodedArchive15.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "/archive:///archive:0hi!://:100", (int) (byte) 10, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL22 = new java.net.URL(uRL20, "[hi!://:100/hi!]:100");
        java.lang.String str23 = uRL20.getAuthority();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://[hi!://:100/hi!]:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[/archive:///archive:0hi!://:100]:10" + "'", str23, "[/archive:///archive:0hi!://:100]:10");
    }

    @Test
    public void test13811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13811");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.lang.String str10 = explodedArchive1.toString();
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive13.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive13.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap38);
        explodedArchive1.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive41.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive41.getNestedArchives(entryFilter43);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter45 = null;
        org.springframework.boot.loader.archive.Archive archive46 = explodedArchive41.getFilteredArchive(entryRenameFilter45);
        java.util.jar.Manifest manifest47 = explodedArchive41.getManifest();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(archive46);
        org.junit.Assert.assertNull(manifest47);
    }

    @Test
    public void test13812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13812");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
    }

    @Test
    public void test13813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13813");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getDefaultPort();
        java.lang.String str25 = uRL23.getQuery();
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap40);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str44 = uRL43.toExternalForm();
        boolean boolean45 = uRL23.sameFile(uRL43);
        java.net.URL uRL47 = new java.net.URL(uRL43, "[hi!://:100/hi!://:100/:100]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertEquals(uRL43.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str44, "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals(uRL47.toString(), "://[archive://:10archive]:100archive://[hi!://:100/hi!://:100/:100]");
    }

    @Test
    public void test13814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13814");
        java.net.URLConnection.setDefaultRequestProperty("[hi!://:100/archive]:100", "/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100");
    }

    @Test
    public void test13815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13815");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(manifest10);
    }

    @Test
    public void test13816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13816");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive22.new FileEntry();
        java.io.File file24 = fileEntry23.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = fileEntry23.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = fileEntry23.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = fileEntry23.getName();
        java.io.File file28 = fileEntry23.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes29 = fileEntry23.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(asciiBytes25);
        org.junit.Assert.assertNull(asciiBytes26);
        org.junit.Assert.assertNull(asciiBytes27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(asciiBytes29);
    }

    @Test
    public void test13817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13817");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive12.new FileEntry();
        explodedArchive12.filtered = false;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive18.new FileEntry();
        java.lang.String str23 = explodedArchive18.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive18.new FileEntry();
        java.util.jar.Manifest manifest25 = null;
        explodedArchive18.manifest = manifest25;
        java.lang.String str27 = explodedArchive18.toString();
        java.io.File file28 = null;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive30.getNestedArchives(entryFilter37);
        java.io.File file39 = null;
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap50);
        explodedArchive30.entries = asciiBytesMap50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap55);
        explodedArchive18.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap55);
        explodedArchive12.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap55);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive61.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive61.entries;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
    }

    @Test
    public void test13818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13818");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        boolean boolean30 = uRL9.sameFile(uRL26);
        java.lang.String str31 = uRL9.getHost();
        java.lang.String str32 = uRL9.getQuery();
        java.lang.String str33 = uRL9.getPath();
        java.net.Proxy proxy34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection35 = uRL9.openConnection(proxy34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test13819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13819");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:100");
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/hi!://:100");
        java.lang.String str17 = uRL9.getFile();
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        explodedArchive20.filtered = false;
        java.util.jar.Manifest manifest26 = explodedArchive20.manifest;
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive35.entries;
        explodedArchive20.entries = asciiBytesMap36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap36);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap36);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive39.new FilteredURLStreamHandler();
        boolean boolean41 = explodedArchive39.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive39.getNestedArchives(entryFilter42);
        java.util.jar.Manifest manifest44 = explodedArchive39.getManifest();
        boolean boolean45 = uRL9.equals((java.lang.Object) explodedArchive39);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test13820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13820");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap13);
        explodedArchive0.entries = asciiBytesMap13;
        java.util.jar.Manifest manifest16 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive0.getNestedArchives(entryFilter17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNotNull(archiveList18);
    }

    @Test
    public void test13821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13821");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive10.new FilteredURLStreamHandler();
        java.io.File file18 = null;
        java.io.File file19 = null;
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap30);
        explodedArchive10.entries = asciiBytesMap30;
        explodedArchive0.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive0.entries;
        java.io.File file38 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file38, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
    }

    @Test
    public void test13822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13822");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("/hi!", "[hi!://:100/hi!]", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL11, "hi!://:100/hi!:1");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI14 = uRL11.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in path at index 7: /hi!://[hi!://:100/hi!]:1/archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL11.toString(), "/hi!://[hi!://:100/hi!]:1/archive");
        org.junit.Assert.assertEquals(uRL13.toString(), "/hi!://[hi!://:100/hi!]:1/hi!://:100/hi!:1");
    }

    @Test
    public void test13823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13823");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getHost();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        java.lang.String str15 = uRL14.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.jar.Manifest manifest18 = null;
        explodedArchive16.manifest = manifest18;
        java.io.File file20 = null;
        explodedArchive16.root = file20;
        java.util.jar.Manifest manifest22 = null;
        explodedArchive16.manifest = manifest22;
        boolean boolean24 = explodedArchive16.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive25.new FileEntry();
        java.util.jar.Manifest manifest28 = explodedArchive25.getManifest();
        java.util.jar.Manifest manifest29 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive30.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive30.getNestedArchives(entryFilter35);
        java.util.jar.Manifest manifest37 = null;
        explodedArchive30.manifest = manifest37;
        explodedArchive30.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive30.entries;
        explodedArchive25.entries = asciiBytesMap41;
        explodedArchive16.entries = asciiBytesMap41;
        boolean boolean44 = uRL14.equals((java.lang.Object) explodedArchive16);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test13824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13824");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        boolean boolean26 = uRL9.sameFile(uRL21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        java.util.jar.Manifest manifest34 = explodedArchive31.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getQuery();
        java.lang.String str38 = uRL36.getRef();
        int int39 = uRL36.getPort();
        java.lang.String str40 = uRL36.getQuery();
        boolean boolean41 = uRL9.sameFile(uRL36);
        java.lang.String str42 = uRL36.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test13825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13825");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        int int12 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.net.URL uRL33 = new java.net.URL(uRL27, "");
        java.io.File file35 = null;
        java.io.File file36 = null;
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(":100", "archive://:10archive", (int) (short) -1, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL52 = new java.net.URL(uRL9, "hi!://:100/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str53 = uRL9.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection54 = uRL9.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test13826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13826");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        explodedArchive25.filtered = true;
        explodedArchive25.filtered = true;
        java.util.jar.Manifest manifest31 = explodedArchive25.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive25.getNestedArchives(entryFilter33);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNotNull(archiveList34);
    }

    @Test
    public void test13827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13827");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        explodedArchive0.entries = asciiBytesMap2;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = explodedArchive0.entries;
        java.util.jar.Manifest manifest5 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytesMap4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNull(asciiBytesMap7);
    }

    @Test
    public void test13828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13828");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!", "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!", "[hi!://:100]:97");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13829");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive33.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive33.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL17, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL41 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL42 = new java.net.URL("[hi!://:100/archive]:100", "[/hi!://:100/archive]:0", 1, "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str43 = uRL42.getProtocol();
        java.lang.String str44 = uRL42.toExternalForm();
        java.lang.String str45 = uRL42.getPath();
        java.lang.String str46 = uRL42.getFile();
        java.lang.String str47 = uRL42.getPath();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL42.toString(), "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!://:100/archive]:100" + "'", str43, "[hi!://:100/archive]:100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!" + "'", str44, "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!://:100/hi!://:100/hi!" + "'", str45, "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!://:100/hi!://:100/hi!" + "'", str46, "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!://:100/hi!://:100/hi!" + "'", str47, "hi!://:100/hi!://:100/hi!");
    }

    @Test
    public void test13830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13830");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.lang.String str8 = explodedArchive2.toString();
        java.util.jar.Manifest manifest9 = explodedArchive2.manifest;
        java.io.File file10 = null;
        explodedArchive2.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive12.new FileEntry();
        boolean boolean17 = explodedArchive12.filtered;
        boolean boolean18 = explodedArchive12.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive12.getNestedArchives(entryFilter19);
        java.io.File file21 = null;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        explodedArchive12.entries = asciiBytesMap32;
        explodedArchive2.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive2.getNestedArchives(entryFilter35);
        java.io.File file37 = explodedArchive2.root;
        explodedArchive2.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = explodedArchive40.new FileEntry();
        java.lang.String str45 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive40.new FileEntry();
        java.util.jar.Manifest manifest47 = null;
        explodedArchive40.manifest = manifest47;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive50.getNestedArchives(entryFilter57);
        java.io.File file59 = null;
        java.io.File file60 = null;
        java.io.File file61 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, asciiBytesMap68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap70);
        explodedArchive50.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive50.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest75 = explodedArchive50.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.jar.Manifest manifest78 = null;
        explodedArchive76.manifest = manifest78;
        java.util.jar.Manifest manifest80 = explodedArchive76.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive76.entries;
        explodedArchive50.entries = asciiBytesMap81;
        explodedArchive40.entries = asciiBytesMap81;
        explodedArchive2.entries = asciiBytesMap81;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap81);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap81);
        boolean boolean87 = explodedArchive86.filtered;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test13831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13831");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = null;
        explodedArchive8.entries = asciiBytesMap15;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive8.getNestedArchives(entryFilter18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(asciiBytesMap17);
    }

    @Test
    public void test13832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13832");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.toExternalForm();
        java.lang.String str26 = uRL23.getRef();
        java.lang.String str27 = uRL23.getRef();
        java.lang.String str28 = uRL23.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!://:100/hi!://:100" + "'", str25, "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test13833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13833");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getUserInfo();
        java.lang.String str19 = uRL16.getProtocol();
        java.net.URL uRL21 = new java.net.URL(uRL16, "archive");
        java.lang.String str22 = uRL21.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test13834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13834");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        java.io.File file16 = null;
        fileEntry12.file = file16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = null;
        fileEntry12.name = asciiBytes18;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry12.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes20);
        org.junit.Assert.assertNull(asciiBytes21);
    }

    @Test
    public void test13835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13835");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getProtocol();
        int int31 = uRL9.getPort();
        java.lang.String str32 = uRL9.getUserInfo();
        java.lang.String str33 = uRL9.getHost();
        java.net.URL uRL35 = new java.net.URL(uRL9, "[:100]");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getFile();
        int int47 = uRL45.getDefaultPort();
        java.lang.String str48 = uRL45.getRef();
        java.lang.String str49 = uRL45.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL45, "hi!:1");
        java.lang.String str52 = uRL45.getAuthority();
        boolean boolean53 = uRL9.sameFile(uRL45);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI54 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/[:100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test13836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13836");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.net.URL uRL44 = new java.net.URL(uRL41, "hi!");
        java.lang.String str45 = uRL41.getHost();
        java.lang.String str46 = uRL41.getAuthority();
        java.net.URL uRL48 = new java.net.URL(uRL41, "/[hi!://:100/hi!]:10");
        int int49 = uRL48.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ":100" + "'", str46, ":100");
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test13837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13837");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str11 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        boolean boolean14 = explodedArchive0.filtered;
        boolean boolean15 = explodedArchive0.filtered;
        java.io.File file16 = null;
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive33.getNestedArchives(entryFilter34);
        boolean boolean36 = explodedArchive33.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive33.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive38 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test13838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13838");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.lang.String str18 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest21 = explodedArchive11.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = explodedArchive11.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNull(manifest21);
    }

    @Test
    public void test13839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13839");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.toExternalForm();
        java.net.URL uRL42 = new java.net.URL(uRL39, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = null;
        explodedArchive45.entries = asciiBytesMap49;
        java.io.File file51 = explodedArchive45.root;
        java.io.File file52 = explodedArchive45.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive53.getNestedArchives(entryFilter55);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive53.getNestedArchives(entryFilter57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive53.entries;
        explodedArchive45.entries = asciiBytesMap59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap59);
        java.io.File file62 = null;
        explodedArchive61.root = file62;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive61.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest65 = null;
        explodedArchive61.manifest = manifest65;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest68 = null;
        explodedArchive61.manifest = manifest68;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL(uRL39, "[hi!://:100]", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!://:100/hi!://:100" + "'", str40, "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!://hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!://[hi!://:100]");
    }

    @Test
    public void test13840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13840");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getHost();
        java.lang.String str25 = uRL9.getProtocol();
        java.lang.String str26 = uRL9.getHost();
        java.lang.String str27 = uRL9.getAuthority();
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap39);
        explodedArchive40.filtered = true;
        java.io.File file43 = null;
        explodedArchive40.root = file43;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive40.new FileEntry();
        java.util.jar.Manifest manifest46 = null;
        explodedArchive40.manifest = manifest46;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL9, "hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.io.File file50 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive51.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive51.getNestedArchives(entryFilter55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap57);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive58.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = explodedArchive58.new FileEntry();
        java.io.File file63 = fileEntry62.file;
        boolean boolean64 = uRL49.equals((java.lang.Object) fileEntry62);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test13841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13841");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.io.File file11 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13842");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest13 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        boolean boolean20 = explodedArchive15.filtered;
        java.util.jar.Manifest manifest21 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive22.getNestedArchives(entryFilter29);
        java.io.File file31 = null;
        java.io.File file32 = null;
        java.io.File file33 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive34.getNestedArchives(entryFilter38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive41.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap42);
        explodedArchive22.entries = asciiBytesMap42;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive22.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest47 = explodedArchive22.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.jar.Manifest manifest50 = null;
        explodedArchive48.manifest = manifest50;
        java.util.jar.Manifest manifest52 = explodedArchive48.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive48.entries;
        explodedArchive22.entries = asciiBytesMap53;
        explodedArchive15.entries = asciiBytesMap53;
        explodedArchive0.entries = asciiBytesMap53;
        boolean boolean57 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test13843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13843");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive7.new FileEntry();
        java.lang.String str12 = explodedArchive7.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        explodedArchive0.entries = asciiBytesMap13;
        java.io.File file15 = explodedArchive0.root;
        boolean boolean16 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test13844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13844");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        explodedArchive4.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap23);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
    }

    @Test
    public void test13845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13845");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        explodedArchive8.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive8.getNestedArchives(entryFilter16);
        java.lang.String str18 = explodedArchive8.toString();
        java.lang.String str19 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("/hi!://:100/hi!://:100/hi!://:100", "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (short) -1, "[archive://:10archive]", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL("[/hi!://:100/archive]:32", "[/:100]:0", (int) (short) 10, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getQuery();
        int int25 = uRL23.getDefaultPort();
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertEquals(uRL22.toString(), "/hi!://:100/hi!://:100/hi!://:100://[/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!][archive://:10archive]");
        org.junit.Assert.assertEquals(uRL23.toString(), "[/hi!://:100/archive]:32://[/:100]:0:10hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test13846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13846");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = explodedArchive0.root;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archive12);
    }

    @Test
    public void test13847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13847");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive19.manifest = manifest20;
        java.io.File file22 = explodedArchive19.root;
        explodedArchive19.filtered = false;
        java.lang.String str25 = explodedArchive19.toString();
        java.io.File file26 = explodedArchive19.root;
        java.io.File file27 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive19.buildEntries(file27, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNull(file26);
    }

    @Test
    public void test13848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13848");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
    }

    @Test
    public void test13849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13849");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        explodedArchive0.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive0.getNestedArchives(entryFilter13);
        java.util.jar.Manifest manifest15 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test13850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13850");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://hi!:1hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13851");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        java.io.File file8 = fileEntry4.file;
        java.io.File file9 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.name;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13852");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.toExternalForm();
        java.lang.String str26 = uRL23.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!://:100/hi!://:100" + "'", str25, "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + ":100" + "'", str26, ":100");
    }

    @Test
    public void test13853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13853");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        boolean boolean8 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13854");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive0.getFilteredArchive(entryRenameFilter24);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter27 = null;
        org.springframework.boot.loader.archive.Archive archive28 = explodedArchive0.getFilteredArchive(entryRenameFilter27);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archive25);
        org.junit.Assert.assertNotNull(archive28);
    }

    @Test
    public void test13855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13855");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        explodedArchive0.filtered = true;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        explodedArchive10.filtered = false;
        java.util.jar.Manifest manifest16 = explodedArchive10.manifest;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        explodedArchive10.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap26);
        java.util.jar.Manifest manifest29 = null;
        explodedArchive28.manifest = manifest29;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive28.entries;
        explodedArchive0.entries = asciiBytesMap31;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive0.getEntries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(entryCollection34);
    }

    @Test
    public void test13856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13856");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archiveList8);
    }

    @Test
    public void test13857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13857");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive11.new FilteredURLStreamHandler();
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive20.entries = asciiBytesMap24;
        java.io.File file26 = explodedArchive20.root;
        java.io.File file27 = explodedArchive20.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive28.entries;
        explodedArchive20.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap34);
        java.util.jar.Manifest manifest37 = null;
        explodedArchive36.manifest = manifest37;
        explodedArchive36.filtered = true;
        java.io.File file41 = null;
        explodedArchive36.root = file41;
        java.lang.String str43 = explodedArchive36.toString();
        boolean boolean44 = explodedArchive36.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive36.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive46 = explodedArchive11.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test13858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13858");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test13859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13859");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        int int42 = uRL9.getDefaultPort();
        java.lang.String str43 = uRL9.getAuthority();
        java.lang.String str44 = uRL9.getProtocol();
        java.lang.String str45 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test13860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13860");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getHost();
        java.lang.String str36 = uRL34.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getHost();
        int int49 = uRL46.getPort();
        boolean boolean50 = uRL34.sameFile(uRL46);
        int int51 = uRL34.getPort();
        java.lang.String str52 = uRL34.getAuthority();
        boolean boolean53 = uRL23.sameFile(uRL34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str68 = explodedArchive67.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive67.getEntries();
        java.util.jar.Manifest manifest70 = explodedArchive67.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str73 = uRL72.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL72, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.lang.String str80 = uRL79.getAuthority();
        int int81 = uRL79.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter85 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList86 = explodedArchive83.getNestedArchives(entryFilter85);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter87 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList88 = explodedArchive83.getNestedArchives(entryFilter87);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap89 = explodedArchive83.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler90 = explodedArchive83.new FilteredURLStreamHandler();
        java.net.URL uRL91 = new java.net.URL(uRL79, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL92 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL93 = new java.net.URL("", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (int) (byte) 1, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL94 = new java.net.URL(uRL34, "[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.lang.String str95 = uRL94.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNull(manifest70);
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ":100" + "'", str80, ":100");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(archiveList86);
        org.junit.Assert.assertNotNull(archiveList88);
        org.junit.Assert.assertNotNull(asciiBytesMap89);
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL92.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL93.toString(), "://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:1/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL94.toString(), "hi!://:100/[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/[hi!://:100/hi!]:0" + "'", str95, "/[hi!://:100/hi!]:0");
    }

    @Test
    public void test13861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13861");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.net.URL uRL40 = new java.net.URL(uRL37, "hi!");
        java.lang.String str41 = uRL40.getHost();
        int int42 = uRL40.getPort();
        java.lang.String str43 = uRL40.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
    }

    @Test
    public void test13862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13862");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        java.io.File file15 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = fileEntry12.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test13863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13863");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = null;
        fileEntry8.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry8.name = asciiBytes11;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
    }

    @Test
    public void test13864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13864");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getHost();
        java.lang.String str14 = uRL11.toExternalForm();
        java.lang.String str15 = uRL11.getPath();
        java.lang.String str16 = uRL11.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!://:100/hi!]" + "'", str13, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str14, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100/hi!" + "'", str15, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test13865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13865");
        java.net.URLConnection.setDefaultRequestProperty(":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
    }

    @Test
    public void test13866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13866");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        explodedArchive11.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive17.new FileEntry();
        boolean boolean22 = explodedArchive17.filtered;
        boolean boolean23 = explodedArchive17.filtered;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive17.manifest = manifest24;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive17.getEntries();
        java.io.File file27 = explodedArchive17.root;
        boolean boolean28 = explodedArchive17.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive17.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive17.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive17.getNestedArchives(entryFilter31);
        boolean boolean33 = explodedArchive17.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive17.entries;
        explodedArchive11.entries = asciiBytesMap34;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive11.getEntries();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(entryCollection36);
    }

    @Test
    public void test13867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13867");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "hi!:1");
        java.lang.String str16 = uRL15.toExternalForm();
        java.lang.String str17 = uRL15.getRef();
        java.lang.String str18 = uRL15.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getHost();
        int int36 = uRL33.getPort();
        java.lang.String str37 = uRL33.getQuery();
        java.net.URL uRL39 = new java.net.URL(uRL33, "");
        java.io.File file41 = null;
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL39, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter60 = null;
        org.springframework.boot.loader.archive.Archive archive61 = explodedArchive57.getFilteredArchive(entryRenameFilter60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL(uRL39, "hi!://:100/://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.io.File file65 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = null;
        explodedArchive66.entries = asciiBytesMap70;
        java.io.File file72 = explodedArchive66.root;
        java.io.File file73 = explodedArchive66.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive74.getNestedArchives(entryFilter76);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive74.getNestedArchives(entryFilter78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive74.entries;
        explodedArchive66.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap80);
        java.util.jar.Manifest manifest83 = null;
        explodedArchive82.manifest = manifest83;
        explodedArchive82.filtered = true;
        java.io.File file87 = null;
        explodedArchive82.root = file87;
        java.util.jar.Manifest manifest89 = null;
        explodedArchive82.manifest = manifest89;
        java.util.jar.Manifest manifest91 = explodedArchive82.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive82.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL63, "://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL("://[hi!://:100/:100]:100/hi!://:100", "", (int) (short) 1, "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL15, "://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.lang.String str96 = uRL15.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100/hi!:1" + "'", str16, "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNotNull(archive61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest91);
        org.junit.Assert.assertEquals(uRL93.toString(), "hi!://:100/hi!://:100/://[hi!://:100/:100]:100/hi!://://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL94.toString(), "://[hi!://:100/:100]:100/hi!://:100://:1hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!://:100/hi!:1" + "'", str96, "hi!://:100/hi!:1");
    }

    @Test
    public void test13868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13868");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://[:100]:52/hi!://:100/hi!://:100/hi!", "hi!://:100/hi!://hi!:1hi!", (int) (short) -1, "/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100]:97/hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://[:100]:52/hi!://:100/hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13869");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.lang.String str14 = explodedArchive8.toString();
        java.lang.String str15 = explodedArchive8.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = null;
        explodedArchive8.entries = asciiBytesMap16;
        java.io.File file18 = null;
        explodedArchive8.root = file18;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
    }

    @Test
    public void test13870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13870");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = fileEntry9.getFile();
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13871");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getPath();
        boolean boolean30 = uRL9.sameFile(uRL27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL44.getQuery();
        java.lang.String str46 = uRL44.getRef();
        int int47 = uRL44.getPort();
        java.lang.String str48 = uRL44.getProtocol();
        java.lang.String str49 = uRL44.getPath();
        java.lang.String str50 = uRL44.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getFile();
        int int63 = uRL61.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive69.getEntries();
        java.util.jar.Manifest manifest72 = explodedArchive69.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL74.getQuery();
        java.lang.String str76 = uRL74.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str83 = explodedArchive82.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection84 = explodedArchive82.getEntries();
        java.util.jar.Manifest manifest85 = explodedArchive82.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler86 = explodedArchive82.new FilteredURLStreamHandler();
        java.net.URL uRL87 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL88 = new java.net.URL(uRL74, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL89 = new java.net.URL(uRL61, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL90 = new java.net.URL(uRL44, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL91 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        boolean boolean92 = uRL9.sameFile(uRL91);
        java.lang.String str93 = uRL91.getHost();
        java.lang.String str94 = uRL91.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ":100" + "'", str50, ":100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "archive" + "'", str83, "archive");
        org.junit.Assert.assertNotNull(entryCollection84);
        org.junit.Assert.assertNull(manifest85);
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL91.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[hi!://:100/hi!]" + "'", str93, "[hi!://:100/hi!]");
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test13872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13872");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.toExternalForm();
        java.lang.String str32 = uRL9.getFile();
        java.net.URL uRL34 = new java.net.URL(uRL9, "hi!:1");
        java.lang.String str35 = uRL34.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str63 = uRL62.getFile();
        int int64 = uRL62.getDefaultPort();
        java.lang.String str65 = uRL62.getRef();
        boolean boolean66 = uRL45.sameFile(uRL62);
        java.lang.String str67 = uRL45.getHost();
        java.lang.String str68 = uRL45.getQuery();
        java.lang.String str69 = uRL45.getAuthority();
        java.lang.String str70 = uRL45.getPath();
        boolean boolean71 = uRL34.sameFile(uRL45);
        int int72 = uRL45.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!://:100" + "'", str31, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ":100" + "'", str69, ":100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test13873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13873");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        explodedArchive0.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
    }

    @Test
    public void test13874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13874");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getHost();
        int int42 = uRL22.getPort();
        java.lang.String str43 = uRL22.getFile();
        java.lang.Class<?> wildcardClass44 = uRL22.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test13875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13875");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNotNull(entryCollection14);
    }

    @Test
    public void test13876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13876");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        explodedArchive0.filtered = false;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test13877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13877");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getPath();
        java.lang.String str18 = uRL15.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100" + "'", str17, "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100" + "'", str18, "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
    }

    @Test
    public void test13878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13878");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getQuery();
        java.lang.String str57 = uRL55.getHost();
        int int58 = uRL55.getPort();
        java.lang.String str59 = uRL55.getQuery();
        java.net.URL uRL61 = new java.net.URL(uRL55, "");
        java.io.File file63 = null;
        java.io.File file64 = null;
        java.io.File file65 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive66.getNestedArchives(entryFilter70);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive66.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive73.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file64, asciiBytesMap74);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file63, asciiBytesMap74);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL78 = new java.net.URL(uRL61, "", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.URL uRL79 = new java.net.URL("hi!", "hi!://:100/hi!", (int) (short) 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.URL uRL80 = new java.net.URL(uRL9, "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.URL uRL82 = new java.net.URL(uRL80, "/hi!://:100/://[archive://:10archive]:100archive://:10archive");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI83 = uRL80.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test13879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13879");
        java.net.URLConnection.setDefaultRequestProperty("/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", "hi!://:100/[hi!://:100/hi!]");
    }

    @Test
    public void test13880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13880");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getPath();
        java.net.URL uRL43 = new java.net.URL(uRL22, "[hi!://:100/hi!]");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        java.util.jar.Manifest manifest46 = explodedArchive44.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive44.getEntries();
        boolean boolean48 = uRL43.equals((java.lang.Object) explodedArchive44);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test13881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13881");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL65 = new java.net.URL("hi!://:100/archive", "hi!://:100/hi!://:100/hi!://:100/hi!://:100", (int) ' ', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL66 = new java.net.URL(uRL9, "archive://[/hi!://:100]:10hi!://:100/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Invalid authority field: [");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "archive://:10:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/archive://[hi!://:100/hi!://:100/hi!://:100/hi!://:100]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100");
    }

    @Test
    public void test13882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13882");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL29, ":100");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = uRL41.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/:100");
    }

    @Test
    public void test13883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13883");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getQuery();
        int int25 = uRL9.getPort();
        java.lang.String str26 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + ":100" + "'", str26, ":100");
    }

    @Test
    public void test13884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13884");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest11 = explodedArchive8.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNotNull(archiveList13);
    }

    @Test
    public void test13885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13885");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry8.name = asciiBytes9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry8.getName();
        java.io.File file12 = fileEntry8.file;
        java.io.File file13 = fileEntry8.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13886");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry13.name = asciiBytes14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry13.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test13887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13887");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100]:97/hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /archive://[hi!://:100/hi!]:1/hi!://[hi!://:100]:97/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13888");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive14.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        java.lang.String str21 = uRL19.getPath();
        boolean boolean22 = uRL9.sameFile(uRL19);
        java.lang.String str23 = uRL19.toExternalForm();
        java.lang.String str24 = uRL19.getFile();
        java.lang.String str25 = uRL19.getRef();
        java.lang.String str26 = uRL19.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!://:100" + "'", str23, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test13889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13889");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        boolean boolean20 = explodedArchive19.filtered;
        java.util.jar.Manifest manifest21 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive19.getNestedArchives(entryFilter22);
        java.io.File file24 = explodedArchive19.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL25 = explodedArchive19.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(file24);
    }

    @Test
    public void test13890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13890");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getPath();
        java.lang.String str12 = uRL9.getFile();
        java.lang.String str13 = uRL9.getFile();
        java.lang.String str14 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!://:100" + "'", str14, "hi!://:100");
    }

    @Test
    public void test13891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13891");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive4.filtered = true;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive4.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive4.getFilteredArchive(entryRenameFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive4.entries;
        boolean boolean12 = explodedArchive4.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("hi!://:100/archive:///archive:0hi!://:100", "hi!://:100/hi!", (int) 'a', "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = uRL14.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/archive:///archive:0hi!://:100://[hi!://:100/hi!]:97archive://:10:100");
    }

    @Test
    public void test13892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13892");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive17.new FileEntry();
        java.lang.String str22 = explodedArchive17.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive17.manifest = manifest24;
        java.io.File file26 = null;
        explodedArchive17.root = file26;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive17.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive17.entries;
        explodedArchive11.entries = asciiBytesMap29;
        java.io.File file31 = null;
        explodedArchive11.root = file31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive11.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = explodedArchive11.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
    }

    @Test
    public void test13893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13893");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getHost();
        java.lang.String str36 = uRL34.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getHost();
        int int49 = uRL46.getPort();
        boolean boolean50 = uRL34.sameFile(uRL46);
        int int51 = uRL34.getPort();
        java.lang.String str52 = uRL34.getAuthority();
        boolean boolean53 = uRL23.sameFile(uRL34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str68 = explodedArchive67.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive67.getEntries();
        java.util.jar.Manifest manifest70 = explodedArchive67.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str73 = uRL72.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL72, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.lang.String str80 = uRL79.getAuthority();
        int int81 = uRL79.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter85 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList86 = explodedArchive83.getNestedArchives(entryFilter85);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter87 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList88 = explodedArchive83.getNestedArchives(entryFilter87);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap89 = explodedArchive83.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler90 = explodedArchive83.new FilteredURLStreamHandler();
        java.net.URL uRL91 = new java.net.URL(uRL79, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL92 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL93 = new java.net.URL("", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (int) (byte) 1, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL94 = new java.net.URL(uRL34, "[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.lang.String str95 = uRL34.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNull(manifest70);
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ":100" + "'", str80, ":100");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(archiveList86);
        org.junit.Assert.assertNotNull(archiveList88);
        org.junit.Assert.assertNotNull(asciiBytesMap89);
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL92.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL93.toString(), "://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:1/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL94.toString(), "hi!://:100/[hi!://:100/hi!]:0");
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test13894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13894");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.toExternalForm();
        java.lang.String str40 = uRL37.getRef();
        java.net.URL uRL42 = new java.net.URL(uRL37, "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/archive" + "'", str39, "hi!://:100/archive");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!://:100/[hi!://:100/hi!]");
    }

    @Test
    public void test13895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13895");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive5.getNestedArchives(entryFilter12);
        java.io.File file14 = null;
        java.io.File file15 = null;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap25);
        explodedArchive5.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap25);
        java.util.jar.Manifest manifest30 = null;
        explodedArchive29.manifest = manifest30;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter32 = null;
        org.springframework.boot.loader.archive.Archive archive33 = explodedArchive29.getFilteredArchive(entryRenameFilter32);
        java.io.File file34 = null;
        explodedArchive29.root = file34;
        java.io.File file36 = null;
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        explodedArchive39.filtered = false;
        java.util.jar.Manifest manifest45 = explodedArchive39.manifest;
        java.io.File file46 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive47.getNestedArchives(entryFilter49);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive47.getNestedArchives(entryFilter51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive47.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive54.entries;
        explodedArchive39.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap55);
        explodedArchive29.entries = asciiBytesMap55;
        java.io.File file61 = explodedArchive29.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive29.entries;
        java.util.jar.Manifest manifest63 = explodedArchive29.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100", "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", (int) (short) 0, "[/hi!://:100/archive]:32", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(archive33);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertNull(manifest63);
        org.junit.Assert.assertEquals(uRL65.toString(), "[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0:0[/hi!://:100/archive]:32");
    }

    @Test
    public void test13896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13896");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive43.getNestedArchives(entryFilter44);
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.jar.Manifest manifest49 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive43.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNull(manifest49);
    }

    @Test
    public void test13897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13897");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        java.io.File file8 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        java.lang.Class<?> wildcardClass13 = fileEntry4.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test13898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13898");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getQuery();
        java.lang.String str26 = uRL23.getUserInfo();
        java.net.URL uRL28 = new java.net.URL(uRL23, "/hi!://:100/://[archive://:10archive]:100archive://:10archive");
        int int29 = uRL28.getDefaultPort();
        java.net.Proxy proxy30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection31 = uRL28.openConnection(proxy30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test13899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13899");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        explodedArchive0.filtered = true;
        java.io.File file14 = explodedArchive0.root;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        java.lang.String str17 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
    }

    @Test
    public void test13900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13900");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
    }

    @Test
    public void test13901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13901");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest16 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive11.getFilteredArchive(entryRenameFilter17);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        java.io.File file20 = fileEntry19.file;
        java.io.File file21 = fileEntry19.getFile();
        java.io.File file22 = null;
        fileEntry19.file = file22;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = null;
        fileEntry19.name = asciiBytes24;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test13902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13902");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        java.io.File file6 = explodedArchive1.root;
        java.lang.String str7 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive9.getNestedArchives(entryFilter10);
        java.io.File file12 = null;
        explodedArchive9.root = file12;
        java.lang.String str14 = explodedArchive9.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
    }

    @Test
    public void test13903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13903");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.file;
        java.io.File file18 = fileEntry12.file;
        java.io.File file19 = fileEntry12.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test13904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13904");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        boolean boolean4 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        boolean boolean8 = explodedArchive6.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive6.getFilteredArchive(entryRenameFilter9);
        java.io.File file11 = explodedArchive6.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive12.getFilteredArchive(entryRenameFilter15);
        java.io.File file17 = explodedArchive12.root;
        java.lang.String str18 = explodedArchive12.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive12.entries;
        explodedArchive6.entries = asciiBytesMap19;
        explodedArchive0.entries = asciiBytesMap19;
        java.io.File file22 = null;
        explodedArchive0.root = file22;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.lang.String str25 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
    }

    @Test
    public void test13905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13905");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test13906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13906");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        boolean boolean10 = explodedArchive1.filtered;
        java.util.jar.Manifest manifest11 = explodedArchive1.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive1.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive1.new FilteredURLStreamHandler();
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        explodedArchive28.filtered = true;
        java.util.jar.Manifest manifest31 = explodedArchive28.getManifest();
        java.util.jar.Manifest manifest32 = explodedArchive28.manifest;
        java.io.File file33 = null;
        explodedArchive28.root = file33;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive43.entries;
        explodedArchive28.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap44);
        explodedArchive1.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
    }

    @Test
    public void test13907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13907");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        java.io.File file7 = null;
        explodedArchive1.root = file7;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive1.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap11);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test13908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13908");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getQuery();
        java.lang.String str13 = uRL11.getPath();
        java.lang.String str14 = uRL11.getAuthority();
        java.lang.String str15 = uRL11.getPath();
        java.lang.String str16 = uRL11.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL(uRL30, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str46 = uRL45.getUserInfo();
        java.lang.String str47 = uRL45.getQuery();
        java.lang.String str48 = uRL45.getFile();
        boolean boolean49 = uRL11.sameFile(uRL45);
        int int50 = uRL11.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!://:100/hi!]:0" + "'", str14, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100/hi!" + "'", str15, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL45.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test13909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13909");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getPath();
        java.lang.String str20 = uRL17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL(uRL17, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/[hi!://:100/hi!]", (int) '#', "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("[/hi!:1]", "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100", 100, "[/archive:///archive:0hi!://:100]", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "[/hi!:1]://[hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100]:100[/archive:///archive:0hi!://:100]");
    }

    @Test
    public void test13910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13910");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test13911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13911");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.io.File file18 = explodedArchive11.root;
        java.io.File file19 = null;
        explodedArchive11.root = file19;
        java.util.jar.Manifest manifest21 = explodedArchive11.manifest;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(manifest21);
    }

    @Test
    public void test13912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13912");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = null;
        fileEntry9.file = file10;
        java.io.File file12 = fileEntry9.file;
        java.io.File file13 = fileEntry9.file;
        java.io.File file14 = fileEntry9.getFile();
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13913");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        java.lang.String str16 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getQuery();
        java.lang.String str43 = uRL41.getPath();
        boolean boolean44 = uRL31.sameFile(uRL41);
        java.net.URLStreamHandler uRLStreamHandler46 = null;
        java.net.URL uRL47 = new java.net.URL(uRL41, "", uRLStreamHandler46);
        int int48 = uRL47.getPort();
        java.lang.String str49 = uRL47.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = null;
        explodedArchive59.entries = asciiBytesMap61;
        java.util.jar.Manifest manifest63 = null;
        explodedArchive59.manifest = manifest63;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL68 = new java.net.URL(uRL47, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL69 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/:100", (int) (byte) 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL70 = new java.net.URL(uRL13, "[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.jar.Manifest manifest74 = null;
        explodedArchive72.manifest = manifest74;
        java.io.File file76 = explodedArchive72.root;
        explodedArchive72.filtered = false;
        explodedArchive72.filtered = true;
        java.io.File file81 = explodedArchive72.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry82 = explodedArchive72.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL(uRL13, "hi!://[:100]:52hi!", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.net.URL uRL85 = new java.net.URL("hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "[hi!://:100/:100]://[hi!://:100/://[hi!://:100/:100]:100/hi!://:100]:0hi!://:100/hi!://:100/hi!", 97, "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = uRL85.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100://[hi!://:100/:100]://[hi!://:100/://[hi!://:100/:100]:100/hi!://:100]:0hi!://:100/hi!://:100/hi!:97hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
    }

    @Test
    public void test13914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13914");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL59 = new java.net.URL(uRL39, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str60 = uRL39.getFile();
        java.lang.String str61 = uRL39.getProtocol();
        java.lang.String str62 = uRL39.getAuthority();
        boolean boolean63 = uRL22.sameFile(uRL39);
        java.net.URL uRL65 = new java.net.URL(uRL22, "");
        java.lang.String str66 = uRL22.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!://:100" + "'", str66, "hi!://:100");
    }

    @Test
    public void test13915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13915");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.lang.String str19 = explodedArchive11.toString();
        java.util.jar.Manifest manifest20 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive11.new FileEntry();
        java.io.File file22 = null;
        fileEntry21.file = file22;
        java.io.File file24 = fileEntry21.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = fileEntry21.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(asciiBytes25);
    }

    @Test
    public void test13916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13916");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL33, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        boolean boolean55 = uRL9.sameFile(uRL54);
        java.lang.String str56 = uRL54.getAuthority();
        java.lang.String str57 = uRL54.getQuery();
        java.lang.String str58 = uRL54.getRef();
        java.lang.String str59 = uRL54.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI60 = uRL54.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ":100" + "'", str56, ":100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test13917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13917");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = explodedArchive0.root;
        explodedArchive0.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        java.lang.Class<?> wildcardClass14 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test13918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13918");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test13919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13919");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry6.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry6.name = asciiBytes8;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(asciiBytes7);
    }

    @Test
    public void test13920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13920");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        boolean boolean20 = explodedArchive19.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive19.new FileEntry();
        java.io.File file22 = null;
        fileEntry21.file = file22;
        java.io.File file24 = fileEntry21.file;
        java.io.File file25 = fileEntry21.getFile();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test13921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13921");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getRef();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        java.lang.String str28 = uRL9.getFile();
        java.lang.String str29 = uRL9.toExternalForm();
        java.lang.String str30 = uRL9.getUserInfo();
        java.lang.String str31 = uRL9.getQuery();
        java.lang.String str32 = uRL9.getProtocol();
        java.lang.String str33 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100" + "'", str29, "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!://:100" + "'", str33, "hi!://:100");
    }

    @Test
    public void test13922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13922");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        explodedArchive0.filtered = false;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
    }

    @Test
    public void test13923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13923");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = null;
        fileEntry12.name = asciiBytes15;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(asciiBytes19);
    }

    @Test
    public void test13924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13924");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNotNull(archiveList16);
    }

    @Test
    public void test13925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13925");
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL26 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL27 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        int int40 = uRL37.getPort();
        java.lang.String str41 = uRL37.getProtocol();
        boolean boolean42 = uRL27.sameFile(uRL37);
        java.lang.String str43 = uRL37.getQuery();
        java.io.File file45 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive46.getNestedArchives(entryFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive53.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter55 = null;
        org.springframework.boot.loader.archive.Archive archive56 = explodedArchive53.getFilteredArchive(entryRenameFilter55);
        explodedArchive53.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive53.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL(uRL37, "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.Class<?> wildcardClass63 = uRL62.getClass();
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertEquals(uRL25.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL27.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNotNull(archive56);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test13926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13926");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13927");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.toExternalForm();
        java.lang.String str28 = uRL23.getRef();
        java.lang.String str29 = uRL23.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.jar.Manifest manifest38 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL41 = new java.net.URL(uRL23, "://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100/hi!" + "'", str27, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100/hi!" + "'", str29, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]");
    }

    @Test
    public void test13928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13928");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getFile();
        java.lang.String str14 = uRL12.getFile();
        java.lang.String str15 = uRL12.toExternalForm();
        java.net.URL uRL17 = new java.net.URL(uRL12, "hi!://:100/hi!://:100/hi!://:100");
        java.lang.String str18 = uRL12.getFile();
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive30.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry31.getName();
        java.io.File file33 = null;
        fileEntry31.file = file33;
        java.io.File file35 = fileEntry31.file;
        java.io.File file36 = null;
        fileEntry31.file = file36;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes38 = fileEntry31.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = null;
        fileEntry31.name = asciiBytes39;
        java.io.File file41 = null;
        fileEntry31.file = file41;
        java.io.File file43 = fileEntry31.getFile();
        boolean boolean44 = uRL12.equals((java.lang.Object) fileEntry31);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!://:100/hi!" + "'", str14, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive://:0hi!://:100/hi!" + "'", str15, "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNull(asciiBytes32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(asciiBytes38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test13929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13929");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive0.getFilteredArchive(entryRenameFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL9 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test13930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13930");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.lang.String str10 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fileEntry11.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
    }

    @Test
    public void test13931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13931");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        int int42 = uRL9.getDefaultPort();
        java.lang.String str43 = uRL9.getRef();
        java.lang.String str44 = uRL9.getHost();
        java.lang.String str45 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!://:100" + "'", str45, "hi!://:100");
    }

    @Test
    public void test13932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13932");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive8.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest15 = explodedArchive8.manifest;
        explodedArchive8.filtered = false;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test13933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13933");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getUserInfo();
        java.lang.String str20 = uRL16.getPath();
        java.lang.String str21 = uRL16.getUserInfo();
        java.net.URL uRL23 = new java.net.URL(uRL16, "[/:100]:0");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive25.getFilteredArchive(entryRenameFilter28);
        java.io.File file30 = explodedArchive25.root;
        java.lang.String str31 = explodedArchive25.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL(uRL23, "/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection34 = uRL33.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/[/:100]:0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNotNull(archive29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test13934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13934");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive11.new FilteredURLStreamHandler();
        java.io.File file17 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
    }

    @Test
    public void test13935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13935");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL54, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL69 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL70 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL71 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        boolean boolean72 = uRL32.sameFile(uRL71);
        java.lang.String str73 = uRL71.getUserInfo();
        java.lang.String str74 = uRL71.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/archive://[hi!://:100/hi!]:1/hi!" + "'", str74, "/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test13936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13936");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("[/hi!://[hi!://:100/hi!]:1/archive]:97");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13937");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        explodedArchive0.filtered = true;
        java.lang.String str13 = explodedArchive0.toString();
        java.lang.String str14 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
    }

    @Test
    public void test13938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13938");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        explodedArchive2.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive2.getNestedArchives(entryFilter11);
        explodedArchive2.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        java.util.jar.Manifest manifest30 = explodedArchive28.getManifest();
        java.lang.String str31 = explodedArchive28.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive28.entries;
        explodedArchive17.entries = asciiBytesMap32;
        java.io.File file34 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive17.getNestedArchives(entryFilter35);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
    }

    @Test
    public void test13939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13939");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = null;
        explodedArchive47.entries = asciiBytesMap49;
        java.util.jar.Manifest manifest51 = null;
        explodedArchive47.manifest = manifest51;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        java.util.jar.Manifest manifest78 = explodedArchive75.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str84 = explodedArchive83.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection85 = explodedArchive83.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler86 = explodedArchive83.new FilteredURLStreamHandler();
        java.net.URL uRL87 = new java.net.URL(uRL80, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL88 = new java.net.URL(uRL68, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL89 = new java.net.URL("hi!:1", "/archive", (int) (short) 0, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        boolean boolean90 = uRL54.sameFile(uRL89);
        java.lang.String str91 = uRL54.getRef();
        java.lang.String str92 = uRL54.getProtocol();
        java.lang.String str93 = uRL54.toExternalForm();
        boolean boolean94 = uRL9.sameFile(uRL54);
        java.lang.String str95 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":100" + "'", str42, ":100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertNull(manifest78);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "archive" + "'", str84, "archive");
        org.junit.Assert.assertNotNull(entryCollection85);
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!:1:///archive:0archive");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!://[:100]:52hi!" + "'", str93, "hi!://[:100]:52hi!");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test13940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13940");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.lang.String str10 = explodedArchive0.toString();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        java.util.jar.Manifest manifest13 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        explodedArchive14.root = file23;
        java.io.File file25 = null;
        explodedArchive14.root = file25;
        java.io.File file27 = explodedArchive14.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive14.entries;
        java.io.File file29 = null;
        explodedArchive14.root = file29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive31.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive31.getFilteredArchive(entryRenameFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive31.getNestedArchives(entryFilter37);
        java.io.File file39 = null;
        java.io.File file40 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive41.getNestedArchives(entryFilter43);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive41.getNestedArchives(entryFilter45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive41.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive48.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap49);
        explodedArchive31.entries = asciiBytesMap49;
        explodedArchive14.entries = asciiBytesMap49;
        explodedArchive0.entries = asciiBytesMap49;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(archive36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
    }

    @Test
    public void test13941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13941");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.lang.String str59 = uRL9.getQuery();
        java.lang.String str60 = uRL9.getFile();
        java.lang.String str61 = uRL9.toExternalForm();
        java.lang.String str62 = uRL9.getFile();
        java.lang.String str63 = uRL9.getUserInfo();
        java.lang.String str64 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!://:100" + "'", str61, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test13942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13942");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getHost();
        int int41 = uRL38.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getFile();
        int int53 = uRL51.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getQuery();
        java.lang.String str66 = uRL64.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL(uRL51, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str80 = uRL51.toExternalForm();
        boolean boolean81 = uRL38.sameFile(uRL51);
        java.lang.String str82 = uRL38.getFile();
        java.lang.String str83 = uRL38.getRef();
        java.lang.String str84 = uRL38.getAuthority();
        java.lang.String str85 = uRL38.getPath();
        boolean boolean86 = uRL27.sameFile(uRL38);
        java.net.URL uRL88 = new java.net.URL(uRL38, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        java.net.URL uRL90 = new java.net.URL(uRL38, "hi!://:100/[/hi!://:100/archive]");
        java.lang.String str91 = uRL38.getProtocol();
        java.net.URL uRL93 = new java.net.URL(uRL38, "/[://[archive://:10archive]:100archive://:10archive]:0");
        java.lang.String str94 = uRL38.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + ":100" + "'", str28, ":100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!://:100" + "'", str80, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ":100" + "'", str84, ":100");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertEquals(uRL93.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!://:100" + "'", str94, "hi!://:100");
    }

    @Test
    public void test13943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13943");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive1.manifest = manifest9;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive12.getNestedArchives(entryFilter19);
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap32);
        explodedArchive12.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive36.entries;
        explodedArchive1.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap37);
        java.util.jar.Manifest manifest40 = null;
        explodedArchive39.manifest = manifest40;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive39.getNestedArchives(entryFilter42);
        java.util.jar.Manifest manifest44 = null;
        explodedArchive39.manifest = manifest44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive46.getNestedArchives(entryFilter48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive46.new FileEntry();
        java.io.File file51 = fileEntry50.file;
        java.io.File file52 = fileEntry50.getFile();
        java.io.File file53 = fileEntry50.file;
        java.io.File file54 = null;
        fileEntry50.file = file54;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive56 = explodedArchive39.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
    }

    @Test
    public void test13944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13944");
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive9.getNestedArchives(entryFilter16);
        java.io.File file18 = null;
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap29);
        explodedArchive9.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap29);
        java.util.jar.Manifest manifest34 = null;
        explodedArchive33.manifest = manifest34;
        java.io.File file36 = explodedArchive33.root;
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap47);
        explodedArchive48.filtered = true;
        java.io.File file51 = null;
        explodedArchive48.root = file51;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive48.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest55 = null;
        explodedArchive48.manifest = manifest55;
        java.io.File file57 = explodedArchive48.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive48.entries;
        explodedArchive33.entries = asciiBytesMap58;
        java.util.jar.Manifest manifest60 = explodedArchive33.manifest;
        explodedArchive33.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive33.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("/hi!://[hi!://:100/hi!]:1/archive", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100", (int) ' ', "hi!://:100/://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.net.URL uRL66 = new java.net.URL("hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0", "hi!://[:100]:52/hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", 10, ":100://[hi!://:100/hi!]:100hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL65.toString(), "/hi!://[hi!://:100/hi!]:1/archive://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100]:32hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0://[hi!://[:100]:52/hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]:10:100://[hi!://:100/hi!]:100hi!://:100/archive");
    }

    @Test
    public void test13945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13945");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL26, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL55 = new java.net.URL(uRL9, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive57.getNestedArchives(entryFilter61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive57.getNestedArchives(entryFilter64);
        java.io.File file66 = null;
        java.io.File file67 = null;
        java.io.File file68 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive69.getNestedArchives(entryFilter71);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive69.getNestedArchives(entryFilter73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file68, asciiBytesMap75);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive76.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap77);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap77);
        explodedArchive57.entries = asciiBytesMap77;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive57.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL(uRL55, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL55.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL55, "[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getFile();
        java.net.Proxy proxy89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection90 = uRL87.openConnection(proxy89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!://:100/hi!://:100/hi!" + "'", str84, "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/hi!://:100/[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/hi!://:100/[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10" + "'", str88, "/hi!://:100/[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10");
    }

    @Test
    public void test13946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13946");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getQuery();
        int int28 = uRL9.getPort();
        java.lang.String str29 = uRL9.getProtocol();
        java.lang.String str30 = uRL9.getHost();
        java.net.Proxy proxy31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection32 = uRL9.openConnection(proxy31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test13947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13947");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file26 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file29 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter30 = null;
        org.springframework.boot.loader.archive.Archive archive31 = explodedArchive0.getFilteredArchive(entryRenameFilter30);
        java.io.File file32 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archive31);
        org.junit.Assert.assertNull(file32);
    }

    @Test
    public void test13948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13948");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL42, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.net.URL uRL50 = new java.net.URL(uRL30, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.lang.String str58 = explodedArchive52.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL(uRL50, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL16, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str62 = uRL61.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI63 = uRL61.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
    }

    @Test
    public void test13949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13949");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive17.new FilteredURLStreamHandler();
        explodedArchive17.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter23 = null;
        org.springframework.boot.loader.archive.Archive archive24 = explodedArchive17.getFilteredArchive(entryRenameFilter23);
        java.util.jar.Manifest manifest25 = explodedArchive17.getManifest();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(archive24);
        org.junit.Assert.assertNull(manifest25);
    }

    @Test
    public void test13950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13950");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive10.getNestedArchives(entryFilter17);
        java.io.File file19 = null;
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap30);
        explodedArchive10.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive34.new FileEntry();
        java.util.jar.Manifest manifest36 = explodedArchive34.manifest;
        boolean boolean37 = explodedArchive34.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive34.entries;
        explodedArchive0.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
    }

    @Test
    public void test13951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13951");
        java.lang.String[] strArray29 = new java.lang.String[] { "[:100]", "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]", "archive", "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0", "/[/hi!://:100/archive]://[:100]:52:100/:100", "[:100]", "/://[archive://:10archive]:100archive://:10archive", "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0", "/://[archive://:10archive]:100archive://:10archive", "[hi!://:100/hi!]:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "hi!://:100/hi!://:100/hi!://:100/hi!://:100/hi!://:100", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive", "hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", "hi!://hi!:1hi!", "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", "hi!://:100/archive://archive:0hi!://:100/hi!://:100", "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", "hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52", ":10", "[://[archive://:10archive]:100archive://:10archive]", "/hi!://:100", "[hi!://:100/hi!://:100/archive]", "/hi!:1://[/:100]:10hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "/hi!://://[archive://:10archive]:100archive://:10archive", ":100://[hi!://:100/hi!]:100hi!://:100/archive", "/hi!://:100/archive:///archive:0hi!://:100", "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet30;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet30;
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test13952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13952");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.io.File file3 = fileEntry2.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry2.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = fileEntry2.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes6);
    }

    @Test
    public void test13953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13953");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = null;
        explodedArchive12.entries = asciiBytesMap16;
        java.io.File file18 = explodedArchive12.root;
        java.io.File file19 = explodedArchive12.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        explodedArchive12.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive30.getNestedArchives(entryFilter37);
        java.io.File file39 = null;
        explodedArchive30.root = file39;
        java.io.File file41 = null;
        explodedArchive30.root = file41;
        java.io.File file43 = explodedArchive30.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive30.entries;
        explodedArchive29.entries = asciiBytesMap44;
        explodedArchive0.entries = asciiBytesMap44;
        java.util.jar.Manifest manifest47 = explodedArchive0.manifest;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNull(manifest47);
    }

    @Test
    public void test13954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13954");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL51 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL52 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str53 = uRL52.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str64 = uRL63.getQuery();
        java.lang.String str65 = uRL63.getRef();
        int int66 = uRL63.getPort();
        java.lang.String str67 = uRL63.toExternalForm();
        java.lang.String str68 = uRL63.getRef();
        java.lang.String str69 = uRL63.getPath();
        java.net.URL uRL71 = new java.net.URL(uRL63, "[://[archive://:10archive]:100archive://:10archive]:0");
        java.lang.String str72 = uRL71.getUserInfo();
        boolean boolean73 = uRL52.sameFile(uRL71);
        java.lang.String str74 = uRL71.getQuery();
        int int75 = uRL71.getDefaultPort();
        java.lang.String str76 = uRL71.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL51.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/:100" + "'", str53, "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100" + "'", str67, "hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test13955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13955");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        explodedArchive8.filtered = false;
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        explodedArchive8.entries = asciiBytesMap24;
        explodedArchive0.entries = asciiBytesMap24;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive28.new FileEntry();
        java.lang.String str33 = explodedArchive28.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive28.new FileEntry();
        java.util.jar.Manifest manifest35 = null;
        explodedArchive28.manifest = manifest35;
        java.lang.String str37 = explodedArchive28.toString();
        java.io.File file38 = null;
        java.io.File file39 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive40.getNestedArchives(entryFilter47);
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        explodedArchive40.entries = asciiBytesMap60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive64.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap65);
        explodedArchive28.entries = asciiBytesMap65;
        explodedArchive0.entries = asciiBytesMap65;
        java.util.jar.Manifest manifest69 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNull(manifest69);
    }

    @Test
    public void test13956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13956");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", 1, "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13957");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        java.io.File file2 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive6.entries = asciiBytesMap10;
        boolean boolean12 = explodedArchive6.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive6.new FileEntry();
        java.io.File file14 = null;
        java.io.File file15 = null;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap25);
        explodedArchive6.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap25);
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        java.util.jar.Manifest manifest38 = explodedArchive31.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap39);
        explodedArchive29.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive42.getNestedArchives(entryFilter43);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive42.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive46 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList44);
    }

    @Test
    public void test13958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13958");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getHost();
        java.io.File file49 = null;
        java.io.File file50 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive51.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive51.getNestedArchives(entryFilter55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap59);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive60.new FileEntry();
        explodedArchive60.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "/archive:///archive:0hi!://:100", (int) (byte) 10, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.lang.String str66 = uRL65.getProtocol();
        boolean boolean67 = uRL41.sameFile(uRL65);
        java.net.URLStreamHandler uRLStreamHandler69 = null;
        java.net.URL uRL70 = new java.net.URL(uRL41, "/[/hi!://:100/archive]://[:100]:52:100/:100", uRLStreamHandler69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj71 = uRL41.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!://:100/hi!://hi!:1hi!" + "'", str66, "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/[/hi!://:100/archive]://[:100]:52:100/:100");
    }

    @Test
    public void test13959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13959");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        boolean boolean20 = explodedArchive11.filtered;
        java.util.jar.Manifest manifest21 = null;
        explodedArchive11.manifest = manifest21;
        java.lang.String str23 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive24.getNestedArchives(entryFilter31);
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap44);
        explodedArchive24.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive24.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest49 = explodedArchive24.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.jar.Manifest manifest52 = null;
        explodedArchive50.manifest = manifest52;
        java.util.jar.Manifest manifest54 = explodedArchive50.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive50.entries;
        explodedArchive24.entries = asciiBytesMap55;
        explodedArchive11.entries = asciiBytesMap55;
        java.lang.String str58 = explodedArchive11.toString();
        java.io.File file59 = null;
        explodedArchive11.root = file59;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
    }

    @Test
    public void test13960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13960");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        explodedArchive10.filtered = false;
        java.util.jar.Manifest manifest15 = explodedArchive10.manifest;
        boolean boolean16 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive10.getNestedArchives(entryFilter17);
        java.io.File file19 = null;
        explodedArchive10.root = file19;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(archiveList18);
    }

    @Test
    public void test13961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13961");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest19 = null;
        explodedArchive12.manifest = manifest19;
        java.io.File file21 = explodedArchive12.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive23.getNestedArchives(entryFilter24);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest27 = null;
        explodedArchive23.manifest = manifest27;
        explodedArchive23.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive23.getFilteredArchive(entryRenameFilter31);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNotNull(archive32);
    }

    @Test
    public void test13962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13962");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        explodedArchive1.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test13963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13963");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/hi!:1]:52", "/[:100]", 0, "hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!:1]:52");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13964");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        java.io.File file4 = explodedArchive1.root;
        java.util.jar.Manifest manifest5 = explodedArchive1.getManifest();
        java.io.File file6 = null;
        explodedArchive1.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive1.new FileEntry();
        java.lang.String str9 = explodedArchive1.toString();
        java.io.File file10 = null;
        explodedArchive1.root = file10;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        java.util.jar.Manifest manifest14 = explodedArchive13.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive13.getFilteredArchive(entryRenameFilter15);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNotNull(archive16);
    }

    @Test
    public void test13965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13965");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL21 = new java.net.URL("hi!://:100/[/hi!://:100/archive]", "", (int) 'a', "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL23 = new java.net.URL(uRL21, ":100://[hi!://:100/hi!]:0archive://:10archive");
        java.lang.String str24 = uRL21.getUserInfo();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100/[/hi!://:100/archive]://:97://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/[/hi!://:100/archive]://:97://[archive://:10archive]:100archive://:100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test13966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13966");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        explodedArchive8.filtered = false;
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        explodedArchive8.entries = asciiBytesMap24;
        explodedArchive0.entries = asciiBytesMap24;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest29 = null;
        explodedArchive0.manifest = manifest29;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive0.getNestedArchives(entryFilter31);
        boolean boolean33 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
    }

    @Test
    public void test13967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13967");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.file;
        java.io.File file16 = null;
        fileEntry4.file = file16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry4.getName();
        java.io.File file19 = null;
        fileEntry4.file = file19;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = null;
        fileEntry4.name = asciiBytes21;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes18);
    }

    @Test
    public void test13968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13968");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive0.toString();
        explodedArchive0.filtered = true;
        java.io.File file13 = explodedArchive0.root;
        java.lang.String str14 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive0.getFilteredArchive(entryRenameFilter17);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archive18);
    }

    @Test
    public void test13969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13969");
        java.net.URLConnection.setDefaultRequestProperty("archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[hi!://:100/hi!://hi!:1hi!]:35/hi!://:100/archive", "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test13970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13970");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
        java.io.File file15 = explodedArchive0.root;
        java.io.File file16 = null;
        explodedArchive0.root = file16;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13971");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.lang.String str3 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNotNull(archiveList5);
    }

    @Test
    public void test13972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13972");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.getProtocol();
        java.lang.String str16 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100" + "'", str16, "hi!://:100");
    }

    @Test
    public void test13973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13973");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
    }

    @Test
    public void test13974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13974");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        java.util.jar.Manifest manifest34 = explodedArchive31.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL(uRL24, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL46 = new java.net.URL("archive", "/hi!://:100", (int) (byte) 10, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL48 = new java.net.URL(uRL46, "://[archive://:10archive]:100archive://:10archive");
        java.io.File file49 = null;
        java.io.File file50 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive51.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive51.getNestedArchives(entryFilter55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap59);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive60.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes62 = fileEntry61.getName();
        java.io.File file63 = null;
        fileEntry61.file = file63;
        java.io.File file65 = fileEntry61.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes66 = fileEntry61.getName();
        java.lang.Class<?> wildcardClass67 = fileEntry61.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str69 = explodedArchive68.toString();
        java.util.jar.Manifest manifest70 = null;
        explodedArchive68.manifest = manifest70;
        java.util.jar.Manifest manifest72 = explodedArchive68.getManifest();
        boolean boolean73 = explodedArchive68.filtered;
        java.util.jar.Manifest manifest74 = explodedArchive68.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive68.getNestedArchives(entryFilter76);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive68.getNestedArchives(entryFilter78);
        java.util.jar.Manifest manifest80 = explodedArchive68.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry81 = explodedArchive68.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes82 = fileEntry81.name;
        java.io.File file83 = null;
        fileEntry81.file = file83;
        java.lang.Class<?> wildcardClass85 = fileEntry81.getClass();
        java.lang.Class[] classArray86 = new java.lang.Class[] { wildcardClass67, wildcardClass85 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = uRL48.getContent(classArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "archive://[/hi!://:100]:10hi!://:100/hi!:1");
        org.junit.Assert.assertEquals(uRL48.toString(), "archive://[/hi!://:100]:10hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertNull(asciiBytes62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(asciiBytes66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "archive" + "'", str69, "archive");
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(manifest74);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertNull(asciiBytes82);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(classArray86);
    }

    @Test
    public void test13975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13975");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.getFile();
        java.lang.String str33 = uRL27.getRef();
        boolean boolean34 = uRL15.sameFile(uRL27);
        int int35 = uRL27.getPort();
        java.net.URL uRL37 = new java.net.URL(uRL27, ":52");
        java.net.URL uRL39 = new java.net.URL(uRL27, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/:52");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
    }

    @Test
    public void test13976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13976");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        int int42 = uRL9.getDefaultPort();
        java.lang.String str43 = uRL9.getAuthority();
        int int44 = uRL9.getDefaultPort();
        int int45 = uRL9.getPort();
        java.lang.String str46 = uRL9.toExternalForm();
        java.lang.String str47 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!://:100" + "'", str46, "hi!://:100");
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test13977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13977");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        java.io.File file6 = explodedArchive1.root;
        java.lang.String str7 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive9.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.util.jar.Manifest manifest14 = explodedArchive9.manifest;
        java.util.jar.Manifest manifest15 = explodedArchive9.getManifest();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test13978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13978");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive19.manifest = manifest20;
        java.lang.String str22 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive19.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive19.new FileEntry();
        java.util.jar.Manifest manifest25 = explodedArchive19.getManifest();
        explodedArchive19.filtered = false;
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive19.buildEntries(file28, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNull(manifest25);
    }

    @Test
    public void test13979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13979");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        explodedArchive0.entries = asciiBytesMap2;
        java.io.File file4 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        java.io.File file6 = fileEntry5.file;
        java.io.File file7 = fileEntry5.getFile();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test13980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13980");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str6 = explodedArchive5.toString();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive5.manifest = manifest7;
        java.util.jar.Manifest manifest9 = explodedArchive5.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive5.entries;
        explodedArchive0.entries = asciiBytesMap10;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive13.entries = asciiBytesMap17;
        java.io.File file19 = explodedArchive13.root;
        java.io.File file20 = explodedArchive13.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        explodedArchive13.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap27);
        explodedArchive0.entries = asciiBytesMap27;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        java.lang.String str33 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
    }

    @Test
    public void test13981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13981");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        explodedArchive4.entries = asciiBytesMap20;
        java.util.jar.Manifest manifest22 = null;
        explodedArchive4.manifest = manifest22;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive4.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest27 = null;
        explodedArchive4.manifest = manifest27;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("/archive:///archive:0hi!://:100", "/hi!://://[archive://:10archive]:100archive://:10archive", (int) (short) 10, "/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        int int32 = uRL30.getPort();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL30.toString(), "/archive:///archive:0hi!://:100://[/hi!://://[archive://:10archive]:100archive://:10archive]:10/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!://:100/archive" + "'", str31, "/hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
    }

    @Test
    public void test13982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13982");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive0.entries;
        java.lang.String str34 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
    }

    @Test
    public void test13983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13983");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.lang.String str14 = uRL9.getFile();
        java.lang.String str15 = uRL9.getRef();
        java.lang.String str16 = uRL9.getPath();
        java.lang.String str17 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL27, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int35 = uRL34.getPort();
        java.lang.String str36 = uRL34.toExternalForm();
        java.lang.String str37 = uRL34.getQuery();
        int int38 = uRL34.getDefaultPort();
        int int39 = uRL34.getPort();
        boolean boolean40 = uRL9.sameFile(uRL34);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!://:100/hi!" + "'", str36, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test13984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13984");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.net.URL uRL60 = new java.net.URL(uRL52, "");
        java.lang.String str61 = uRL52.getRef();
        java.net.URL uRL63 = new java.net.URL(uRL52, "/:52");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/:52");
    }

    @Test
    public void test13985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13985");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL(uRL25, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL46 = new java.net.URL("hi!:1", "/archive", (int) (short) 0, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        boolean boolean47 = uRL11.sameFile(uRL46);
        java.lang.String str48 = uRL11.getQuery();
        java.net.URL uRL50 = new java.net.URL(uRL11, "hi!://:100/hi!");
        java.lang.String str51 = uRL11.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!:1:///archive:0archive");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://[:100]:52/hi!://:100/hi!");
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test13986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13986");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.io.File file13 = explodedArchive11.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive11.new FilteredURLStreamHandler();
        java.io.File file15 = null;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        explodedArchive11.entries = asciiBytesMap25;
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file28, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
    }

    @Test
    public void test13987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13987");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getProtocol();
        int int31 = uRL9.getPort();
        java.lang.String str32 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getQuery();
        java.lang.String str44 = uRL42.getRef();
        int int45 = uRL42.getPort();
        java.lang.String str46 = uRL42.getProtocol();
        java.lang.String str47 = uRL42.getPath();
        java.lang.String str48 = uRL42.getAuthority();
        java.lang.String str49 = uRL42.getRef();
        int int50 = uRL42.getPort();
        java.lang.String str51 = uRL42.getAuthority();
        boolean boolean52 = uRL9.sameFile(uRL42);
        java.lang.String str53 = uRL9.getQuery();
        java.io.File file59 = null;
        java.io.File file60 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive61.getNestedArchives(entryFilter63);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive61.getNestedArchives(entryFilter65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive61.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap67);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap69);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = explodedArchive70.new FileEntry();
        explodedArchive70.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter74 = null;
        org.springframework.boot.loader.archive.Archive archive75 = explodedArchive70.getFilteredArchive(entryRenameFilter74);
        java.lang.String str76 = explodedArchive70.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive70.new FilteredURLStreamHandler();
        java.net.URL uRL78 = new java.net.URL("/[hi!://:100/hi!]", "hi!://:100/[hi!://:100/hi!]", (int) ' ', "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.URL uRL79 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.Proxy proxy80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection81 = uRL79.openConnection(proxy80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ":100" + "'", str48, ":100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ":100" + "'", str51, ":100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertNotNull(archive75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertEquals(uRL78.toString(), "/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]:32hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test13988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13988");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        java.net.URL uRL13 = new java.net.URL(uRL9, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        java.lang.String str26 = uRL24.getHost();
        int int27 = uRL24.getPort();
        java.lang.String str28 = uRL24.getQuery();
        java.lang.String str29 = uRL24.getFile();
        java.lang.String str30 = uRL24.getRef();
        java.lang.String str31 = uRL24.getPath();
        int int32 = uRL24.getDefaultPort();
        java.lang.String str33 = uRL24.getQuery();
        java.net.URL uRL35 = new java.net.URL(uRL24, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive37.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter41 = null;
        org.springframework.boot.loader.archive.Archive archive42 = explodedArchive37.getFilteredArchive(entryRenameFilter41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        boolean boolean45 = explodedArchive43.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter46 = null;
        org.springframework.boot.loader.archive.Archive archive47 = explodedArchive43.getFilteredArchive(entryRenameFilter46);
        explodedArchive43.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive43.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive43.entries;
        explodedArchive37.entries = asciiBytesMap51;
        boolean boolean53 = explodedArchive37.filtered;
        explodedArchive37.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL35, "hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.net.URL uRL58 = new java.net.URL(uRL9, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream59 = uRL9.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNotNull(archive42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(archive47);
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!://:100/hi!");
    }

    @Test
    public void test13989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13989");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getDefaultPort();
        java.lang.String str45 = uRL41.getAuthority();
        java.lang.String str46 = uRL41.getRef();
        java.net.URL uRL48 = new java.net.URL(uRL41, "[hi!://:100/hi!]:100");
        java.lang.String str49 = uRL48.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/[hi!://:100/hi!]:100");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test13990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13990");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.lang.String str11 = explodedArchive0.toString();
        java.lang.String str12 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry13.name;
        java.io.File file15 = null;
        fileEntry13.file = file15;
        java.io.File file17 = fileEntry13.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry13.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
    }

    @Test
    public void test13991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13991");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.net.URL uRL40 = new java.net.URL(uRL37, "hi!");
        java.lang.String str41 = uRL40.getHost();
        java.lang.String str42 = uRL40.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive44.filtered = true;
        explodedArchive44.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL(uRL40, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getAuthority();
        java.lang.String str53 = uRL51.toExternalForm();
        java.lang.String str54 = uRL51.getUserInfo();
        java.net.URL uRL56 = new java.net.URL(uRL51, "/hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":100" + "'", str42, ":100");
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/hi!://:100/hi!://:100" + "'", str53, "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!");
    }

    @Test
    public void test13992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13992");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = null;
        fileEntry12.name = asciiBytes16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.getName();
        java.io.File file19 = null;
        fileEntry12.file = file19;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry12.getName();
        java.io.File file22 = null;
        fileEntry12.file = file22;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(asciiBytes21);
    }

    @Test
    public void test13993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13993");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        java.io.File file20 = fileEntry19.getFile();
        java.io.File file21 = null;
        fileEntry19.file = file21;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = null;
        fileEntry19.name = asciiBytes23;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = fileEntry19.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test13994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13994");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getQuery();
        int int28 = uRL9.getPort();
        java.lang.String str29 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getFile();
        int int41 = uRL39.getDefaultPort();
        java.lang.String str42 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        boolean boolean57 = uRL39.sameFile(uRL52);
        int int58 = uRL39.getPort();
        boolean boolean59 = uRL9.sameFile(uRL39);
        java.lang.String str60 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!://:100" + "'", str60, "hi!://:100");
    }

    @Test
    public void test13995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13995");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        java.io.File file10 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archive9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(entryCollection11);
        org.junit.Assert.assertNotNull(archive15);
    }

    @Test
    public void test13996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13996");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive29.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive29.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL13, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getAuthority();
        java.lang.String str39 = uRL37.getProtocol();
        java.lang.String str40 = uRL37.getHost();
        java.lang.String str41 = uRL37.toExternalForm();
        java.lang.String str42 = uRL37.getPath();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!://:100/:100]:100" + "'", str38, "[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/hi!" + "'", str39, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!://:100/:100]" + "'", str40, "[hi!://:100/:100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!" + "'", str41, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/archive://[hi!://:100/hi!]:1/hi!" + "'", str42, "/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test13997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13997");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        boolean boolean28 = explodedArchive25.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive25.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive25.entries;
        boolean boolean31 = explodedArchive25.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive25.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive25.getFilteredArchive(entryRenameFilter35);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archive36);
    }

    @Test
    public void test13998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13998");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL33, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        boolean boolean55 = uRL9.sameFile(uRL54);
        int int56 = uRL54.getDefaultPort();
        java.lang.String str57 = uRL54.getHost();
        java.lang.String str58 = uRL54.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test13999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test13999");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        boolean boolean7 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test14000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest27.test14000");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive3.filtered = true;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive11.getNestedArchives(entryFilter12);
        explodedArchive11.filtered = false;
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList13);
    }
}

