import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest24 {

    public static boolean debug = false;

    @Test
    public void test12001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12001");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL(uRL23, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.jar.Manifest manifest38 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.getFile();
        int int42 = uRL40.getDefaultPort();
        java.lang.String str43 = uRL40.getRef();
        boolean boolean44 = uRL23.sameFile(uRL40);
        boolean boolean45 = uRL9.sameFile(uRL23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = null;
        explodedArchive50.entries = asciiBytesMap52;
        java.util.jar.Manifest manifest54 = null;
        explodedArchive50.manifest = manifest54;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.getPath();
        java.lang.String str59 = uRL57.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.lang.String str82 = uRL81.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str85 = explodedArchive84.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection86 = explodedArchive84.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler87 = explodedArchive84.new FilteredURLStreamHandler();
        java.net.URL uRL88 = new java.net.URL(uRL81, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL89 = new java.net.URL(uRL69, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.lang.String str90 = uRL69.getFile();
        java.lang.String str91 = uRL69.getProtocol();
        java.lang.String str92 = uRL69.getRef();
        boolean boolean93 = uRL57.sameFile(uRL69);
        java.lang.String str94 = uRL69.getUserInfo();
        boolean boolean95 = uRL9.sameFile(uRL69);
        java.lang.String str96 = uRL69.getProtocol();
        java.lang.String str97 = uRL69.getFile();
        java.lang.String str98 = uRL69.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!" + "'", str58, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!://:100/hi!]" + "'", str59, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "archive" + "'", str85, "archive");
        org.junit.Assert.assertNotNull(entryCollection86);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!" + "'", str96, "hi!");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!://:100" + "'", str98, "hi!://:100");
    }

    @Test
    public void test12002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12002");
        java.net.URLConnection.setDefaultRequestProperty("://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]", "[/archive:///archive:0hi!://:100]");
    }

    @Test
    public void test12003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12003");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!", "/hi!:1://[/:100]:10hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12004");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = explodedArchive0.root;
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test12005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12005");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", (int) (short) 1, "[/archive:///archive:0hi!://:100]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12006");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive10.new FileEntry();
        java.io.File file14 = fileEntry13.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test12007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12007");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.lang.String str59 = uRL9.getQuery();
        java.lang.String str60 = uRL9.getPath();
        java.lang.String str61 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test12008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12008");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter18 = null;
        org.springframework.boot.loader.archive.Archive archive19 = explodedArchive12.getFilteredArchive(entryRenameFilter18);
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive21.getNestedArchives(entryFilter28);
        java.io.File file30 = null;
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap41);
        explodedArchive21.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap41);
        explodedArchive12.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap41);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter48 = null;
        org.springframework.boot.loader.archive.Archive archive49 = explodedArchive47.getFilteredArchive(entryRenameFilter48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = explodedArchive47.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archive19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(archive49);
    }

    @Test
    public void test12009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12009");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        explodedArchive3.filtered = false;
        java.util.jar.Manifest manifest9 = explodedArchive3.manifest;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        explodedArchive3.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap19);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive23.getFilteredArchive(entryRenameFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive23.getNestedArchives(entryFilter26);
        java.util.jar.Manifest manifest28 = explodedArchive23.manifest;
        java.lang.String str29 = explodedArchive23.toString();
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archive25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
    }

    @Test
    public void test12010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12010");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getUserInfo();
        java.lang.String str30 = uRL28.getQuery();
        java.lang.String str31 = uRL28.getPath();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
    }

    @Test
    public void test12011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12011");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL68 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL69 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str70 = uRL69.getProtocol();
        int int71 = uRL69.getDefaultPort();
        boolean boolean72 = uRL9.sameFile(uRL69);
        java.lang.String str73 = uRL69.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str79 = explodedArchive78.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = null;
        explodedArchive78.entries = asciiBytesMap80;
        java.util.jar.Manifest manifest82 = null;
        explodedArchive78.manifest = manifest82;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler84 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL85 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        int int86 = uRL85.getPort();
        java.lang.String str87 = uRL85.toExternalForm();
        boolean boolean88 = uRL69.sameFile(uRL85);
        int int89 = uRL85.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL68.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ":100" + "'", str73, ":100");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "archive" + "'", str79, "archive");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str87, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    }

    @Test
    public void test12012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12012");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getFile();
        java.net.URL uRL22 = new java.net.URL(uRL16, "archive");
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL16, "[/hi!://:100/archive]", uRLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        int int27 = uRL25.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    }

    @Test
    public void test12013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12013");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.io.File file7 = null;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        explodedArchive9.filtered = false;
        java.util.jar.Manifest manifest15 = explodedArchive9.manifest;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        explodedArchive9.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive29.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive29.entries;
        explodedArchive0.entries = asciiBytesMap31;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
    }

    @Test
    public void test12014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12014");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        explodedArchive8.filtered = false;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
    }

    @Test
    public void test12015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12015");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12016");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry11.name;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test12017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12017");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getQuery();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getPort();
        java.lang.String str45 = uRL41.getQuery();
        java.net.URL uRL47 = new java.net.URL(uRL41, "");
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL47, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL30, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        int int66 = uRL30.getPort();
        java.net.URL uRL68 = new java.net.URL(uRL30, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.net.URL uRL70 = new java.net.URL(uRL30, "/hi!://:100");
        java.lang.String str71 = uRL30.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test12018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12018");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        java.io.File file12 = null;
        explodedArchive0.root = file12;
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
    }

    @Test
    public void test12019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12019");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getFile();
        int int25 = uRL23.getDefaultPort();
        java.lang.String str26 = uRL23.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        java.util.jar.Manifest manifest34 = explodedArchive31.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getQuery();
        java.lang.String str38 = uRL36.getRef();
        java.lang.String str39 = uRL36.getRef();
        java.lang.String str40 = uRL36.toExternalForm();
        boolean boolean41 = uRL23.sameFile(uRL36);
        java.lang.String str42 = uRL36.getUserInfo();
        java.lang.String str43 = uRL36.getHost();
        java.lang.String str44 = uRL36.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive46.getNestedArchives(entryFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.lang.String str52 = explodedArchive46.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL36.getPath();
        java.lang.String str56 = uRL36.getFile();
        boolean boolean57 = uRL9.sameFile(uRL36);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!://:100" + "'", str40, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test12020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12020");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getQuery();
        int int28 = uRL9.getPort();
        java.lang.String str29 = uRL9.toExternalForm();
        java.lang.String str30 = uRL9.getHost();
        java.lang.String str31 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100" + "'", str29, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test12021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12021");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.file;
        java.io.File file12 = null;
        fileEntry10.file = file12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test12022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12022");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive27.new FileEntry();
        explodedArchive27.filtered = false;
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive33.new FileEntry();
        java.lang.String str38 = explodedArchive33.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive33.new FileEntry();
        java.util.jar.Manifest manifest40 = null;
        explodedArchive33.manifest = manifest40;
        java.lang.String str42 = explodedArchive33.toString();
        java.io.File file43 = null;
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive45.getNestedArchives(entryFilter52);
        java.io.File file54 = null;
        java.io.File file55 = null;
        java.io.File file56 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive57.getNestedArchives(entryFilter61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive64.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap65);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap65);
        explodedArchive45.entries = asciiBytesMap65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap70);
        explodedArchive33.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap70);
        explodedArchive27.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap70);
        explodedArchive8.entries = asciiBytesMap70;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL78 = explodedArchive8.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
    }

    @Test
    public void test12023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12023");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        java.lang.String str12 = uRL9.getUserInfo();
        java.lang.String str13 = uRL9.getRef();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100" + "'", str15, "hi!://:100");
    }

    @Test
    public void test12024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12024");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getRef();
        java.lang.String str16 = uRL13.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.net.URL uRL33 = new java.net.URL(uRL27, "");
        java.lang.String str34 = uRL33.getPath();
        int int35 = uRL33.getDefaultPort();
        java.lang.String str36 = uRL33.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL47, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL(uRL33, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL63 = new java.net.URL(uRL13, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL64 = new java.net.URL("/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100", 10, "/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str65 = uRL64.getQuery();
        java.lang.String str66 = uRL64.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL64.toString(), "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100]:10/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100]:10/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100" + "'", str66, "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100]:10/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100");
    }

    @Test
    public void test12025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12025");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.io.File file7 = fileEntry2.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry2.name;
        java.io.File file9 = fileEntry2.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = file9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test12026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12026");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive0.entries;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
    }

    @Test
    public void test12027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12027");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        java.lang.String str39 = uRL37.getProtocol();
        java.lang.String str40 = uRL37.getQuery();
        java.lang.String str41 = uRL37.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str61 = explodedArchive60.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection62 = explodedArchive60.getEntries();
        java.util.jar.Manifest manifest63 = explodedArchive60.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.net.URL uRL66 = new java.net.URL(uRL52, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive68.getNestedArchives(entryFilter70);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive68.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive68.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive68.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL(uRL52, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL76 = new java.net.URL(uRL37, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.lang.String str77 = uRL37.getQuery();
        java.lang.String str78 = uRL37.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "archive" + "'", str61, "archive");
        org.junit.Assert.assertNotNull(entryCollection62);
        org.junit.Assert.assertNull(manifest63);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test12028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12028");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        int int28 = uRL9.getPort();
        java.lang.String str29 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getFile();
        int int41 = uRL39.getDefaultPort();
        java.lang.String str42 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        boolean boolean57 = uRL39.sameFile(uRL52);
        java.lang.String str58 = uRL52.getUserInfo();
        java.lang.String str59 = uRL52.getHost();
        java.lang.String str60 = uRL52.getProtocol();
        boolean boolean61 = uRL9.sameFile(uRL52);
        int int62 = uRL52.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test12029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12029");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/hi!]:0", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive", 97, "[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12030");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL9.getAuthority();
        int int17 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test12031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12031");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
    }

    @Test
    public void test12032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12032");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        explodedArchive11.filtered = false;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.lang.String str17 = explodedArchive11.toString();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
    }

    @Test
    public void test12033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12033");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive11.new FilteredURLStreamHandler();
        boolean boolean16 = explodedArchive11.filtered;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive11.getFilteredArchive(entryRenameFilter19);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(archive20);
    }

    @Test
    public void test12034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12034");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getFilteredArchive(entryRenameFilter44);
        java.util.jar.Manifest manifest46 = null;
        explodedArchive0.manifest = manifest46;
        java.util.jar.Manifest manifest48 = null;
        explodedArchive0.manifest = manifest48;
        java.io.File file50 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file50, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(archive45);
    }

    @Test
    public void test12035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12035");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/[/:100]:0", "hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
    }

    @Test
    public void test12036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12036");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(manifest10);
    }

    @Test
    public void test12037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12037");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.util.jar.Manifest manifest11 = explodedArchive0.getManifest();
        java.lang.Class<?> wildcardClass12 = explodedArchive0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test12038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12038");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = explodedArchive0.root;
        boolean boolean6 = explodedArchive0.filtered;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive15.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        java.util.jar.Manifest manifest19 = null;
        explodedArchive15.manifest = manifest19;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive15.new FilteredURLStreamHandler();
        java.io.File file22 = null;
        explodedArchive15.root = file22;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive15.getFilteredArchive(entryRenameFilter24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        explodedArchive26.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive26.getNestedArchives(entryFilter35);
        explodedArchive26.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive26.entries;
        explodedArchive15.entries = asciiBytesMap39;
        java.io.File file41 = null;
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        boolean boolean45 = explodedArchive43.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter46 = null;
        org.springframework.boot.loader.archive.Archive archive47 = explodedArchive43.getFilteredArchive(entryRenameFilter46);
        explodedArchive43.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive43.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap51);
        explodedArchive15.entries = asciiBytesMap51;
        explodedArchive0.entries = asciiBytesMap51;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archive25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(archive47);
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
    }

    @Test
    public void test12039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12039");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archive7);
    }

    @Test
    public void test12040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12040");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        int int29 = uRL28.getPort();
        java.lang.String str30 = uRL28.getRef();
        java.lang.String str31 = uRL28.getPath();
        java.lang.String str32 = uRL28.getProtocol();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!://:100" + "'", str31, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/archive" + "'", str32, "/archive");
    }

    @Test
    public void test12041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12041");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.getName();
        java.io.File file15 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = null;
        fileEntry4.name = asciiBytes16;
        java.io.File file18 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test12042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12042");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(archiveList10);
    }

    @Test
    public void test12043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12043");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        java.io.File file9 = fileEntry7.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry7.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = fileEntry7.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
    }

    @Test
    public void test12044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12044");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.io.File file14 = null;
        explodedArchive0.root = file14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(manifest10);
    }

    @Test
    public void test12045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12045");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive7.getNestedArchives(entryFilter14);
        java.io.File file16 = null;
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap27);
        explodedArchive7.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive7.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest32 = explodedArchive7.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.jar.Manifest manifest35 = null;
        explodedArchive33.manifest = manifest35;
        java.util.jar.Manifest manifest37 = explodedArchive33.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive33.entries;
        explodedArchive7.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive0.getNestedArchives(entryFilter41);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList42);
    }

    @Test
    public void test12046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12046");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getHost();
        java.lang.String str55 = uRL51.getPath();
        java.lang.String str56 = uRL51.getHost();
        java.lang.String str57 = uRL51.getPath();
        java.lang.String str58 = uRL51.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getQuery();
        int int70 = uRL68.getPort();
        java.lang.String str71 = uRL68.getFile();
        int int72 = uRL68.getDefaultPort();
        java.lang.String str73 = uRL68.getUserInfo();
        boolean boolean74 = uRL51.sameFile(uRL68);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI75 = uRL51.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test12047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12047");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getProtocol();
        int int32 = uRL9.getPort();
        java.lang.String str33 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str44 = uRL43.getQuery();
        java.lang.String str45 = uRL43.getHost();
        int int46 = uRL43.getPort();
        java.lang.String str47 = uRL43.getQuery();
        java.lang.String str48 = uRL43.getFile();
        java.lang.String str49 = uRL43.getRef();
        java.lang.String str50 = uRL43.getPath();
        int int51 = uRL43.getDefaultPort();
        java.lang.String str52 = uRL43.getQuery();
        java.net.URL uRL54 = new java.net.URL(uRL43, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        int int55 = uRL54.getDefaultPort();
        boolean boolean56 = uRL9.sameFile(uRL54);
        java.lang.String str57 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test12048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12048");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        explodedArchive11.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest17 = null;
        explodedArchive11.manifest = manifest17;
        java.lang.String str19 = explodedArchive11.toString();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
    }

    @Test
    public void test12049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12049");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/archive:///archive:0hi!://:100:///archive:10hi!://:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /archive:///archive:0hi!://:100:///archive:10hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12050");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getRef();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        int int39 = uRL37.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getQuery();
        java.lang.String str52 = uRL50.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL64 = new java.net.URL(uRL50, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL65 = new java.net.URL(uRL37, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str66 = uRL37.getPath();
        java.lang.String str67 = uRL37.getPath();
        java.lang.String str68 = uRL37.getUserInfo();
        java.lang.String str69 = uRL37.getHost();
        boolean boolean70 = uRL27.sameFile(uRL37);
        java.lang.String str71 = uRL27.getProtocol();
        int int72 = uRL27.getDefaultPort();
        java.io.File file78 = null;
        java.io.File file79 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter82 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList83 = explodedArchive80.getNestedArchives(entryFilter82);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter84 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList85 = explodedArchive80.getNestedArchives(entryFilter84);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap86 = explodedArchive80.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file79, asciiBytesMap86);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap88 = explodedArchive87.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = new org.springframework.boot.loader.archive.ExplodedArchive(file78, asciiBytesMap88);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler90 = explodedArchive89.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler91 = explodedArchive89.new FilteredURLStreamHandler();
        java.net.URL uRL92 = new java.net.URL(":100", "hi!://[hi!://:100/hi!]:0archive://:10:100", 100, "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        java.net.URL uRL93 = new java.net.URL(uRL27, "", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        java.net.URL uRL95 = new java.net.URL(uRL93, "/://[hi!://:100/:100]:100/hi!://:100");
        java.lang.String str96 = uRL93.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(archiveList83);
        org.junit.Assert.assertNotNull(archiveList85);
        org.junit.Assert.assertNotNull(asciiBytesMap86);
        org.junit.Assert.assertNotNull(asciiBytesMap88);
        org.junit.Assert.assertEquals(uRL92.toString(), ":100://[hi!://[hi!://:100/hi!]:0archive://:10:100]:100/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL93.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!" + "'", str96, "hi!");
    }

    @Test
    public void test12051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12051");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL42 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str43 = uRL42.getRef();
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive:///archive:0hi!://:100", "/archive:///archive:0hi!://:100", (int) (byte) 10, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL42, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str66 = uRL42.getQuery();
        java.lang.String str67 = uRL42.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str82 = explodedArchive81.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap83 = null;
        explodedArchive81.entries = asciiBytesMap83;
        java.util.jar.Manifest manifest85 = null;
        explodedArchive81.manifest = manifest85;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler87 = explodedArchive81.new FilteredURLStreamHandler();
        java.net.URL uRL88 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL89 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL90 = new java.net.URL("hi!://:100", "hi!://:100/hi!", 0, "[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL91 = new java.net.URL(uRL42, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL92 = new java.net.URL("[hi!://:100/hi!]:10", "hi!://:100/hi!", (int) 'a', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        int int93 = uRL92.getPort();
        java.lang.String str94 = uRL92.getUserInfo();
        java.lang.String str95 = uRL92.getProtocol();
        java.lang.String str96 = uRL92.getPath();
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive:///archive:0hi!://:100://[/archive:///archive:0hi!://:100]:10hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "archive" + "'", str82, "archive");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100://[hi!://:100/hi!]:0[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/:100");
        org.junit.Assert.assertEquals(uRL92.toString(), "[hi!://:100/hi!]:10://[hi!://:100/hi!]:97hi!://:100/:100");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 97 + "'", int93 == 97);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[hi!://:100/hi!]:10" + "'", str95, "[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!://:100/:100" + "'", str96, "hi!://:100/:100");
    }

    @Test
    public void test12052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12052");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "[hi!://:100/hi!]", (int) (byte) 0, "archive://[/hi!://:100/archive]:32");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12053");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL(uRL23, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getAuthority();
        java.lang.String str32 = uRL30.getAuthority();
        boolean boolean33 = uRL9.sameFile(uRL30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL44.getFile();
        int int46 = uRL44.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive52.getEntries();
        java.util.jar.Manifest manifest55 = explodedArchive52.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.getQuery();
        java.lang.String str59 = uRL57.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str66 = explodedArchive65.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive65.getEntries();
        java.util.jar.Manifest manifest68 = explodedArchive65.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL71 = new java.net.URL(uRL57, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL72 = new java.net.URL(uRL44, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL73 = new java.net.URL(uRL30, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        int int74 = uRL73.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + ":100" + "'", str31, ":100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ":100" + "'", str32, ":100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNull(manifest68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
    }

    @Test
    public void test12054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12054");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = explodedArchive0.root;
        java.io.File file8 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.lang.Class<?> wildcardClass11 = archiveList10.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test12055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12055");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive21.new FilteredURLStreamHandler();
        boolean boolean23 = explodedArchive21.filtered;
        explodedArchive21.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive26.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive26.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = null;
        fileEntry32.name = asciiBytes33;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = fileEntry32.getName();
        java.io.File file36 = null;
        fileEntry32.file = file36;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive38 = explodedArchive21.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(asciiBytes35);
    }

    @Test
    public void test12056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12056");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        java.util.jar.Manifest manifest8 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        java.io.File file13 = fileEntry12.getFile();
        java.io.File file14 = fileEntry12.file;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test12057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12057");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL29.getUserInfo();
        java.lang.String str31 = uRL29.getFile();
        java.lang.String str32 = uRL29.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/:100" + "'", str31, "/:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/:100" + "'", str32, "/:100");
    }

    @Test
    public void test12058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12058");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest16 = explodedArchive11.getManifest();
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.io.File file19 = explodedArchive11.root;
        java.util.jar.Manifest manifest20 = explodedArchive11.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive11.entries;
        java.io.File file22 = explodedArchive11.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive11.entries;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
    }

    @Test
    public void test12059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12059");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        java.util.jar.Manifest manifest34 = explodedArchive31.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL23, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL23.getAuthority();
        java.lang.String str39 = uRL23.getRef();
        java.lang.String str40 = uRL23.getProtocol();
        java.lang.String str41 = uRL23.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getPath();
        java.lang.String str53 = uRL51.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive71.getNestedArchives(entryFilter73);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection75 = explodedArchive71.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive71.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL78 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.URL uRL79 = new java.net.URL(uRL65, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        boolean boolean80 = uRL23.sameFile(uRL79);
        java.lang.String str81 = uRL23.getProtocol();
        java.lang.String str82 = uRL23.getRef();
        boolean boolean83 = uRL12.sameFile(uRL23);
        java.lang.String str84 = uRL12.getAuthority();
        java.lang.String str85 = uRL12.getPath();
        int int86 = uRL12.getPort();
        java.net.URI uRI87 = uRL12.toURI();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ":100" + "'", str38, ":100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNotNull(entryCollection75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertEquals(uRL78.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ":0" + "'", str84, ":0");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!://:100/hi!" + "'", str85, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(uRI87);
    }

    @Test
    public void test12060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12060");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest16 = null;
        explodedArchive11.manifest = manifest16;
        java.io.File file18 = null;
        explodedArchive11.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive20.new FileEntry();
        boolean boolean25 = explodedArchive20.filtered;
        boolean boolean26 = explodedArchive20.filtered;
        java.util.jar.Manifest manifest27 = null;
        explodedArchive20.manifest = manifest27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive20.new FileEntry();
        java.lang.String str30 = explodedArchive20.toString();
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        explodedArchive32.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive32.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive32.getNestedArchives(entryFilter40);
        java.util.jar.Manifest manifest42 = explodedArchive32.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive32.entries;
        boolean boolean44 = explodedArchive32.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap45);
        explodedArchive20.entries = asciiBytesMap45;
        explodedArchive11.entries = asciiBytesMap45;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
    }

    @Test
    public void test12061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12061");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive43.getNestedArchives(entryFilter44);
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.jar.Manifest manifest49 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive50.entries;
        java.lang.String str57 = explodedArchive50.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        explodedArchive58.filtered = false;
        java.util.jar.Manifest manifest64 = explodedArchive58.manifest;
        java.io.File file65 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive66.getNestedArchives(entryFilter70);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive66.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive73.entries;
        explodedArchive58.entries = asciiBytesMap74;
        explodedArchive50.entries = asciiBytesMap74;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive50.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry78 = explodedArchive50.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive79 = explodedArchive43.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertNotNull(entryCollection77);
    }

    @Test
    public void test12062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12062");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.lang.String str19 = explodedArchive11.toString();
        java.util.jar.Manifest manifest20 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive11.new FileEntry();
        java.io.File file22 = fileEntry21.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = fileEntry21.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = fileEntry21.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(asciiBytes23);
        org.junit.Assert.assertNull(asciiBytes24);
    }

    @Test
    public void test12063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12063");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive29.getNestedArchives(entryFilter33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive29.entries;
        explodedArchive29.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter38 = null;
        org.springframework.boot.loader.archive.Archive archive39 = explodedArchive29.getFilteredArchive(entryRenameFilter38);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertNotNull(archive39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!://:100/hi!");
    }

    @Test
    public void test12064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12064");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.net.URL uRL44 = new java.net.URL(uRL41, "hi!");
        int int45 = uRL41.getDefaultPort();
        java.lang.String str46 = uRL41.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test12065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12065");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest13);
    }

    @Test
    public void test12066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12066");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test12067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12067");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        boolean boolean6 = explodedArchive0.filtered;
        java.io.File file7 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = null;
        fileEntry8.file = file9;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test12068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12068");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL9, "/hi!");
        java.lang.String str46 = uRL9.getQuery();
        java.lang.String str47 = uRL9.getRef();
        java.lang.String str48 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test12069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12069");
        java.io.File file8 = null;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive19.new FileEntry();
        explodedArchive19.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter23 = null;
        org.springframework.boot.loader.archive.Archive archive24 = explodedArchive19.getFilteredArchive(entryRenameFilter23);
        java.lang.String str25 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!:1", "hi!://:100/archive:///archive:1hi!://:100/archive", (int) (short) -1, "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.net.URL uRL28 = new java.net.URL("hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0", "/hi!://hi!:1hi!", (int) (short) 0, "/:52", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        int int41 = uRL38.getPort();
        java.lang.String str42 = uRL38.toExternalForm();
        java.lang.String str43 = uRL38.getRef();
        java.lang.String str44 = uRL38.getPath();
        java.net.URL uRL46 = new java.net.URL(uRL38, "[://[archive://:10archive]:100archive://:10archive]:0");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getQuery();
        java.lang.String str58 = uRL56.getRef();
        java.lang.String str59 = uRL56.getRef();
        java.lang.String str60 = uRL56.toExternalForm();
        int int61 = uRL56.getDefaultPort();
        boolean boolean62 = uRL38.sameFile(uRL56);
        boolean boolean63 = uRL28.sameFile(uRL56);
        java.lang.String str64 = uRL56.toExternalForm();
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archive24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!:1://[hi!://:100/archive:///archive:1hi!://:100/archive][hi!://:100/:100]:100");
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0://[/hi!://hi!:1hi!]:0/:52");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!://:100" + "'", str42, "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!://:100" + "'", str60, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!://:100" + "'", str64, "hi!://:100");
    }

    @Test
    public void test12070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12070");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL51 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL52 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = null;
        explodedArchive57.entries = asciiBytesMap59;
        java.util.jar.Manifest manifest61 = null;
        explodedArchive57.manifest = manifest61;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        int int65 = uRL64.getDefaultPort();
        int int66 = uRL64.getPort();
        boolean boolean67 = uRL52.sameFile(uRL64);
        java.lang.String str68 = uRL64.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL51.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 52 + "'", int66 == 52);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test12071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12071");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getProtocol();
        java.lang.String str32 = uRL9.getRef();
        java.lang.String str33 = uRL9.toExternalForm();
        java.lang.String str34 = uRL9.getFile();
        java.net.URL uRL36 = new java.net.URL(uRL9, "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!://:100" + "'", str33, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test12072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12072");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        java.lang.String str20 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getQuery();
        java.lang.String str47 = uRL45.getPath();
        boolean boolean48 = uRL35.sameFile(uRL45);
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL45, "", uRLStreamHandler50);
        int int52 = uRL51.getPort();
        java.lang.String str53 = uRL51.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = null;
        explodedArchive63.entries = asciiBytesMap65;
        java.util.jar.Manifest manifest67 = null;
        explodedArchive63.manifest = manifest67;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL71 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL72 = new java.net.URL(uRL51, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL73 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/:100", (int) (byte) 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL74 = new java.net.URL(uRL17, "[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.jar.Manifest manifest78 = null;
        explodedArchive76.manifest = manifest78;
        java.io.File file80 = explodedArchive76.root;
        explodedArchive76.filtered = false;
        explodedArchive76.filtered = true;
        java.io.File file85 = explodedArchive76.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry86 = explodedArchive76.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler87 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL88 = new java.net.URL(uRL17, "hi!://[:100]:52hi!", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL89 = new java.net.URL("hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "[hi!://:100/:100]://[hi!://:100/://[hi!://:100/:100]:100/hi!://:100]:0hi!://:100/hi!://:100/hi!", 97, "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL90 = new java.net.URL("/hi!://:100/hi!", "/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (-1), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!]:32hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100://[hi!://:100/:100]://[hi!://:100/://[hi!://:100/:100]:100/hi!://:100]:0hi!://:100/hi!://:100/hi!:97hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals(uRL90.toString(), "/hi!://:100/hi!://[/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!]:32hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
    }

    @Test
    public void test12073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12073");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getFile();
        java.net.URL uRL22 = new java.net.URL(uRL16, "archive");
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL16, "[/hi!://:100/archive]", uRLStreamHandler24);
        int int26 = uRL16.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection27 = uRL16.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
    }

    @Test
    public void test12074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12074");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL68 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL69 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str70 = uRL69.getProtocol();
        int int71 = uRL69.getDefaultPort();
        boolean boolean72 = uRL9.sameFile(uRL69);
        int int73 = uRL69.getPort();
        java.lang.String str74 = uRL69.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL68.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test12075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12075");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        java.io.File file15 = fileEntry12.file;
        java.io.File file16 = fileEntry12.file;
        java.io.File file17 = fileEntry12.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test12076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12076");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive");
        java.lang.String str15 = uRL14.getRef();
        java.lang.String str16 = uRL14.getPath();
        java.lang.String str17 = uRL14.getAuthority();
        int int18 = uRL14.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!://:100/hi!://:100/archive" + "'", str16, "/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test12077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12077");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100]:97/hi!://:100/archive", "/archive:0", "[hi!://:100/hi!]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /archive://[hi!://:100/hi!]:1/hi!://[hi!://:100]:97/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12078");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getHost();
        java.lang.String str18 = uRL9.getProtocol();
        java.lang.String str19 = uRL9.toExternalForm();
        java.lang.String str20 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.net.URL uRL32 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str33 = uRL9.getAuthority();
        java.lang.String str34 = uRL9.getQuery();
        int int35 = uRL9.getPort();
        java.lang.String str36 = uRL9.getAuthority();
        int int37 = uRL9.getDefaultPort();
        java.lang.String str38 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100" + "'", str19, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + ":100" + "'", str33, ":100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ":100" + "'", str36, ":100");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
    }

    @Test
    public void test12079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12079");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        explodedArchive0.entries = asciiBytesMap2;
        java.lang.String str4 = explodedArchive0.toString();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        java.io.File file7 = explodedArchive0.root;
        java.io.File file8 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "archive" + "'", str4, "archive");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test12080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12080");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getPath();
        java.net.URL uRL43 = new java.net.URL(uRL22, "[hi!://:100/hi!]");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getPath();
        java.lang.String str57 = uRL54.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive59.getNestedArchives(entryFilter61);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive59.getNestedArchives(entryFilter63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL54, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL43, "hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str69 = uRL68.getPath();
        java.net.URL uRL71 = new java.net.URL(uRL68, "/://[archive://:10archive]:100archive://:10archive");
        java.lang.String str72 = uRL71.toExternalForm();
        java.lang.String str73 = uRL71.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/[hi!://:100/hi!://:100/hi!://:100/archive" + "'", str69, "/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!://:100/://[archive://:10archive]:100archive://:10archive" + "'", str72, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!://:100/://[archive://:10archive]:100archive://:10archive" + "'", str73, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test12081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12081");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str37 = uRL36.getQuery();
        java.lang.String str38 = uRL36.getFile();
        java.lang.String str39 = uRL36.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getPath();
        java.lang.String str52 = uRL50.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL64 = new java.net.URL(uRL50, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive70.getNestedArchives(entryFilter72);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive70.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive70.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive70.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL(uRL36, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL80 = new java.net.URL("[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "[:100]:52", (int) '#', "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL81 = new java.net.URL("", "/archive://[hi!://:100/hi!]:1/hi!", (int) (byte) 0, "[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream82 = uRL81.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive://:10archive" + "'", str39, "archive://:10archive");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertEquals(uRL77.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL79.toString(), "archive://:10/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL80.toString(), "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[:100]:52:35/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]");
    }

    @Test
    public void test12082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12082");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry7.name;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test12083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12083");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12084");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL9.getAuthority();
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap40);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL46 = new java.net.URL(uRL9, "/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str47 = uRL9.getHost();
        int int48 = uRL9.getPort();
        java.lang.String str49 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertEquals(uRL43.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL45.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 100 + "'", int48 == 100);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test12085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12085");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(archiveList8);
    }

    @Test
    public void test12086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12086");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://[archive://:10archive]:10/[/hi!://:100/archive]://[:100]:52:100/:100", "/hi!://:100/hi!://:100", 35, "/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://[archive://:10archive]:10/[/hi!://:100/archive]://[:100]:52:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12087");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test12088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12088");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.lang.String str14 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(archive16);
    }

    @Test
    public void test12089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12089");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL64.toExternalForm();
        java.lang.String str68 = uRL64.toExternalForm();
        java.lang.String str69 = uRL64.getAuthority();
        java.net.URL uRL71 = new java.net.URL(uRL64, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100" + "'", str67, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!://:100" + "'", str68, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ":100" + "'", str69, ":100");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100");
    }

    @Test
    public void test12090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12090");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[archive://:10archive]:1", "archive://:10:100", "[hi!://:100/hi!]:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [archive://:10archive]:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12091");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive15.new FileEntry();
        explodedArchive15.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive15.getFilteredArchive(entryRenameFilter19);
        java.lang.String str21 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("/[hi!://:100/hi!]", "hi!://:100/[hi!://:100/hi!]", (int) ' ', "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        int int35 = uRL33.getDefaultPort();
        java.lang.String str36 = uRL33.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.lang.String str50 = uRL46.toExternalForm();
        boolean boolean51 = uRL33.sameFile(uRL46);
        java.lang.String str52 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL(uRL46, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getUserInfo();
        boolean boolean61 = uRL23.sameFile(uRL59);
        java.lang.String str62 = uRL23.getPath();
        java.lang.String str63 = uRL23.getAuthority();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertEquals(uRL23.toString(), "/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]:32hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100" + "'", str50, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100" + "'", str62, "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!://:100/[hi!://:100/hi!]]:32" + "'", str63, "[hi!://:100/[hi!://:100/hi!]]:32");
    }

    @Test
    public void test12092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12092");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("/archive:///archive:0hi!://:100", "/archive", 10, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.net.URL uRL15 = new java.net.URL("/:52", "hi!://[hi!://:100/hi!]:0archive://:10:100", 0, "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str16 = uRL15.getUserInfo();
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals(uRL14.toString(), "/archive:///archive:0hi!://:100:///archive:10hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "/:52://[hi!://[hi!://:100/hi!]:0archive://:10:100]:0hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test12093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12093");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
        java.lang.String str13 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        explodedArchive14.root = file23;
        java.io.File file25 = null;
        explodedArchive14.root = file25;
        java.io.File file27 = explodedArchive14.root;
        java.lang.String str28 = explodedArchive14.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive14.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        explodedArchive31.filtered = false;
        java.util.jar.Manifest manifest39 = explodedArchive31.getManifest();
        java.io.File file40 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive41.getNestedArchives(entryFilter43);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive41.getNestedArchives(entryFilter45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive41.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive48.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        explodedArchive48.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive48.entries;
        explodedArchive31.entries = asciiBytesMap53;
        explodedArchive14.entries = asciiBytesMap53;
        explodedArchive0.entries = asciiBytesMap53;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
    }

    @Test
    public void test12094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12094");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        int int14 = uRL9.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL42 = new java.net.URL(uRL28, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str43 = uRL28.getAuthority();
        java.lang.String str44 = uRL28.getUserInfo();
        java.lang.String str45 = uRL28.getRef();
        boolean boolean46 = uRL17.sameFile(uRL28);
        java.lang.String str47 = uRL17.toExternalForm();
        java.lang.String str48 = uRL17.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI49 = uRL17.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://:100/hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!://:100/hi!://:100/hi!://:100" + "'", str47, "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ":100" + "'", str48, ":100");
    }

    @Test
    public void test12095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12095");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!://hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://:100/hi!://:100/hi!://hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12096");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("[hi!://:100/hi!://:100/hi!://:100/hi!://:100]:10");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12097");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getFile();
        int int14 = uRL12.getDefaultPort();
        java.lang.String str15 = uRL12.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream16 = uRL12.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100/hi!" + "'", str15, "hi!://:100/hi!");
    }

    @Test
    public void test12098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12098");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12099");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive10.entries = asciiBytesMap14;
        java.io.File file16 = explodedArchive10.root;
        java.io.File file17 = explodedArchive10.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        explodedArchive10.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap24);
        explodedArchive0.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter34 = null;
        org.springframework.boot.loader.archive.Archive archive35 = explodedArchive31.getFilteredArchive(entryRenameFilter34);
        java.io.File file36 = explodedArchive31.root;
        java.lang.String str37 = explodedArchive31.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap38);
        java.util.jar.Manifest manifest41 = null;
        explodedArchive40.manifest = manifest41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive43.getNestedArchives(entryFilter50);
        java.io.File file52 = null;
        explodedArchive43.root = file52;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive43.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive43.new FilteredURLStreamHandler();
        java.io.File file56 = null;
        explodedArchive43.root = file56;
        java.util.jar.Manifest manifest58 = explodedArchive43.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive43.entries;
        explodedArchive40.entries = asciiBytesMap59;
        explodedArchive0.entries = asciiBytesMap59;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(archive35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
    }

    @Test
    public void test12100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive0.new FileEntry();
        java.io.File file15 = fileEntry14.file;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test12101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12101");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest11 = explodedArchive8.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL12 = explodedArchive8.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(manifest11);
    }

    @Test
    public void test12102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12102");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: ://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12103");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        boolean boolean6 = explodedArchive0.filtered;
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(archive12);
    }

    @Test
    public void test12104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12104");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive22.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive22.getNestedArchives(entryFilter25);
        java.util.jar.Manifest manifest27 = explodedArchive22.manifest;
        java.io.File file28 = null;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap38);
        explodedArchive39.filtered = true;
        java.io.File file42 = null;
        explodedArchive39.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = explodedArchive39.new FileEntry();
        java.io.File file45 = null;
        fileEntry44.file = file45;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = fileEntry44.name;
        java.io.File file48 = fileEntry44.getFile();
        java.io.File file49 = null;
        fileEntry44.file = file49;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive51 = explodedArchive22.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNull(asciiBytes47);
        org.junit.Assert.assertNull(file48);
    }

    @Test
    public void test12105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12105");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive8.new FileEntry();
        java.lang.String str13 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive8.new FileEntry();
        explodedArchive8.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL18 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.net.URL uRL19 = new java.net.URL("hi!://:100/hi!://:100", "hi!://:100/hi!", (int) '4', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler17);
        java.lang.String str20 = uRL19.getQuery();
        java.io.File file25 = null;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive36.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("[hi!://:100/hi!]", "hi!://:100/hi!://:100/hi!://hi!", (int) (short) 0, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        boolean boolean40 = uRL19.sameFile(uRL39);
        java.net.URL uRL42 = new java.net.URL(uRL19, "[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100");
        java.lang.String str43 = uRL19.getFile();
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals(uRL18.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertEquals(uRL39.toString(), "[hi!://:100/hi!]://[hi!://:100/hi!://:100/hi!://hi!]:0");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str43, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test12106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12106");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str41 = uRL40.getPath();
        boolean boolean42 = uRL9.sameFile(uRL40);
        java.lang.String str43 = uRL40.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getFile();
        java.lang.String str56 = uRL54.getQuery();
        java.lang.String str57 = uRL54.getRef();
        java.net.URL uRL59 = new java.net.URL(uRL54, "hi!://:100/hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getQuery();
        int int71 = uRL69.getPort();
        java.lang.String str72 = uRL69.getQuery();
        boolean boolean73 = uRL54.sameFile(uRL69);
        java.io.File file75 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive76.getNestedArchives(entryFilter78);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter80 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList81 = explodedArchive76.getNestedArchives(entryFilter80);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap82 = explodedArchive76.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file75, asciiBytesMap82);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter84 = null;
        org.springframework.boot.loader.archive.Archive archive85 = explodedArchive83.getFilteredArchive(entryRenameFilter84);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry86 = explodedArchive83.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler87 = explodedArchive83.new FilteredURLStreamHandler();
        java.net.URL uRL88 = new java.net.URL(uRL69, "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL89 = new java.net.URL(uRL40, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.lang.String str90 = uRL40.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100" + "'", str41, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/archive" + "'", str43, "/archive");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(archiveList81);
        org.junit.Assert.assertNotNull(asciiBytesMap82);
        org.junit.Assert.assertNotNull(archive85);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertEquals(uRL89.toString(), "/archive:///archive:0hi!://[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "/archive:///archive:0hi!://:100" + "'", str90, "/archive:///archive:0hi!://:100");
    }

    @Test
    public void test12107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12107");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getAuthority();
        int int19 = uRL16.getPort();
        java.lang.String str20 = uRL16.getProtocol();
        java.net.URL uRL22 = new java.net.URL(uRL16, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getQuery();
        java.lang.String str34 = uRL32.getRef();
        java.lang.String str35 = uRL32.getRef();
        java.net.URL uRL37 = new java.net.URL(uRL32, "hi!");
        java.lang.String str38 = uRL37.getRef();
        java.lang.String str39 = uRL37.getRef();
        java.lang.String str40 = uRL37.getUserInfo();
        boolean boolean41 = uRL22.sameFile(uRL37);
        java.lang.String str42 = uRL22.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test12108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12108");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getFile();
        java.lang.String str30 = uRL28.getQuery();
        java.lang.String str31 = uRL28.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection32 = filteredURLStreamHandler18.openConnection(uRL28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test12109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12109");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(archive12);
    }

    @Test
    public void test12110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12110");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        explodedArchive9.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive9.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive9.getNestedArchives(entryFilter17);
        java.util.jar.Manifest manifest19 = explodedArchive9.getManifest();
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        explodedArchive21.filtered = false;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive21.manifest = manifest29;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive32.getNestedArchives(entryFilter39);
        java.io.File file41 = null;
        java.io.File file42 = null;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap52);
        explodedArchive32.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive56.entries;
        explodedArchive21.entries = asciiBytesMap57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap57);
        explodedArchive9.entries = asciiBytesMap57;
        java.util.jar.Manifest manifest61 = explodedArchive9.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter62 = null;
        org.springframework.boot.loader.archive.Archive archive63 = explodedArchive9.getFilteredArchive(entryRenameFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive9.entries;
        boolean boolean65 = explodedArchive9.filtered;
        boolean boolean66 = explodedArchive9.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive9.new FileEntry();
        java.io.File file68 = fileEntry67.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive69 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertNotNull(archive63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(file68);
    }

    @Test
    public void test12111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12111");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str6 = explodedArchive5.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive5.getEntries();
        java.io.File file8 = explodedArchive5.root;
        java.util.jar.Manifest manifest9 = explodedArchive5.getManifest();
        java.io.File file10 = null;
        explodedArchive5.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive5.new FileEntry();
        java.lang.String str13 = explodedArchive5.toString();
        java.io.File file14 = null;
        explodedArchive5.root = file14;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap16);
        java.util.jar.Manifest manifest18 = explodedArchive17.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        explodedArchive17.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("[:10]", "[:100]:100", (int) ' ', "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL23.toString(), "[:10]://[:100]:100:32");
    }

    @Test
    public void test12112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12112");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getDefaultPort();
        java.lang.String str25 = uRL23.getQuery();
        java.net.URL uRL27 = new java.net.URL(uRL23, "/hi!://:100/hi!://:100/:100");
        java.lang.String str28 = uRL23.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test12113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12113");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12114");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.toExternalForm();
        java.net.URL uRL14 = new java.net.URL(uRL9, "");
        java.lang.String str15 = uRL14.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getFile();
        int int27 = uRL25.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL52 = new java.net.URL(uRL38, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL53 = new java.net.URL(uRL25, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str54 = uRL53.getUserInfo();
        java.net.URL uRL56 = new java.net.URL(uRL53, "hi!");
        java.lang.String str57 = uRL53.getFile();
        boolean boolean58 = uRL14.sameFile(uRL53);
        int int59 = uRL14.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100" + "'", str12, "hi!://:100");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/archive" + "'", str57, "/archive");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
    }

    @Test
    public void test12115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12115");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry7.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test12116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12116");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test12117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12117");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[hi!://:100/:100]", "/hi!://:100/hi!://:100/hi!://:100/hi!://:100", "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/:100]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12118");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.net.URL uRL20 = new java.net.URL(uRL17, "/://[archive://:10archive]:100archive://:10archive");
        java.lang.String str21 = uRL17.getProtocol();
        java.lang.String str22 = uRL17.getProtocol();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals(uRL17.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str18, "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL20.toString(), "://[archive://:10archive]:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test12119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12119");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
    }

    @Test
    public void test12120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12120");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getPath();
        java.lang.String str31 = uRL29.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL15, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive54.new FileEntry();
        java.lang.String str59 = explodedArchive54.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive54.new FileEntry();
        explodedArchive54.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://:100", "hi!://:100/hi!", (int) '4', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL(uRL44, "/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str67 = uRL44.getQuery();
        java.lang.String str68 = uRL44.getPath();
        java.lang.String str69 = uRL44.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive71.getEntries();
        java.io.File file74 = explodedArchive71.root;
        java.util.jar.Manifest manifest75 = explodedArchive71.getManifest();
        java.io.File file76 = null;
        explodedArchive71.root = file76;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry78 = explodedArchive71.new FileEntry();
        java.util.jar.Manifest manifest79 = explodedArchive71.manifest;
        explodedArchive71.filtered = true;
        java.io.File file82 = explodedArchive71.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL(uRL44, "hi!://:100/hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.lang.String str85 = uRL84.getPath();
        java.lang.String str86 = uRL84.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection87 = uRL84.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!://:100/hi!://:100/:100" + "'", str85, "/hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test12121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12121");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getFile();
        int int24 = uRL22.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL22, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str51 = uRL22.toExternalForm();
        java.lang.String str52 = uRL22.getRef();
        java.lang.String str53 = uRL22.getPath();
        java.lang.String str54 = uRL22.getPath();
        java.lang.String str55 = uRL22.getHost();
        int int56 = uRL22.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        java.util.jar.Manifest manifest65 = null;
        explodedArchive58.manifest = manifest65;
        java.io.File file67 = null;
        explodedArchive58.root = file67;
        java.io.File file69 = null;
        explodedArchive58.root = file69;
        java.io.File file71 = explodedArchive58.root;
        java.io.File file72 = null;
        explodedArchive58.root = file72;
        java.lang.String str74 = explodedArchive58.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL(uRL22, "hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.net.URL uRL77 = new java.net.URL(uRL11, "hi!://[:100]:52hi!", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!://:100" + "'", str51, "hi!://:100");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "archive" + "'", str74, "archive");
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://[:100]:52hi!");
    }

    @Test
    public void test12122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12122");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test12123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12123");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getHost();
        int int29 = uRL26.getPort();
        java.lang.String str30 = uRL26.getQuery();
        java.net.URL uRL32 = new java.net.URL(uRL26, "");
        java.lang.String str33 = uRL32.getPath();
        int int34 = uRL32.getDefaultPort();
        java.lang.String str35 = uRL32.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL60 = new java.net.URL(uRL46, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL61 = new java.net.URL(uRL32, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL62 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str63 = uRL9.getRef();
        java.lang.String str64 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!://:100" + "'", str64, "hi!://:100");
    }

    @Test
    public void test12124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12124");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive15.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive15.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("archive://:10:100", "/archive:///archive:0hi!://:100", (int) (byte) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        int int22 = uRL21.getDefaultPort();
        java.lang.String str23 = uRL21.toExternalForm();
        int int24 = uRL21.getPort();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals(uRL21.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive" + "'", str23, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test12125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12125");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        java.net.URL uRL29 = new java.net.URL(uRL9, "hi!://:100/hi!://:100");
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getFile();
        java.net.URL uRL33 = new java.net.URL(uRL29, "/hi!:1");
        java.lang.String str34 = uRL29.getQuery();
        java.lang.String str35 = uRL29.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!://:100/hi!://:100" + "'", str31, "/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test12126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12126");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.getName();
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test12127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12127");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
    }

    @Test
    public void test12128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12128");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        boolean boolean14 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = null;
        explodedArchive15.entries = asciiBytesMap19;
        boolean boolean21 = explodedArchive15.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive15.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = fileEntry22.name;
        java.io.File file24 = null;
        fileEntry22.file = file24;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = fileEntry22.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = fileEntry22.getName();
        java.io.File file28 = null;
        fileEntry22.file = file28;
        java.io.File file30 = null;
        fileEntry22.file = file30;
        java.io.File file32 = fileEntry22.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive33 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(asciiBytes23);
        org.junit.Assert.assertNull(asciiBytes26);
        org.junit.Assert.assertNull(asciiBytes27);
        org.junit.Assert.assertNull(file32);
    }

    @Test
    public void test12129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12129");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.getRef();
        java.net.URL uRL29 = new java.net.URL(uRL23, "hi!://:100/hi!://:100");
        java.lang.String str30 = uRL23.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test12130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12130");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        java.lang.String str18 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        explodedArchive11.filtered = true;
        java.lang.String str22 = explodedArchive11.toString();
        java.util.jar.Manifest manifest23 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive11.getFilteredArchive(entryRenameFilter24);
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file26, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNotNull(archive25);
    }

    @Test
    public void test12131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12131");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL37 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL38 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str39 = uRL38.getRef();
        java.net.URL uRL41 = new java.net.URL(uRL38, "hi!://hi!:1hi!");
        int int42 = uRL41.getDefaultPort();
        java.lang.String str43 = uRL41.toExternalForm();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://hi!:1hi!" + "'", str43, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://hi!:1hi!");
    }

    @Test
    public void test12132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12132");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getAuthority();
        java.lang.String str41 = uRL9.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test12133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12133");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.lang.String str13 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive19.manifest = manifest26;
        java.io.File file28 = null;
        explodedArchive19.root = file28;
        java.io.File file30 = null;
        explodedArchive19.root = file30;
        java.io.File file32 = explodedArchive19.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!://:100/:100", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (short) 0, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL9, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL9.toExternalForm();
        java.lang.String str37 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/:100://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!://:100" + "'", str36, "hi!://:100");
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test12134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12134");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.name;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test12135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12135");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.lang.String str12 = explodedArchive0.toString();
        java.lang.String str13 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
    }

    @Test
    public void test12136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12136");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getPath();
        boolean boolean40 = uRL27.sameFile(uRL37);
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL37, "", uRLStreamHandler42);
        int int44 = uRL43.getPort();
        java.lang.String str45 = uRL43.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = null;
        explodedArchive55.entries = asciiBytesMap57;
        java.util.jar.Manifest manifest59 = null;
        explodedArchive55.manifest = manifest59;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL(uRL43, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/:100", (int) (byte) 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL66 = new java.net.URL(uRL9, "[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        int int67 = uRL66.getDefaultPort();
        java.lang.Class[] classArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = uRL66.getContent(classArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/[hi!://:100/hi!]:0");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test12137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12137");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getPath();
        java.net.URL uRL43 = new java.net.URL(uRL22, "[hi!://:100/hi!]");
        int int44 = uRL43.getPort();
        java.lang.String str45 = uRL43.getFile();
        java.lang.String str46 = uRL43.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection47 = uRL43.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/[hi!://:100/hi!]" + "'", str45, "/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ":100" + "'", str46, ":100");
    }

    @Test
    public void test12138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12138");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getAuthority();
        java.lang.String str25 = uRL23.getRef();
        int int26 = uRL23.getDefaultPort();
        java.lang.String str27 = uRL23.toExternalForm();
        java.lang.String str28 = uRL23.getPath();
        java.lang.String str29 = uRL23.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100/hi!://:100" + "'", str27, "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/hi!://:100" + "'", str28, "/hi!://:100");
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test12139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12139");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive", "[hi!://:100/:100]://[hi!://:100/://[hi!://:100/:100]:100/hi!://:100]:0hi!://:100/hi!://:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12140");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        int int42 = uRL9.getDefaultPort();
        java.lang.String str43 = uRL9.getRef();
        java.lang.String str44 = uRL9.getHost();
        java.lang.String str45 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getQuery();
        java.lang.String str57 = uRL55.getRef();
        int int58 = uRL55.getPort();
        java.lang.String str59 = uRL55.toExternalForm();
        int int60 = uRL55.getPort();
        java.lang.String str61 = uRL55.getProtocol();
        boolean boolean62 = uRL9.equals((java.lang.Object) str61);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!://:100" + "'", str59, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test12141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12141");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive2.entries = asciiBytesMap6;
        java.io.File file8 = explodedArchive2.root;
        java.io.File file9 = explodedArchive2.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive20.getNestedArchives(entryFilter27);
        java.io.File file29 = null;
        explodedArchive20.root = file29;
        java.io.File file31 = null;
        explodedArchive20.root = file31;
        java.io.File file33 = explodedArchive20.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive20.entries;
        explodedArchive19.entries = asciiBytesMap34;
        java.util.jar.Manifest manifest36 = explodedArchive19.manifest;
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive19.buildEntries(file37, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNull(manifest36);
    }

    @Test
    public void test12142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12142");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL66.getProtocol();
        java.lang.String str68 = uRL66.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!://:100/:100" + "'", str68, "hi!://:100/:100");
    }

    @Test
    public void test12143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12143");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive19.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive19.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archiveList24);
    }

    @Test
    public void test12144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12144");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive11.getEntries();
        boolean boolean15 = explodedArchive11.filtered;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test12145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12145");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.io.File file3 = fileEntry2.file;
        java.io.File file4 = null;
        fileEntry2.file = file4;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry2.name = asciiBytes6;
        java.io.File file8 = fileEntry2.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry2.name;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test12146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12146");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]:///hi!:0hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0", "hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "hi!://:100/://[archive://:10archive]:100archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]:///hi!:0hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12147");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.URL uRL16 = new java.net.URL("hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", "[hi!://:100/hi!]:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 0, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertEquals(uRL15.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]://[hi!://:100/hi!]:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]:0hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test12148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12148");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getHost();
        java.lang.String str36 = uRL34.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getHost();
        int int49 = uRL46.getPort();
        boolean boolean50 = uRL34.sameFile(uRL46);
        int int51 = uRL34.getPort();
        java.lang.String str52 = uRL34.getAuthority();
        boolean boolean53 = uRL23.sameFile(uRL34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str68 = explodedArchive67.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive67.getEntries();
        java.util.jar.Manifest manifest70 = explodedArchive67.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str73 = uRL72.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL72, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.lang.String str80 = uRL79.getAuthority();
        int int81 = uRL79.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter85 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList86 = explodedArchive83.getNestedArchives(entryFilter85);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter87 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList88 = explodedArchive83.getNestedArchives(entryFilter87);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap89 = explodedArchive83.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler90 = explodedArchive83.new FilteredURLStreamHandler();
        java.net.URL uRL91 = new java.net.URL(uRL79, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL92 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL93 = new java.net.URL("", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (int) (byte) 1, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL94 = new java.net.URL(uRL34, "[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        int int95 = uRL94.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream96 = uRL94.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNull(manifest70);
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + ":100" + "'", str80, ":100");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(archiveList86);
        org.junit.Assert.assertNotNull(archiveList88);
        org.junit.Assert.assertNotNull(asciiBytesMap89);
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL92.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL93.toString(), "://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:1/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL94.toString(), "hi!://:100/[hi!://:100/hi!]:0");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test12149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12149");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getPath();
        int int19 = uRL9.getPort();
        java.lang.String str20 = uRL9.getQuery();
        java.lang.String str21 = uRL9.getRef();
        java.lang.String str22 = uRL9.getUserInfo();
        java.lang.String str23 = uRL9.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test12150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12150");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", "/://[archive://:10archive]:100archive://:10archive", 0, "[archive://:10archive]:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12151");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getHost();
        int int16 = uRL13.getPort();
        java.lang.String str17 = uRL13.getQuery();
        java.net.URL uRL19 = new java.net.URL(uRL13, "");
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL19, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(":100", "archive://:10archive", (int) (short) -1, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL39 = new java.net.URL(uRL37, ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.lang.String str40 = uRL39.getUserInfo();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL39.toString(), ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test12152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12152");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        explodedArchive43.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive43.getNestedArchives(entryFilter51);
        java.lang.String str53 = explodedArchive43.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL(uRL41, "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = uRL55.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0");
    }

    @Test
    public void test12153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12153");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getHost();
        java.lang.String str61 = uRL59.getUserInfo();
        java.lang.String str62 = uRL59.getRef();
        boolean boolean63 = uRL37.sameFile(uRL59);
        java.net.URL uRL65 = new java.net.URL(uRL37, "/hi!://:100");
        java.lang.String str66 = uRL65.getPath();
        java.net.URL uRL68 = new java.net.URL(uRL65, "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.lang.String str69 = uRL65.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!://:100" + "'", str66, "/hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test12154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12154");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/hi!", "/hi!://:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12155");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getHost();
        int int41 = uRL38.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getFile();
        int int53 = uRL51.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getQuery();
        java.lang.String str66 = uRL64.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL(uRL51, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str80 = uRL51.toExternalForm();
        boolean boolean81 = uRL38.sameFile(uRL51);
        java.lang.String str82 = uRL38.getFile();
        java.lang.String str83 = uRL38.getRef();
        java.lang.String str84 = uRL38.getAuthority();
        java.lang.String str85 = uRL38.getPath();
        boolean boolean86 = uRL27.sameFile(uRL38);
        java.net.URL uRL88 = new java.net.URL(uRL38, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        java.net.URL uRL90 = new java.net.URL(uRL38, "hi!://:100/[/hi!://:100/archive]");
        java.net.URL uRL92 = new java.net.URL(uRL90, "/[hi!://:100/hi!]");
        java.lang.String str93 = uRL92.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + ":100" + "'", str28, ":100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!://:100" + "'", str80, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ":100" + "'", str84, ":100");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "/[hi!://:100/hi!]" + "'", str93, "/[hi!://:100/hi!]");
    }

    @Test
    public void test12156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12156");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive8.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        java.lang.String str13 = explodedArchive8.toString();
        java.lang.String str14 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive8.getFilteredArchive(entryRenameFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive8.getNestedArchives(entryFilter17);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNotNull(archiveList18);
    }

    @Test
    public void test12157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12157");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test12158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12158");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap48);
        boolean boolean51 = explodedArchive50.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL(uRL37, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.toExternalForm();
        java.lang.String str55 = uRL53.getHost();
        java.net.URLStreamHandler uRLStreamHandler57 = null;
        java.net.URL uRL58 = new java.net.URL(uRL53, "/archive", uRLStreamHandler57);
        java.lang.String str59 = uRL53.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!://:100/archive:///archive:0hi!://:100" + "'", str54, "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test12159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12159");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        boolean boolean14 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive0.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive0.getEntries();
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(entryCollection19);
    }

    @Test
    public void test12160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12160");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry12.name = asciiBytes14;
        java.io.File file16 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry12.name = asciiBytes17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry12.name = asciiBytes20;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes22 = fileEntry12.name;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(asciiBytes22);
    }

    @Test
    public void test12161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12161");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12162");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.lang.String str10 = explodedArchive1.toString();
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive13.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive13.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap38);
        explodedArchive1.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap38);
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive43.new FileEntry();
        java.lang.String str48 = explodedArchive43.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive43.new FileEntry();
        java.util.jar.Manifest manifest50 = null;
        explodedArchive43.manifest = manifest50;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap52);
        explodedArchive41.entries = asciiBytesMap52;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive41.getEntries();
        java.io.File file56 = null;
        explodedArchive41.root = file56;
        java.lang.String str58 = explodedArchive41.toString();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
    }

    @Test
    public void test12163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12163");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getFile();
        int int19 = uRL17.getDefaultPort();
        java.lang.String str20 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getRef();
        java.lang.String str33 = uRL30.getRef();
        java.lang.String str34 = uRL30.toExternalForm();
        boolean boolean35 = uRL17.sameFile(uRL30);
        java.lang.String str36 = uRL30.getUserInfo();
        java.lang.String str37 = uRL30.getHost();
        java.lang.String str38 = uRL30.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.lang.String str46 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL(uRL30, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL30.getHost();
        int int50 = uRL30.getPort();
        java.lang.String str51 = uRL30.toExternalForm();
        java.io.File file53 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = null;
        explodedArchive54.entries = asciiBytesMap58;
        java.io.File file60 = explodedArchive54.root;
        java.io.File file61 = explodedArchive54.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        explodedArchive54.entries = asciiBytesMap68;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file53, asciiBytesMap68);
        java.util.jar.Manifest manifest71 = null;
        explodedArchive70.manifest = manifest71;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive70.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL(uRL30, "/[hi!://:100/hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL75 = new java.net.URL("/hi!://:100", "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0", (int) (byte) 1, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL76 = new java.net.URL("", "hi!://:100/[hi!://:100/hi!]", (int) (byte) 0, "/hi!://://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str77 = uRL76.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection78 = uRL76.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!://:100" + "'", str34, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!://:100" + "'", str51, "hi!://:100");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL75.toString(), "/hi!://:100://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0:1/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL76.toString(), "://[hi!://:100/[hi!://:100/hi!]]:0/hi!://://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!://://[archive://:10archive]:100archive://:10archive" + "'", str77, "/hi!://://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test12164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12164");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getPath();
        java.lang.String str14 = uRL9.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI15 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test12165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12165");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/[/hi!://:100/archive]://[:100]:52:100/:100", "[hi!://:100/hi!://:100/:100]", (int) (byte) 1, ":52", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /[/hi!://:100/archive]://[:100]:52:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12166");
        java.net.URLConnection.setDefaultRequestProperty("archive://:0/:100", "/[/hi!://:100/archive]");
    }

    @Test
    public void test12167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12167");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNotNull(archiveList16);
    }

    @Test
    public void test12168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12168");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.io.File file4 = null;
        explodedArchive0.root = file4;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        boolean boolean8 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str10 = explodedArchive9.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive9.new FileEntry();
        java.util.jar.Manifest manifest12 = explodedArchive9.getManifest();
        java.util.jar.Manifest manifest13 = explodedArchive9.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive14.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive14.getNestedArchives(entryFilter19);
        java.util.jar.Manifest manifest21 = null;
        explodedArchive14.manifest = manifest21;
        explodedArchive14.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive14.entries;
        explodedArchive9.entries = asciiBytesMap25;
        explodedArchive0.entries = asciiBytesMap25;
        boolean boolean28 = explodedArchive0.filtered;
        java.io.File file29 = null;
        explodedArchive0.root = file29;
        java.lang.String str31 = explodedArchive0.toString();
        java.lang.String str32 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
    }

    @Test
    public void test12169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12169");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        java.io.File file3 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive4.new FileEntry();
        java.util.jar.Manifest manifest7 = explodedArchive4.getManifest();
        java.util.jar.Manifest manifest8 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive9.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive9.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive9.manifest = manifest16;
        explodedArchive9.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive9.entries;
        explodedArchive4.entries = asciiBytesMap20;
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive0.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL24 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
    }

    @Test
    public void test12170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12170");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.io.File file12 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive14.new FileEntry();
        java.io.File file19 = null;
        fileEntry18.file = file19;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = null;
        fileEntry18.name = asciiBytes21;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = fileEntry18.getName();
        java.io.File file24 = null;
        fileEntry18.file = file24;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = fileEntry18.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive27 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(asciiBytes23);
        org.junit.Assert.assertNull(asciiBytes26);
    }

    @Test
    public void test12171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12171");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        java.lang.String str15 = uRL13.getQuery();
        java.lang.String str16 = uRL13.getRef();
        java.lang.String str17 = uRL13.toExternalForm();
        java.lang.String str18 = uRL13.getPath();
        java.lang.String str19 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        int int41 = uRL38.getPort();
        java.lang.String str42 = uRL38.getProtocol();
        java.lang.String str43 = uRL38.getPath();
        java.lang.String str44 = uRL38.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getFile();
        int int57 = uRL55.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getQuery();
        java.lang.String str70 = uRL68.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL82 = new java.net.URL(uRL68, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL83 = new java.net.URL(uRL55, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL84 = new java.net.URL(uRL38, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL85 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL86 = new java.net.URL("/hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 52, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL87 = new java.net.URL(uRL13, "/archive://[hi!://:100/hi!]:1hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL88 = new java.net.URL("[/:100]:0", "/hi!://[hi!://:100/hi!]:1/archive", 97, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        int int89 = uRL88.getDefaultPort();
        java.lang.String str90 = uRL88.getAuthority();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!://:100" + "'", str17, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + ":100" + "'", str44, ":100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL86.toString(), "/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:52hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL88.toString(), "[/:100]:0://[/hi!://[hi!://:100/hi!]:1/archive]:97archive://:10:100");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[/hi!://[hi!://:100/hi!]:1/archive]:97" + "'", str90, "[/hi!://[hi!://:100/hi!]:1/archive]:97");
    }

    @Test
    public void test12172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12172");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive1.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive1.getNestedArchives(entryFilter9);
        java.util.jar.Manifest manifest11 = explodedArchive1.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive1.entries;
        boolean boolean13 = explodedArchive1.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap14);
        java.io.File file16 = null;
        explodedArchive15.root = file16;
        java.io.File file18 = explodedArchive15.root;
        java.util.jar.Manifest manifest19 = null;
        explodedArchive15.manifest = manifest19;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test12173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12173");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        boolean boolean3 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        explodedArchive1.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive1.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive11.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive11.new FilteredURLStreamHandler();
        java.io.File file21 = null;
        explodedArchive11.root = file21;
        boolean boolean23 = explodedArchive11.filtered;
        java.util.jar.Manifest manifest24 = explodedArchive11.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive11.new FileEntry();
        explodedArchive11.filtered = true;
        java.io.File file28 = null;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap38);
        java.io.File file40 = null;
        explodedArchive39.root = file40;
        boolean boolean42 = explodedArchive39.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive39.entries;
        explodedArchive11.entries = asciiBytesMap43;
        explodedArchive10.entries = asciiBytesMap43;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
    }

    @Test
    public void test12174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12174");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL37.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL60, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.toExternalForm();
        java.lang.String str70 = uRL67.getQuery();
        boolean boolean71 = uRL37.sameFile(uRL67);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive73.filtered = true;
        java.util.jar.Manifest manifest76 = null;
        explodedArchive73.manifest = manifest76;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter78 = null;
        org.springframework.boot.loader.archive.Archive archive79 = explodedArchive73.getFilteredArchive(entryRenameFilter78);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection80 = explodedArchive73.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection81 = explodedArchive73.getEntries();
        java.util.jar.Manifest manifest82 = explodedArchive73.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter83 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList84 = explodedArchive73.getNestedArchives(entryFilter83);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler85 = explodedArchive73.new FilteredURLStreamHandler();
        java.net.URL uRL86 = new java.net.URL(uRL67, "hi!://:100/hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.Proxy proxy87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection88 = uRL86.openConnection(proxy87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100/archive" + "'", str50, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100/hi!" + "'", str69, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(archive79);
        org.junit.Assert.assertNotNull(entryCollection80);
        org.junit.Assert.assertNotNull(entryCollection81);
        org.junit.Assert.assertNull(manifest82);
        org.junit.Assert.assertNotNull(archiveList84);
        org.junit.Assert.assertEquals(uRL86.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test12175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12175");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", "[/hi!://:100/archive]", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12176");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("[archive://:0hi!://:100/hi!]");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12177");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL52 = new java.net.URL(uRL38, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str53 = uRL38.getFile();
        java.lang.String str54 = uRL38.getRef();
        java.net.URL uRL56 = new java.net.URL(uRL38, "");
        boolean boolean57 = uRL28.sameFile(uRL56);
        java.lang.String str58 = uRL56.toExternalForm();
        java.lang.String str59 = uRL56.getFile();
        java.lang.String str60 = uRL56.getHost();
        java.net.URL uRL62 = new java.net.URL(uRL56, "[/archive:///archive:0hi!://:100]:10");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100" + "'", str58, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/[/archive:///archive:0hi!://:100]:10");
    }

    @Test
    public void test12178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12178");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive2.entries = asciiBytesMap6;
        java.io.File file8 = explodedArchive2.root;
        java.io.File file9 = explodedArchive2.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        java.io.File file19 = null;
        explodedArchive18.root = file19;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest22 = null;
        explodedArchive18.manifest = manifest22;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap24);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
    }

    @Test
    public void test12179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12179");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive2.entries = asciiBytesMap6;
        java.io.File file8 = explodedArchive2.root;
        java.io.File file9 = explodedArchive2.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive19.getEntries();
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive22.getNestedArchives(entryFilter29);
        java.io.File file31 = null;
        java.io.File file32 = null;
        java.io.File file33 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive34.getNestedArchives(entryFilter38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive41.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap42);
        explodedArchive22.entries = asciiBytesMap42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap42);
        java.util.jar.Manifest manifest47 = null;
        explodedArchive46.manifest = manifest47;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter49 = null;
        org.springframework.boot.loader.archive.Archive archive50 = explodedArchive46.getFilteredArchive(entryRenameFilter49);
        java.io.File file51 = null;
        explodedArchive46.root = file51;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter53 = null;
        org.springframework.boot.loader.archive.Archive archive54 = explodedArchive46.getFilteredArchive(entryRenameFilter53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive55.getNestedArchives(entryFilter57);
        java.util.jar.Manifest manifest59 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str61 = explodedArchive60.toString();
        java.util.jar.Manifest manifest62 = null;
        explodedArchive60.manifest = manifest62;
        java.util.jar.Manifest manifest64 = explodedArchive60.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive60.entries;
        explodedArchive55.entries = asciiBytesMap65;
        explodedArchive46.entries = asciiBytesMap65;
        explodedArchive19.entries = asciiBytesMap65;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive19.entries;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(archive50);
        org.junit.Assert.assertNotNull(archive54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "archive" + "'", str61, "archive");
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
    }

    @Test
    public void test12180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12180");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        explodedArchive0.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        java.io.File file15 = null;
        explodedArchive0.root = file15;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest19 = null;
        explodedArchive0.manifest = manifest19;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest17);
    }

    @Test
    public void test12181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12181");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        int int25 = uRL23.getDefaultPort();
        java.lang.String str26 = uRL23.getQuery();
        int int27 = uRL23.getDefaultPort();
        java.lang.String str28 = uRL23.getRef();
        java.lang.String str29 = uRL23.getPath();
        java.lang.String str30 = uRL23.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!://:100/hi!" + "'", str30, "hi!://:100/hi!");
    }

    @Test
    public void test12182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12182");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        java.io.File file10 = fileEntry4.getFile();
        java.io.File file11 = null;
        fileEntry4.file = file11;
        java.io.File file13 = fileEntry4.getFile();
        java.io.File file14 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test12183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12183");
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!://:100/:100", "hi!://:100/hi!:1", (int) (short) 100, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.net.URL uRL24 = new java.net.URL("/archive", "/://[archive://:10archive]:100archive://:10archive", (int) ' ', "[hi!://:100/hi!]:1", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.Class<?> wildcardClass25 = uRL24.getClass();
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/:100://[hi!://:100/hi!:1]:100/hi!");
        org.junit.Assert.assertEquals(uRL24.toString(), "/archive://[/://[archive://:10archive]:100archive://:10archive]:32[hi!://:100/hi!]:1");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test12184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12184");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.lang.String str9 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive11.new FileEntry();
        boolean boolean16 = explodedArchive11.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest20 = explodedArchive11.manifest;
        java.lang.String str21 = explodedArchive11.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive11.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive24 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
    }

    @Test
    public void test12185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12185");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getUserInfo();
        java.lang.String str20 = uRL16.getPath();
        java.lang.String str21 = uRL16.getUserInfo();
        java.lang.String str22 = uRL16.getRef();
        java.lang.String str23 = uRL16.getQuery();
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = null;
        explodedArchive30.entries = asciiBytesMap34;
        java.io.File file36 = explodedArchive30.root;
        java.io.File file37 = explodedArchive30.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        explodedArchive30.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap44);
        java.io.File file47 = null;
        explodedArchive46.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (short) 1, "hi!://:100/hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL16, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        int int52 = uRL51.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertEquals(uRL50.toString(), "://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
    }

    @Test
    public void test12186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12186");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getHost();
        java.io.File file49 = null;
        java.io.File file50 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive51.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive51.getNestedArchives(entryFilter55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap59);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive60.new FileEntry();
        explodedArchive60.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "/archive:///archive:0hi!://:100", (int) (byte) 10, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.lang.String str66 = uRL65.getProtocol();
        boolean boolean67 = uRL41.sameFile(uRL65);
        java.net.URLStreamHandler uRLStreamHandler69 = null;
        java.net.URL uRL70 = new java.net.URL(uRL41, "/[/hi!://:100/archive]://[:100]:52:100/:100", uRLStreamHandler69);
        int int71 = uRL70.getPort();
        java.lang.String str72 = uRL70.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!://:100/hi!://hi!:1hi!" + "'", str66, "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/[/hi!://:100/archive]://[:100]:52:100/:100");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ":100" + "'", str72, ":100");
    }

    @Test
    public void test12187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12187");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive10.getNestedArchives(entryFilter17);
        java.io.File file19 = null;
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap30);
        explodedArchive10.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest35 = explodedArchive10.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.jar.Manifest manifest38 = null;
        explodedArchive36.manifest = manifest38;
        java.util.jar.Manifest manifest40 = explodedArchive36.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive36.entries;
        explodedArchive10.entries = asciiBytesMap41;
        explodedArchive0.entries = asciiBytesMap41;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive0.getNestedArchives(entryFilter45);
        java.io.File file47 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive0.entries;
        java.util.jar.Manifest manifest49 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNull(manifest49);
    }

    @Test
    public void test12188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12188");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
    }

    @Test
    public void test12189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12189");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.jar.Manifest manifest3 = null;
        explodedArchive1.manifest = manifest3;
        java.util.jar.Manifest manifest5 = explodedArchive1.getManifest();
        boolean boolean6 = explodedArchive1.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive1.entries;
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        explodedArchive21.filtered = true;
        java.io.File file24 = null;
        explodedArchive21.root = file24;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive21.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap27);
        explodedArchive1.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive1.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter32 = null;
        org.springframework.boot.loader.archive.Archive archive33 = explodedArchive1.getFilteredArchive(entryRenameFilter32);
        java.util.jar.Manifest manifest34 = explodedArchive1.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap35);
        boolean boolean37 = explodedArchive36.filtered;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archive33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test12190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12190");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!", "/:52://[hi!://:100/hi!://:100/hi!://:100/hi!://:100]:10[hi!://:100/hi!]", "[/hi!:1]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12191");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.io.File file7 = fileEntry6.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry6.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry6.getName();
        java.io.File file10 = null;
        fileEntry6.file = file10;
        java.io.File file12 = fileEntry6.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test12192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12192");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive14.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        java.lang.String str21 = uRL19.getPath();
        boolean boolean22 = uRL9.sameFile(uRL19);
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL19, "", uRLStreamHandler24);
        java.lang.String str26 = uRL25.toExternalForm();
        java.lang.String str27 = uRL25.getFile();
        java.lang.String str28 = uRL25.getUserInfo();
        java.io.File file41 = null;
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL55 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL56 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getQuery();
        java.lang.String str68 = uRL66.getRef();
        int int69 = uRL66.getPort();
        java.lang.String str70 = uRL66.getProtocol();
        boolean boolean71 = uRL56.sameFile(uRL66);
        java.lang.String str72 = uRL56.getRef();
        boolean boolean73 = uRL25.sameFile(uRL56);
        java.lang.String str74 = uRL56.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream75 = uRL56.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertEquals(uRL54.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL56.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
    }

    @Test
    public void test12193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12193");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.lang.String str11 = explodedArchive0.toString();
        java.lang.String str12 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.io.File file14 = null;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        explodedArchive27.filtered = true;
        java.io.File file30 = null;
        explodedArchive27.root = file30;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive27.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap33);
        explodedArchive0.entries = asciiBytesMap33;
        boolean boolean37 = explodedArchive0.filtered;
        boolean boolean38 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive0.entries;
        boolean boolean40 = explodedArchive0.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL41 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test12194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12194");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = fileEntry5.name;
        java.io.File file7 = fileEntry5.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry5.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry5.name = asciiBytes9;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(asciiBytes6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
    }

    @Test
    public void test12195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12195");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry4.name = asciiBytes11;
        java.io.File file13 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        java.io.File file15 = fileEntry4.file;
        java.io.File file16 = null;
        fileEntry4.file = file16;
        java.io.File file18 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test12196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12196");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive8.new FileEntry();
        java.util.jar.Manifest manifest11 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest12 = explodedArchive8.manifest;
        java.io.File file13 = null;
        explodedArchive8.root = file13;
        explodedArchive8.filtered = true;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        explodedArchive18.filtered = false;
        java.util.jar.Manifest manifest24 = explodedArchive18.manifest;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        explodedArchive18.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap34);
        java.util.jar.Manifest manifest37 = null;
        explodedArchive36.manifest = manifest37;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive36.entries;
        explodedArchive8.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap39);
        explodedArchive0.entries = asciiBytesMap39;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive0.getEntries();
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        explodedArchive45.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap53);
        explodedArchive0.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter56 = null;
        org.springframework.boot.loader.archive.Archive archive57 = explodedArchive0.getFilteredArchive(entryRenameFilter56);
        explodedArchive0.filtered = false;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(archive57);
    }

    @Test
    public void test12197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12197");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        boolean boolean14 = explodedArchive0.filtered;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive28.new FileEntry();
        explodedArchive28.filtered = false;
        java.io.File file32 = null;
        java.io.File file33 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive34.new FileEntry();
        java.lang.String str39 = explodedArchive34.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive34.new FileEntry();
        java.util.jar.Manifest manifest41 = null;
        explodedArchive34.manifest = manifest41;
        java.lang.String str43 = explodedArchive34.toString();
        java.io.File file44 = null;
        java.io.File file45 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive46.getNestedArchives(entryFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive46.getNestedArchives(entryFilter53);
        java.io.File file55 = null;
        java.io.File file56 = null;
        java.io.File file57 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, asciiBytesMap64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive65.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap66);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap66);
        explodedArchive46.entries = asciiBytesMap66;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap71 = explodedArchive70.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap71);
        explodedArchive34.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap71);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap71);
        explodedArchive28.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap71);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap71);
        explodedArchive0.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter80 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList81 = explodedArchive0.getNestedArchives(entryFilter80);
        java.util.jar.Manifest manifest82 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest83 = explodedArchive0.manifest;
        java.io.File file84 = null;
        explodedArchive0.root = file84;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(asciiBytesMap71);
        org.junit.Assert.assertNotNull(archiveList81);
        org.junit.Assert.assertNull(manifest82);
        org.junit.Assert.assertNull(manifest83);
    }

    @Test
    public void test12198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12198");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.getFile();
        java.io.File file12 = null;
        fileEntry10.file = file12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry10.name = asciiBytes14;
        java.io.File file16 = fileEntry10.file;
        java.io.File file17 = null;
        fileEntry10.file = file17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry10.getName();
        java.io.File file20 = fileEntry10.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test12199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12199");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry12.name = asciiBytes17;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test12200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12200");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getQuery();
        java.lang.String str13 = uRL11.getPath();
        java.lang.String str14 = uRL11.getAuthority();
        java.lang.String str15 = uRL11.getPath();
        java.lang.String str16 = uRL11.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL(uRL30, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str46 = uRL45.getUserInfo();
        java.lang.String str47 = uRL45.getQuery();
        java.lang.String str48 = uRL45.getFile();
        boolean boolean49 = uRL11.sameFile(uRL45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj50 = uRL45.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!://:100/hi!]:0" + "'", str14, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100/hi!" + "'", str15, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL45.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test12201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12201");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getHost();
        int int16 = uRL13.getPort();
        java.lang.String str17 = uRL13.getQuery();
        java.net.URL uRL19 = new java.net.URL(uRL13, "");
        java.io.File file21 = null;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap31);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL19, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL("[/:100]:0", "/hi!://:100/archive", (int) (byte) 1, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getHost();
        int int49 = uRL46.getPort();
        java.lang.String str50 = uRL46.getQuery();
        java.net.URL uRL52 = new java.net.URL(uRL46, "");
        java.lang.String str53 = uRL52.getPath();
        java.lang.String str54 = uRL52.getUserInfo();
        boolean boolean55 = uRL35.sameFile(uRL52);
        java.lang.String str56 = uRL35.getAuthority();
        java.lang.String str57 = uRL35.getProtocol();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL35.toString(), "[/:100]:0://[/hi!://:100/archive]:1archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[/hi!://:100/archive]:1" + "'", str56, "[/hi!://:100/archive]:1");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[/:100]:0" + "'", str57, "[/:100]:0");
    }

    @Test
    public void test12202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12202");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        boolean boolean13 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test12203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12203");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL37 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL38 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str39 = uRL38.getRef();
        java.io.File file45 = null;
        java.io.File file46 = null;
        java.io.File file47 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive48.getNestedArchives(entryFilter50);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive48.getNestedArchives(entryFilter52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive48.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("/archive:///archive:0hi!://:100", "/archive:///archive:0hi!://:100", (int) (byte) 10, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL38, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str62 = uRL61.toExternalForm();
        java.lang.String str63 = uRL61.getHost();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertEquals(uRL60.toString(), "/archive:///archive:0hi!://:100://[/archive:///archive:0hi!://:100]:10hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100" + "'", str62, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!://:100/:100]" + "'", str63, "[hi!://:100/:100]");
    }

    @Test
    public void test12204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12204");
        java.net.URLConnection.setDefaultRequestProperty("/archive://[hi!://:100/hi!]:1/hi!", "[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
    }

    @Test
    public void test12205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12205");
        java.net.URLConnection.setDefaultRequestProperty("/://[hi!://:100/:100]:100/hi!://:100", "/:52");
    }

    @Test
    public void test12206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12206");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getProtocol();
        java.lang.String str13 = uRL11.toExternalForm();
        java.lang.String str14 = uRL11.toExternalForm();
        java.lang.String str15 = uRL11.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection16 = uRL11.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str13, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str14, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str15, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
    }

    @Test
    public void test12207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12207");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        explodedArchive0.filtered = false;
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest17 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive0.getNestedArchives(entryFilter18);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(archiveList19);
    }

    @Test
    public void test12208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12208");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        java.io.File file2 = explodedArchive0.root;
        java.io.File file3 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
    }

    @Test
    public void test12209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12209");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getAuthority();
        java.lang.String str11 = uRL9.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        java.lang.String str37 = uRL35.getPath();
        java.lang.String str38 = uRL35.getPath();
        java.lang.String str39 = uRL35.toExternalForm();
        boolean boolean40 = uRL9.sameFile(uRL35);
        java.lang.String str41 = uRL9.toExternalForm();
        int int42 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:1" + "'", str10, "hi!:1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!://hi!:1hi!" + "'", str11, "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/hi!" + "'", str39, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://hi!:1hi!" + "'", str41, "hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
    }

    @Test
    public void test12210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12210");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        java.io.File file12 = fileEntry11.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry11.name = asciiBytes13;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test12211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12211");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.lang.String str11 = explodedArchive0.toString();
        java.lang.String str12 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str14 = explodedArchive13.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive13.new FileEntry();
        java.util.jar.Manifest manifest16 = explodedArchive13.getManifest();
        java.util.jar.Manifest manifest17 = explodedArchive13.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive18.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive18.getNestedArchives(entryFilter23);
        java.util.jar.Manifest manifest25 = null;
        explodedArchive18.manifest = manifest25;
        explodedArchive18.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive18.entries;
        explodedArchive13.entries = asciiBytesMap29;
        boolean boolean31 = explodedArchive13.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive13.entries;
        explodedArchive0.entries = asciiBytesMap32;
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        java.lang.String str35 = explodedArchive0.toString();
        java.lang.String str36 = explodedArchive0.toString();
        java.util.jar.Manifest manifest37 = null;
        explodedArchive0.manifest = manifest37;
        java.io.File file39 = null;
        explodedArchive0.root = file39;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
    }

    @Test
    public void test12212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12212");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        java.io.File file10 = explodedArchive0.root;
        boolean boolean11 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        boolean boolean16 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
    }

    @Test
    public void test12213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12213");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        java.lang.String str18 = uRL16.getPath();
        java.lang.String str19 = uRL16.toExternalForm();
        java.lang.String str20 = uRL16.getAuthority();
        java.lang.String str21 = uRL16.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100/hi!" + "'", str19, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + ":100" + "'", str20, ":100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":100" + "'", str21, ":100");
    }

    @Test
    public void test12214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12214");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive11.new FileEntry();
        java.io.File file16 = null;
        fileEntry15.file = file16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = null;
        fileEntry15.name = asciiBytes18;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = fileEntry15.name;
        java.io.File file21 = fileEntry15.file;
        java.io.File file22 = fileEntry15.getFile();
        java.io.File file23 = fileEntry15.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = null;
        fileEntry15.name = asciiBytes24;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = fileEntry15.name;
        java.io.File file27 = fileEntry15.getFile();
        java.io.File file28 = fileEntry15.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive29 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(asciiBytes20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(asciiBytes26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
    }

    @Test
    public void test12215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12215");
        java.io.File file8 = null;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL22 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str23 = uRL22.toExternalForm();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.toExternalForm();
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals(uRL21.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str23, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[://[archive://:10archive]:100archive://:10archive]:0" + "'", str24, "[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str25, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test12216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12216");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive29.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive29.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL13, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getAuthority();
        java.lang.String str39 = uRL37.getProtocol();
        java.lang.String str40 = uRL37.getHost();
        java.lang.String str41 = uRL37.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!://:100/:100]:100" + "'", str38, "[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/hi!" + "'", str39, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!://:100/:100]" + "'", str40, "[hi!://:100/:100]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!" + "'", str41, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test12217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12217");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.lang.String str21 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive15.new FilteredURLStreamHandler();
        boolean boolean23 = explodedArchive15.filtered;
        java.io.File file24 = explodedArchive15.root;
        java.io.File file25 = null;
        explodedArchive15.root = file25;
        java.util.jar.Manifest manifest27 = explodedArchive15.getManifest();
        java.util.jar.Manifest manifest28 = null;
        explodedArchive15.manifest = manifest28;
        java.io.File file30 = explodedArchive15.root;
        java.lang.String str31 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive15.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive33 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
    }

    @Test
    public void test12218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12218");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[hi!://:100/hi!]:0", "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (int) '4', "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[/:100]:0:32hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[hi!://:100/hi!]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12219");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive19.getNestedArchives(entryFilter20);
        java.lang.String str22 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter23 = null;
        org.springframework.boot.loader.archive.Archive archive24 = explodedArchive19.getFilteredArchive(entryRenameFilter23);
        java.lang.String str25 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter26 = null;
        org.springframework.boot.loader.archive.Archive archive27 = explodedArchive19.getFilteredArchive(entryRenameFilter26);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(archive24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(archive27);
    }

    @Test
    public void test12220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12220");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getRef();
        java.lang.String str32 = uRL9.getQuery();
        java.net.URL uRL34 = new java.net.URL(uRL9, "[hi!://:100/hi!]");
        int int35 = uRL34.getPort();
        int int36 = uRL34.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test12221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12221");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.lang.String str9 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str11 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry12.name;
        java.io.File file15 = null;
        fileEntry12.file = file15;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry12.name = asciiBytes17;
        java.io.File file19 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry12.name = asciiBytes20;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes22 = fileEntry12.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive23 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(asciiBytes22);
    }

    @Test
    public void test12222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12222");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest18 = null;
        explodedArchive11.manifest = manifest18;
        java.io.File file20 = explodedArchive11.root;
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap34);
        explodedArchive11.entries = asciiBytesMap34;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive11.entries;
        java.util.jar.Manifest manifest39 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest40 = explodedArchive11.getManifest();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(manifest40);
    }

    @Test
    public void test12223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12223");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getHost();
        int int41 = uRL38.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getFile();
        int int53 = uRL51.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getQuery();
        java.lang.String str66 = uRL64.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL(uRL51, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str80 = uRL51.toExternalForm();
        boolean boolean81 = uRL38.sameFile(uRL51);
        java.lang.String str82 = uRL38.getFile();
        java.lang.String str83 = uRL38.getRef();
        java.lang.String str84 = uRL38.getAuthority();
        java.lang.String str85 = uRL38.getPath();
        boolean boolean86 = uRL27.sameFile(uRL38);
        java.net.URL uRL88 = new java.net.URL(uRL38, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        java.net.URL uRL90 = new java.net.URL(uRL38, "hi!://:100/[/hi!://:100/archive]");
        java.net.URL uRL92 = new java.net.URL(uRL90, "/[hi!://:100/hi!]");
        int int93 = uRL92.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + ":100" + "'", str28, ":100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!://:100" + "'", str80, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ":100" + "'", str84, ":100");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 100 + "'", int93 == 100);
    }

    @Test
    public void test12224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12224");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        java.lang.String str11 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.util.jar.Manifest manifest14 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertNull(manifest14);
    }

    @Test
    public void test12225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12225");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive1.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive1.getFilteredArchive(entryRenameFilter5);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        boolean boolean9 = explodedArchive7.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive7.getFilteredArchive(entryRenameFilter10);
        explodedArchive7.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive7.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive7.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        boolean boolean18 = explodedArchive17.filtered;
        explodedArchive17.filtered = false;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test12226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12226");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        java.lang.String str14 = explodedArchive7.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        explodedArchive15.filtered = false;
        java.util.jar.Manifest manifest21 = explodedArchive15.manifest;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive30.entries;
        explodedArchive15.entries = asciiBytesMap31;
        explodedArchive7.entries = asciiBytesMap31;
        explodedArchive0.entries = asciiBytesMap31;
        java.io.File file35 = explodedArchive0.root;
        java.lang.String str36 = explodedArchive0.toString();
        explodedArchive0.filtered = false;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
    }

    @Test
    public void test12227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12227");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        java.io.File file4 = explodedArchive1.root;
        java.util.jar.Manifest manifest5 = explodedArchive1.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive7.new FileEntry();
        java.io.File file9 = fileEntry8.file;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test12228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12228");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        boolean boolean26 = uRL9.sameFile(uRL21);
        java.lang.String str27 = uRL9.toExternalForm();
        java.net.URL uRL29 = new java.net.URL(uRL9, "/hi!");
        java.lang.String str30 = uRL29.getRef();
        java.lang.String str31 = uRL29.getRef();
        java.lang.String str32 = uRL29.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100" + "'", str27, "hi!://:100");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!://:100/hi!" + "'", str32, "hi!://:100/hi!");
    }

    @Test
    public void test12229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12229");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test12230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12230");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive0.getFilteredArchive(entryRenameFilter16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive0.getEntries();
        java.io.File file19 = explodedArchive0.root;
        java.io.File file20 = null;
        explodedArchive0.root = file20;
        java.util.jar.Manifest manifest22 = null;
        explodedArchive0.manifest = manifest22;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(archive17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test12231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12231");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = explodedArchive0.new FileEntry();
        java.io.File file44 = null;
        fileEntry43.file = file44;
        java.io.File file46 = fileEntry43.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(file46);
    }

    @Test
    public void test12232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12232");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(entryCollection9);
    }

    @Test
    public void test12233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12233");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive17.getNestedArchives(entryFilter18);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archiveList19);
    }

    @Test
    public void test12234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12234");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/[hi!://:100/hi!]:10", "[/archive:///archive:0hi!://:100]", "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /[hi!://:100/hi!]:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12235");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive0.getFilteredArchive(entryRenameFilter16);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest20 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest21 = explodedArchive0.getManifest();
        java.io.File file22 = null;
        explodedArchive0.root = file22;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(archive17);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNull(manifest24);
    }

    @Test
    public void test12236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12236");
        java.net.URLConnection.setDefaultRequestProperty("[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!", "hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive");
    }

    @Test
    public void test12237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12237");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive11.manifest = manifest16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive11.new FileEntry();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
    }

    @Test
    public void test12238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12238");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "/archive:///archive:0hi!://:100:///archive:10hi!://:100/hi!", "[/hi!://:100/archive]:0://:52[://[archive://:10archive]:100archive://:10archive]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12239");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getFile();
        int int66 = uRL64.getDefaultPort();
        java.lang.String str67 = uRL64.getFile();
        java.lang.String str68 = uRL64.getProtocol();
        java.lang.String str69 = uRL64.getAuthority();
        java.io.File file71 = null;
        java.io.File file72 = null;
        java.io.File file73 = null;
        java.io.File file74 = null;
        java.io.File file75 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive76.getNestedArchives(entryFilter78);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter80 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList81 = explodedArchive76.getNestedArchives(entryFilter80);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap82 = explodedArchive76.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file75, asciiBytesMap82);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive(file74, asciiBytesMap82);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap85 = explodedArchive84.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file73, asciiBytesMap85);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file72, asciiBytesMap85);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive(file71, asciiBytesMap85);
        java.lang.String str89 = explodedArchive88.toString();
        java.io.File file90 = explodedArchive88.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler91 = explodedArchive88.new FilteredURLStreamHandler();
        java.net.URL uRL92 = new java.net.URL(uRL64, "/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        boolean boolean93 = uRL51.sameFile(uRL64);
        java.lang.Object obj94 = null;
        boolean boolean95 = uRL64.equals(obj94);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ":100" + "'", str69, ":100");
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(archiveList81);
        org.junit.Assert.assertNotNull(asciiBytesMap82);
        org.junit.Assert.assertNotNull(asciiBytesMap85);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "archive" + "'", str89, "archive");
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test12240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12240");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive5.filtered = true;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive5.manifest = manifest8;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive5.getFilteredArchive(entryRenameFilter10);
        java.io.File file12 = null;
        explodedArchive5.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive5.new FileEntry();
        java.io.File file15 = null;
        explodedArchive5.root = file15;
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap29);
        explodedArchive5.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap29);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
    }

    @Test
    public void test12241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12241");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/archive", "/archive", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        int int12 = uRL11.getDefaultPort();
        java.lang.String str13 = uRL11.getPath();
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive30.new FileEntry();
        java.io.File file32 = explodedArchive30.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("://[hi!://:100/:100]:100/hi!://:100", "hi!://:100/hi!://:100", 52, "[/hi!://:100/archive]:0://:52[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL11, "/archive:0", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.Class<?> wildcardClass36 = uRL11.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/archive:///archive:1hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/archive" + "'", str13, "hi!://:100/archive");
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://[hi!://:100/:100]:100/hi!://:100://[hi!://:100/hi!://:100]:52[/hi!://:100/archive]:0://:52[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/archive:///archive:1/archive:0");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test12242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12242");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getPath();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getQuery();
        java.lang.String str34 = uRL32.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.net.URL uRL46 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        int int47 = uRL46.getPort();
        java.lang.String str48 = uRL46.getPath();
        java.lang.String str49 = uRL46.getPath();
        java.lang.String str50 = uRL46.toExternalForm();
        java.lang.String str51 = uRL46.getRef();
        boolean boolean52 = uRL9.sameFile(uRL46);
        java.lang.String str53 = uRL46.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100/hi!" + "'", str50, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test12243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12243");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
    }

    @Test
    public void test12244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12244");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL42, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.net.URL uRL50 = new java.net.URL(uRL30, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.lang.String str58 = explodedArchive52.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL(uRL50, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL16, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str62 = uRL61.getFile();
        java.lang.String str63 = uRL61.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI64 = uRL61.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str62, "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str63, "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test12245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12245");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive4.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive24.new FileEntry();
        explodedArchive24.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL(uRL11, "[hi!://:100/hi!]:1", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getFile();
        int int41 = uRL39.getDefaultPort();
        java.lang.String str42 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        boolean boolean57 = uRL39.sameFile(uRL52);
        java.lang.String str58 = uRL52.getUserInfo();
        java.net.URL uRL60 = new java.net.URL(uRL52, "hi!://:100/archive");
        int int61 = uRL52.getDefaultPort();
        java.lang.String str62 = uRL52.getUserInfo();
        boolean boolean63 = uRL11.sameFile(uRL52);
        java.lang.String str64 = uRL11.getAuthority();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertEquals(uRL11.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertEquals(uRL29.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/[hi!://:100/hi!]:1");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[hi!://:100/hi!]:1" + "'", str64, "[hi!://:100/hi!]:1");
    }

    @Test
    public void test12246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12246");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.io.File file7 = explodedArchive4.root;
        java.util.jar.Manifest manifest8 = explodedArchive4.getManifest();
        java.io.File file9 = null;
        explodedArchive4.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive4.new FileEntry();
        java.lang.String str12 = explodedArchive4.toString();
        java.util.jar.Manifest manifest13 = explodedArchive4.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("[archive://:0hi!://:100/hi!]", "", (int) (short) -1, "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.Proxy proxy16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection17 = uRL15.openConnection(proxy16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertEquals(uRL15.toString(), "[archive://:0hi!://:100/hi!]:/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
    }

    @Test
    public void test12247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12247");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        explodedArchive0.filtered = false;
        java.io.File file12 = explodedArchive0.root;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive14.entries = asciiBytesMap18;
        boolean boolean20 = explodedArchive14.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive14.new FileEntry();
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive14.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap33);
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.lang.String str45 = explodedArchive39.toString();
        java.util.jar.Manifest manifest46 = explodedArchive39.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap47);
        explodedArchive37.entries = asciiBytesMap47;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = null;
        explodedArchive52.entries = asciiBytesMap56;
        java.io.File file58 = explodedArchive52.root;
        java.io.File file59 = explodedArchive52.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive60.entries;
        explodedArchive52.entries = asciiBytesMap66;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap66);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap66);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive70.getNestedArchives(entryFilter72);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive70.getNestedArchives(entryFilter74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive70.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter77 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList78 = explodedArchive70.getNestedArchives(entryFilter77);
        java.io.File file79 = null;
        explodedArchive70.root = file79;
        java.io.File file81 = null;
        explodedArchive70.root = file81;
        java.io.File file83 = explodedArchive70.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap84 = explodedArchive70.entries;
        explodedArchive69.entries = asciiBytesMap84;
        explodedArchive37.entries = asciiBytesMap84;
        explodedArchive0.entries = asciiBytesMap84;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertNotNull(archiveList78);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(asciiBytesMap84);
    }

    @Test
    public void test12248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12248");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getQuery();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getPort();
        java.lang.String str45 = uRL41.getQuery();
        java.net.URL uRL47 = new java.net.URL(uRL41, "");
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL47, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL30, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        int int66 = uRL30.getPort();
        java.net.URL uRL68 = new java.net.URL(uRL30, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.net.URL uRL70 = new java.net.URL(uRL68, "hi!://:100/:100");
        java.lang.String str71 = uRL68.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str71, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test12249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12249");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        java.io.File file9 = null;
        fileEntry7.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry7.getName();
        java.io.File file13 = null;
        fileEntry7.file = file13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry7.getName();
        java.io.File file17 = fileEntry7.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test12250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12250");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        java.io.File file4 = explodedArchive1.root;
        java.util.jar.Manifest manifest5 = explodedArchive1.getManifest();
        java.io.File file6 = explodedArchive1.root;
        java.io.File file7 = null;
        explodedArchive1.root = file7;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive1.new FilteredURLStreamHandler();
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive11.new FileEntry();
        java.lang.String str16 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest18 = null;
        explodedArchive11.manifest = manifest18;
        java.lang.String str20 = explodedArchive11.toString();
        java.io.File file21 = null;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive47.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap48);
        explodedArchive11.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap48);
        explodedArchive1.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap48);
        java.io.File file54 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive53.buildEntries(file54, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
    }

    @Test
    public void test12251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12251");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.toExternalForm();
        java.lang.String str42 = uRL40.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection43 = uRL40.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100/hi!" + "'", str41, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test12252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12252");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!");
        java.lang.String str15 = uRL14.getRef();
        java.lang.String str16 = uRL14.getRef();
        java.lang.String str17 = uRL14.getUserInfo();
        java.lang.String str18 = uRL14.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
    }

    @Test
    public void test12253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12253");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getFile();
        java.net.URL uRL22 = new java.net.URL(uRL16, "hi!://:100/archive");
        java.lang.Class[] classArray23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL22.getContent(classArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/hi!://:100/archive");
    }

    @Test
    public void test12254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12254");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL64.toExternalForm();
        java.lang.String str68 = uRL64.toExternalForm();
        java.lang.String str69 = uRL64.getProtocol();
        int int70 = uRL64.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100" + "'", str67, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!://:100" + "'", str68, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test12255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12255");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        java.lang.String str43 = uRL41.getFile();
        java.net.URL uRL45 = new java.net.URL(uRL41, "hi!://[:100]:52hi!");
        java.net.URL uRL47 = new java.net.URL(uRL41, "hi!://:100/[hi!://:100/hi!]:10");
        java.lang.String str48 = uRL41.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test12256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12256");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive26.getFilteredArchive(entryRenameFilter29);
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        explodedArchive36.filtered = false;
        java.util.jar.Manifest manifest42 = explodedArchive36.manifest;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        explodedArchive36.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap52);
        explodedArchive26.entries = asciiBytesMap52;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap58);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive59.new FileEntry();
        explodedArchive59.filtered = true;
        explodedArchive59.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive59.getNestedArchives(entryFilter65);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(archiveList66);
    }

    @Test
    public void test12257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12257");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        boolean boolean10 = explodedArchive4.filtered;
        java.util.jar.Manifest manifest11 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive4.new FileEntry();
        java.lang.String str13 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("[/hi!://:100/archive]", "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[archive://:10:100]:1[hi!://:100/:100]", 35, "/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals(uRL15.toString(), "[/hi!://:100/archive]://[archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[archive://:10:100]:1[hi!://:100/:100]]:35/hi!://:100/archive:///archive:0hi!://:100");
    }

    @Test
    public void test12258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12258");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive25.getFilteredArchive(entryRenameFilter28);
        java.io.File file30 = null;
        explodedArchive25.root = file30;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive25.getNestedArchives(entryFilter32);
        java.io.File file34 = null;
        explodedArchive25.root = file34;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archive29);
        org.junit.Assert.assertNotNull(archiveList33);
    }

    @Test
    public void test12259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12259");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.io.File file15 = null;
        explodedArchive8.root = file15;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive8.getFilteredArchive(entryRenameFilter17);
        java.lang.Class<?> wildcardClass19 = archive18.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test12260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12260");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[hi!://:100/hi!://:100/:100]:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12261");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        java.io.File file25 = explodedArchive0.root;
        java.util.jar.Manifest manifest26 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(manifest26);
    }

    @Test
    public void test12262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12262");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        java.lang.String str6 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
    }

    @Test
    public void test12263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12263");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.getFile();
        java.lang.String str33 = uRL27.getRef();
        boolean boolean34 = uRL15.sameFile(uRL27);
        java.net.URL uRL36 = new java.net.URL(uRL15, "hi!://:100/hi!");
        int int37 = uRL15.getPort();
        java.lang.String str38 = uRL15.getAuthority();
        java.lang.String str39 = uRL15.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + ":100" + "'", str38, ":100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test12264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12264");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        org.springframework.boot.loader.archive.Archive archive8 = explodedArchive0.getFilteredArchive(entryRenameFilter7);
        java.lang.Class<?> wildcardClass9 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archive8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test12265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12265");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.getName();
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        java.io.File file14 = null;
        fileEntry4.file = file14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(asciiBytes17);
    }

    @Test
    public void test12266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12266");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL42 = new java.net.URL(uRL40, "archive");
        java.net.URL uRL44 = new java.net.URL(uRL42, "[hi!://:100/:100]:100");
        java.lang.String str45 = uRL44.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection46 = uRL44.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/[hi!://:100/:100]:100");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test12267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12267");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive11.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive11.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
    }

    @Test
    public void test12268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12268");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        java.io.File file9 = null;
        fileEntry7.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry7.getName();
        java.io.File file13 = null;
        fileEntry7.file = file13;
        java.io.File file15 = null;
        fileEntry7.file = file15;
        java.io.File file17 = fileEntry7.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = fileEntry7.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test12269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12269");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = explodedArchive0.root;
        explodedArchive0.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.lang.String str20 = explodedArchive14.toString();
        java.util.jar.Manifest manifest21 = explodedArchive14.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        explodedArchive0.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
    }

    @Test
    public void test12270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12270");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        int int12 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.net.URL uRL33 = new java.net.URL(uRL27, "");
        java.io.File file35 = null;
        java.io.File file36 = null;
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(":100", "archive://:10archive", (int) (short) -1, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL52 = new java.net.URL(uRL9, "hi!://:100/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.io.File file58 = null;
        java.io.File file59 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, asciiBytesMap68);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL72 = new java.net.URL(uRL52, "/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.lang.String str73 = uRL72.getProtocol();
        java.net.URL uRL75 = new java.net.URL(uRL72, "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        java.lang.String str76 = uRL75.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertEquals(uRL71.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test12271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12271");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        java.io.File file29 = explodedArchive26.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap30);
        java.io.File file32 = null;
        explodedArchive31.root = file32;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive31.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test12272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12272");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getHost();
        int int41 = uRL38.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getFile();
        int int53 = uRL51.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getQuery();
        java.lang.String str66 = uRL64.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL(uRL51, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str80 = uRL51.toExternalForm();
        boolean boolean81 = uRL38.sameFile(uRL51);
        java.lang.String str82 = uRL38.getFile();
        java.lang.String str83 = uRL38.getRef();
        java.lang.String str84 = uRL38.getAuthority();
        java.lang.String str85 = uRL38.getPath();
        boolean boolean86 = uRL27.sameFile(uRL38);
        java.net.URL uRL88 = new java.net.URL(uRL38, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        int int89 = uRL88.getDefaultPort();
        java.net.URL uRL91 = new java.net.URL(uRL88, "hi!://:100/hi!://:100");
        java.lang.String str92 = uRL91.getProtocol();
        java.lang.String str93 = uRL91.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + ":100" + "'", str28, ":100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!://:100" + "'", str80, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ":100" + "'", str84, ":100");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!" + "'", str92, "hi!");
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test12273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12273");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/archive:///archive:0/:100", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (int) (byte) 1, "[archive://:10archive]:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /archive:///archive:0/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12274");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive26.getFilteredArchive(entryRenameFilter29);
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        explodedArchive36.filtered = false;
        java.util.jar.Manifest manifest42 = explodedArchive36.manifest;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        explodedArchive36.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap52);
        explodedArchive26.entries = asciiBytesMap52;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap58);
        boolean boolean60 = explodedArchive59.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive59.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes62 = fileEntry61.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(asciiBytes62);
    }

    @Test
    public void test12275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12275");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive10.new FilteredURLStreamHandler();
        boolean boolean18 = explodedArchive10.filtered;
        java.io.File file19 = explodedArchive10.root;
        boolean boolean20 = explodedArchive10.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap21);
        explodedArchive0.entries = asciiBytesMap21;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        java.io.File file26 = null;
        explodedArchive0.root = file26;
        java.util.jar.Manifest manifest28 = explodedArchive0.getManifest();
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest28);
    }

    @Test
    public void test12276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12276");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        java.io.File file12 = null;
        explodedArchive11.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = null;
        fileEntry14.name = asciiBytes15;
        java.io.File file17 = fileEntry14.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry14.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = null;
        fileEntry14.name = asciiBytes19;
        java.io.File file21 = fileEntry14.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test12277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12277");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        boolean boolean6 = explodedArchive1.filtered;
        boolean boolean7 = explodedArchive1.filtered;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        boolean boolean10 = explodedArchive1.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive1.getEntries();
        boolean boolean12 = explodedArchive1.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap13);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(entryCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
    }

    @Test
    public void test12278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12278");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry8.getName();
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry8.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry8.getName();
        java.io.File file15 = null;
        fileEntry8.file = file15;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test12279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12279");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        java.io.File file12 = null;
        explodedArchive0.root = file12;
        java.io.File file14 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test12280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12280");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file16 = null;
        explodedArchive0.root = file16;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter18 = null;
        org.springframework.boot.loader.archive.Archive archive19 = explodedArchive0.getFilteredArchive(entryRenameFilter18);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archive19);
    }

    @Test
    public void test12281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12281");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.io.File file8 = explodedArchive0.root;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry11.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry11.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test12282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12282");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL15.getQuery();
        java.lang.String str34 = uRL15.getFile();
        java.lang.String str35 = uRL15.getProtocol();
        java.lang.String str36 = uRL15.getAuthority();
        java.lang.String str37 = uRL15.getAuthority();
        java.lang.String str38 = uRL15.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ":100" + "'", str36, ":100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ":100" + "'", str37, ":100");
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test12283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12283");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry8.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry8.name = asciiBytes10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test12284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12284");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        java.lang.String str18 = uRL9.getFile();
        java.lang.String str19 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL29, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getFile();
        boolean boolean55 = uRL43.sameFile(uRL53);
        int int56 = uRL53.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getQuery();
        java.lang.String str68 = uRL66.getRef();
        java.lang.String str69 = uRL66.getRef();
        java.net.URL uRL71 = new java.net.URL(uRL66, "hi!");
        boolean boolean72 = uRL53.sameFile(uRL71);
        java.lang.String str73 = uRL71.getAuthority();
        java.lang.String str74 = uRL71.getAuthority();
        java.lang.String str75 = uRL71.getRef();
        java.lang.String str76 = uRL71.getProtocol();
        boolean boolean77 = uRL9.sameFile(uRL71);
        java.lang.String str78 = uRL71.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + ":100" + "'", str73, ":100");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ":100" + "'", str74, ":100");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!://:100/hi!" + "'", str78, "hi!://:100/hi!");
    }

    @Test
    public void test12285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12285");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.net.URL uRL33 = new java.net.URL(uRL13, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str34 = uRL13.getFile();
        java.lang.String str35 = uRL13.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getQuery();
        java.lang.String str47 = uRL45.getRef();
        java.lang.String str48 = uRL45.getRef();
        java.net.URL uRL50 = new java.net.URL(uRL45, "hi!");
        boolean boolean51 = uRL13.sameFile(uRL50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str66 = explodedArchive65.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive65.getEntries();
        java.util.jar.Manifest manifest68 = explodedArchive65.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str71 = uRL70.getQuery();
        java.lang.String str72 = uRL70.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str79 = explodedArchive78.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection80 = explodedArchive78.getEntries();
        java.util.jar.Manifest manifest81 = explodedArchive78.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL84 = new java.net.URL(uRL70, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL85 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL86 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL87 = new java.net.URL(uRL50, "hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL88 = new java.net.URL("hi!:1", "hi!://:100/hi!:1", 52, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        int int89 = uRL88.getDefaultPort();
        java.lang.String str90 = uRL88.getFile();
        java.lang.String str91 = uRL88.toExternalForm();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNull(manifest68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "archive" + "'", str79, "archive");
        org.junit.Assert.assertNotNull(entryCollection80);
        org.junit.Assert.assertNull(manifest81);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL86.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive" + "'", str90, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive" + "'", str91, "hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
    }

    @Test
    public void test12286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12286");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive26.getFilteredArchive(entryRenameFilter29);
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive26.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive26.getFilteredArchive(entryRenameFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap37);
        explodedArchive38.filtered = false;
        explodedArchive38.filtered = false;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archive36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
    }

    @Test
    public void test12287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12287");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry10.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry10.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry10.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry10.name = asciiBytes14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test12288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12288");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive17.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive17.getFilteredArchive(entryRenameFilter22);
        java.io.File file24 = null;
        explodedArchive17.root = file24;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive17.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive17.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive17.entries;
        java.lang.Class<?> wildcardClass29 = asciiBytesMap28.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archive23);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test12289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12289");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.getName();
        java.io.File file10 = null;
        fileEntry4.file = file10;
        java.io.File file12 = null;
        fileEntry4.file = file12;
        java.io.File file14 = fileEntry4.file;
        java.io.File file15 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test12290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12290");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        java.lang.String str28 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test12291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12291");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getFile();
        java.lang.String str31 = uRL28.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getPath();
        java.lang.String str44 = uRL42.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.net.URL uRL56 = new java.net.URL(uRL42, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive62.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL70 = new java.net.URL(uRL56, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL71 = new java.net.URL(uRL28, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.io.File file73 = null;
        java.io.File file74 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter77 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList78 = explodedArchive75.getNestedArchives(entryFilter77);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter79 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList80 = explodedArchive75.getNestedArchives(entryFilter79);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive75.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file74, asciiBytesMap81);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap83 = explodedArchive82.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive(file73, asciiBytesMap83);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler85 = explodedArchive84.new FilteredURLStreamHandler();
        java.net.URL uRL86 = new java.net.URL(uRL71, "[hi!://:100/archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.Proxy proxy87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection88 = uRL86.openConnection(proxy87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive://:10archive" + "'", str31, "archive://:10archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertEquals(uRL69.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), "archive://:10/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(archiveList78);
        org.junit.Assert.assertNotNull(archiveList80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
        org.junit.Assert.assertNotNull(asciiBytesMap83);
        org.junit.Assert.assertEquals(uRL86.toString(), "archive://:10/archive://[hi!://:100/hi!]:1/[hi!://:100/archive]:100");
    }

    @Test
    public void test12292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12292");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive14.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        java.lang.String str21 = uRL19.getPath();
        boolean boolean22 = uRL9.sameFile(uRL19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        int int40 = uRL37.getPort();
        java.lang.String str41 = uRL37.getProtocol();
        java.lang.String str42 = uRL37.getPath();
        java.lang.String str43 = uRL37.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getFile();
        int int56 = uRL54.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str68 = uRL67.getQuery();
        java.lang.String str69 = uRL67.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        java.util.jar.Manifest manifest78 = explodedArchive75.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL(uRL67, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL82 = new java.net.URL(uRL54, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL83 = new java.net.URL(uRL37, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL84 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL85 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str86 = uRL85.getQuery();
        java.lang.String str87 = uRL85.getPath();
        java.lang.String str88 = uRL85.getProtocol();
        java.lang.String str89 = uRL85.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertNull(manifest78);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL84.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://hi!:1/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str87, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!://hi!:1/://[archive://:10archive]:100archive://:10archive" + "'", str89, "hi!://hi!:1/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test12293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12293");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.io.File file29 = null;
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap40);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL27, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL(":100", "archive://:10archive", (int) (short) -1, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL46 = new java.net.URL("hi!://[hi!://:100/hi!]:0archive://:10:100", "archive://:10archive", (int) (byte) -1, "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL47 = new java.net.URL("/:52", "/hi!://hi!:1hi!", 52, "[/hi!://:100/archive]:32", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream48 = uRL47.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL45.toString(), ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://[hi!://:100/hi!]:0archive://:10:100://[archive://:10archive][hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals(uRL47.toString(), "/:52://[/hi!://hi!:1hi!]:52[/hi!://:100/archive]:32");
    }

    @Test
    public void test12294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12294");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getQuery();
        java.net.URI uRI30 = uRL28.toURI();
        java.lang.String str31 = uRL28.getFile();
        java.lang.String str32 = uRL28.getHost();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(uRI30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!://:100" + "'", str31, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/archive" + "'", str32, "/archive");
    }

    @Test
    public void test12295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12295");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/archive:0", "/:100", 52, "hi!://:100/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12296");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getHost();
        int int41 = uRL9.getPort();
        int int42 = uRL9.getPort();
        java.lang.String str43 = uRL9.getProtocol();
        java.lang.String str44 = uRL9.getPath();
        java.net.URL uRL46 = new java.net.URL(uRL9, "[hi!://:100/archive]:100");
        java.lang.String str47 = uRL46.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/[hi!://:100/archive]:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ":100" + "'", str47, ":100");
    }

    @Test
    public void test12297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12297");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest14 = null;
        explodedArchive11.manifest = manifest14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive16.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry20.getName();
        java.io.File file22 = fileEntry20.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = null;
        fileEntry20.name = asciiBytes23;
        java.io.File file25 = fileEntry20.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = fileEntry20.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = fileEntry20.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive28 = explodedArchive11.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNull(asciiBytes21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(asciiBytes26);
        org.junit.Assert.assertNull(asciiBytes27);
    }

    @Test
    public void test12298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12298");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        java.util.jar.Manifest manifest27 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive25.getNestedArchives(entryFilter28);
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive25.buildEntries(file30, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNotNull(archiveList29);
    }

    @Test
    public void test12299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12299");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/:100]:0", "/hi!://hi!:1hi!", (int) 'a', "archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/:100]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12300");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        explodedArchive0.filtered = true;
        java.io.File file14 = explodedArchive0.root;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        boolean boolean22 = explodedArchive17.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive17.entries;
        explodedArchive0.entries = asciiBytesMap24;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
    }

    @Test
    public void test12301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12301");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        java.lang.String str19 = uRL15.getProtocol();
        java.lang.String str20 = uRL15.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test12302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12302");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[/hi!://[hi!://:100/hi!]:1/archive]:97");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12303");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        explodedArchive0.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archive11);
    }

    @Test
    public void test12304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12304");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        java.lang.String str18 = uRL9.getFile();
        java.lang.String str19 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getRef();
        java.lang.String str32 = uRL29.getRef();
        java.lang.String str33 = uRL29.toExternalForm();
        int int34 = uRL29.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL29, "hi!://:100/hi!://:100", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str63 = uRL48.getAuthority();
        java.lang.String str64 = uRL48.getUserInfo();
        java.lang.String str65 = uRL48.getRef();
        boolean boolean66 = uRL37.sameFile(uRL48);
        java.net.URL uRL68 = new java.net.URL(uRL48, "hi!://:100/:100");
        boolean boolean69 = uRL9.sameFile(uRL48);
        int int70 = uRL48.getDefaultPort();
        java.net.Proxy proxy71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection72 = uRL48.openConnection(proxy71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + ":100" + "'", str19, ":100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!://:100" + "'", str33, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ":100" + "'", str63, ":100");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test12305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12305");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.io.File file8 = null;
        fileEntry7.file = file8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry7.getName();
        java.io.File file11 = fileEntry7.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry7.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fileEntry7.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test12306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12306");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getPath();
        java.lang.String str19 = uRL17.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive37.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL(uRL31, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL46 = new java.net.URL("/hi!:1", "[hi!://:100/hi!]:0", (int) 'a', "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL47 = new java.net.URL("[/:100]:0", "/archive:0", 32, "hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertEquals(uRL44.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "/hi!:1://[hi!://:100/hi!]:0:97hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "[/:100]:0://[/archive:0]:32hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
    }

    @Test
    public void test12307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12307");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/[hi!://:100/hi!]:100", "[://[archive://:10archive]:100archive://:10archive]", "archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[hi!://:100/hi!]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12308");
        java.lang.String[] strArray29 = new java.lang.String[] { "/hi!://:100/archive", "archive://:10archive", "://[hi!://:100/:100]:100/hi!://:100", "[hi!://:100/:100]:0", "/hi!://:100/hi!", "[hi!://:100/hi!]", "[hi!://:100/hi!]:0", "[hi!:1]", "hi!://:100/archive", "/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "hi!://:100/archive", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[hi!://:100/hi!]", "/:100", "/archive:///archive:0hi!://:100", "/hi!://:100/hi!://:100", "hi!://:100/archive:///archive:1hi!://:100/archive", "hi!://:100/hi!", "hi!://:100/hi!:1", "://[hi!://:100/:100]:100/hi!://:100", "hi!://:100/hi!://:100/hi!://:100/hi!://:100", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "hi!://:100/hi!://:100/archive", "[hi!://:100/archive]:100", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", "hi!://:100/hi!://:100", "[archive://:10archive]:100", "[/:100]:0" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet30;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet30;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet30;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet30;
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test12309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12309");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = null;
        explodedArchive3.entries = asciiBytesMap7;
        boolean boolean9 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive3.new FileEntry();
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive3.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap22);
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        java.lang.String str34 = explodedArchive28.toString();
        java.util.jar.Manifest manifest35 = explodedArchive28.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap36);
        explodedArchive26.entries = asciiBytesMap36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap36);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive40.entries;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive40.manifest = manifest47;
        boolean boolean49 = explodedArchive40.filtered;
        java.util.jar.Manifest manifest50 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive40.getNestedArchives(entryFilter51);
        explodedArchive40.filtered = false;
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive57.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter61 = null;
        org.springframework.boot.loader.archive.Archive archive62 = explodedArchive57.getFilteredArchive(entryRenameFilter61);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive57.getNestedArchives(entryFilter63);
        java.io.File file65 = null;
        java.io.File file66 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive67.getNestedArchives(entryFilter71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive74.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap75);
        explodedArchive57.entries = asciiBytesMap75;
        explodedArchive40.entries = asciiBytesMap75;
        explodedArchive39.entries = asciiBytesMap75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap75);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNotNull(archive62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
    }

    @Test
    public void test12310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12310");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.lang.String str7 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive1.entries;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive10.getNestedArchives(entryFilter17);
        java.io.File file19 = null;
        explodedArchive10.root = file19;
        java.io.File file21 = null;
        explodedArchive10.root = file21;
        java.io.File file23 = explodedArchive10.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive10.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap27);
        explodedArchive1.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap27);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
    }

    @Test
    public void test12311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12311");
        java.net.URLConnection.setDefaultRequestProperty("/[hi!://:100/hi!://:100/hi!://:100/archive", "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1");
    }

    @Test
    public void test12312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12312");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.name;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test12313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12313");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getDefaultPort();
        java.lang.String str45 = uRL41.getAuthority();
        java.lang.String str46 = uRL41.getRef();
        java.net.URL uRL48 = new java.net.URL(uRL41, "[hi!://:100/hi!]:100");
        int int49 = uRL48.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/[hi!://:100/hi!]:100");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test12314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12314");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.lang.String str2 = explodedArchive0.toString();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(archiveList5);
    }

    @Test
    public void test12315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12315");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry2.getName();
        java.io.File file8 = fileEntry2.getFile();
        java.io.File file9 = fileEntry2.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry2.getName();
        java.io.File file11 = null;
        fileEntry2.file = file11;
        java.io.File file13 = fileEntry2.getFile();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test12316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12316");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest18 = null;
        explodedArchive11.manifest = manifest18;
        java.io.File file20 = explodedArchive11.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive11.getNestedArchives(entryFilter22);
        java.io.File file24 = explodedArchive11.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(file24);
    }

    @Test
    public void test12317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12317");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = fileEntry12.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(asciiBytes19);
    }

    @Test
    public void test12318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12318");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.lang.String str19 = explodedArchive11.toString();
        java.util.jar.Manifest manifest20 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive11.new FileEntry();
        java.io.File file22 = null;
        fileEntry21.file = file22;
        java.io.File file24 = null;
        fileEntry21.file = file24;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNull(manifest20);
    }

    @Test
    public void test12319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12319");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!");
        java.lang.String str15 = uRL14.getRef();
        java.lang.String str16 = uRL14.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL14, "/hi!");
        java.lang.String str19 = uRL14.getPath();
        java.lang.String str20 = uRL14.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
    }

    @Test
    public void test12320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12320");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getFilteredArchive(entryRenameFilter44);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter47 = null;
        org.springframework.boot.loader.archive.Archive archive48 = explodedArchive0.getFilteredArchive(entryRenameFilter47);
        java.util.jar.Manifest manifest49 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNotNull(archive48);
        org.junit.Assert.assertNull(manifest49);
    }

    @Test
    public void test12321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12321");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!");
        java.lang.String str15 = uRL9.getFile();
        int int16 = uRL9.getPort();
        java.net.Proxy proxy17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection18 = uRL9.openConnection(proxy17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test12322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12322");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive17.entries;
        java.util.jar.Manifest manifest22 = explodedArchive17.getManifest();
        explodedArchive17.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive17.entries;
        java.util.jar.Manifest manifest26 = explodedArchive17.manifest;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(manifest26);
    }

    @Test
    public void test12323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12323");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        explodedArchive11.filtered = true;
        java.io.File file17 = explodedArchive11.root;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive11.manifest = manifest18;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test12324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12324");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.toExternalForm();
        java.net.URL uRL32 = new java.net.URL(uRL28, "/[/hi!://:100/archive]://[:100]:52:100/:100");
        java.lang.String str33 = uRL28.getHost();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/archive:///archive:0hi!://:100" + "'", str30, "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL32.toString(), "/archive:///archive:0/[/hi!://:100/archive]://[:100]:52:100/:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/archive" + "'", str33, "/archive");
    }

    @Test
    public void test12325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12325");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        boolean boolean11 = explodedArchive8.filtered;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive8.new FileEntry();
        java.util.jar.Manifest manifest15 = explodedArchive8.getManifest();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test12326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12326");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        explodedArchive0.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL14 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(archive13);
    }

    @Test
    public void test12327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12327");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        java.io.File file8 = fileEntry4.file;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test12328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12328");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        int int54 = uRL51.getPort();
        java.lang.String str55 = uRL51.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
    }

    @Test
    public void test12329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12329");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.lang.String str10 = explodedArchive0.toString();
        java.io.File file11 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test12330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12330");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive0.manifest = manifest20;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter25 = null;
        org.springframework.boot.loader.archive.Archive archive26 = explodedArchive0.getFilteredArchive(entryRenameFilter25);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNotNull(archive26);
    }

    @Test
    public void test12331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12331");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        boolean boolean6 = explodedArchive1.filtered;
        boolean boolean7 = explodedArchive1.filtered;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive1.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str14 = explodedArchive13.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = null;
        explodedArchive13.entries = asciiBytesMap15;
        java.lang.String str17 = explodedArchive13.toString();
        java.io.File file18 = null;
        explodedArchive13.root = file18;
        java.io.File file20 = explodedArchive13.root;
        java.lang.String str21 = explodedArchive13.toString();
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.lang.String str29 = explodedArchive23.toString();
        java.util.jar.Manifest manifest30 = explodedArchive23.manifest;
        java.io.File file31 = null;
        explodedArchive23.root = file31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.lang.String str39 = explodedArchive33.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive33.new FilteredURLStreamHandler();
        java.io.File file41 = null;
        java.io.File file42 = null;
        java.io.File file43 = null;
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap53);
        explodedArchive33.entries = asciiBytesMap53;
        explodedArchive23.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap53);
        explodedArchive13.entries = asciiBytesMap53;
        explodedArchive1.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap53);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
    }

    @Test
    public void test12332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12332");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean5 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(archiveList7);
    }

    @Test
    public void test12333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12333");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL59 = new java.net.URL(uRL39, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str60 = uRL39.getFile();
        java.lang.String str61 = uRL39.getProtocol();
        java.lang.String str62 = uRL39.getAuthority();
        boolean boolean63 = uRL22.sameFile(uRL39);
        java.lang.String str64 = uRL22.getPath();
        java.lang.String str65 = uRL22.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test12334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12334");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str44 = uRL43.getQuery();
        java.lang.String str45 = uRL43.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL43, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str58 = uRL43.getFile();
        boolean boolean59 = uRL33.sameFile(uRL43);
        java.net.URLStreamHandler uRLStreamHandler61 = null;
        java.net.URL uRL62 = new java.net.URL(uRL43, "/archive", uRLStreamHandler61);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection63 = uRL43.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL33.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
    }

    @Test
    public void test12335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12335");
        java.net.URL uRL0 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive3.new FileEntry();
        java.lang.String str8 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive3.new FileEntry();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive3.manifest = manifest10;
        java.lang.String str12 = explodedArchive3.toString();
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive15.getNestedArchives(entryFilter22);
        java.io.File file24 = null;
        java.io.File file25 = null;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap35);
        explodedArchive15.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap40);
        explodedArchive3.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap40);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive43.new FilteredURLStreamHandler();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL45 = new java.net.URL(uRL0, "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://[archive://:10archive]:10/[/hi!://:100/archive]://[:100]:52:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler44);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://[archive://:10archive]:10/[/hi!://:100/archive]://[:100]:52:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
    }

    @Test
    public void test12336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12336");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        java.net.URL uRL29 = new java.net.URL(uRL9, "hi!://:100/hi!://:100");
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getFile();
        java.net.URL uRL33 = new java.net.URL(uRL29, "/hi!:1");
        java.lang.String str34 = uRL29.getQuery();
        java.lang.String str35 = uRL29.getRef();
        java.lang.String str36 = uRL29.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!://:100/hi!://:100" + "'", str31, "/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + ":100" + "'", str36, ":100");
    }

    @Test
    public void test12337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12337");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        java.io.File file28 = explodedArchive25.root;
        java.util.jar.Manifest manifest29 = explodedArchive25.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive25.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive25.getFilteredArchive(entryRenameFilter31);
        boolean boolean33 = explodedArchive25.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test12338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12338");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive5.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry9.getName();
        java.io.File file11 = fileEntry9.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry9.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry9.getName();
        java.io.File file14 = null;
        fileEntry9.file = file14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry9.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry9.name = asciiBytes17;
        java.io.File file19 = null;
        fileEntry9.file = file19;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive21 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test12339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12339");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        java.io.File file8 = fileEntry4.getFile();
        java.io.File file9 = fileEntry4.file;
        java.io.File file10 = null;
        fileEntry4.file = file10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test12340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12340");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive43.getNestedArchives(entryFilter44);
        java.io.File file46 = null;
        explodedArchive43.root = file46;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList45);
    }

    @Test
    public void test12341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12341");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        java.util.jar.Manifest manifest8 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        java.io.File file10 = null;
        explodedArchive1.root = file10;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        explodedArchive23.filtered = true;
        java.util.jar.Manifest manifest26 = explodedArchive23.getManifest();
        java.util.jar.Manifest manifest27 = explodedArchive23.manifest;
        java.io.File file28 = null;
        explodedArchive23.root = file28;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        explodedArchive23.entries = asciiBytesMap39;
        explodedArchive1.entries = asciiBytesMap39;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive1.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive44.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
    }

    @Test
    public void test12342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12342");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        int int10 = uRL9.getPort();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test12343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12343");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/archive://:32/archive", "hi!://:100/archive://[hi!://:100/hi!]:1/hi!", "/hi!://:100/:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /archive://:32/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12344");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = null;
        fileEntry12.name = asciiBytes18;
        java.io.File file20 = fileEntry12.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = fileEntry12.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(asciiBytes17);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test12345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12345");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getDefaultPort();
        java.lang.String str45 = uRL41.getAuthority();
        int int46 = uRL41.getDefaultPort();
        int int47 = uRL41.getDefaultPort();
        java.lang.String str48 = uRL41.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test12346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12346");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file5 = null;
        java.io.File file6 = null;
        java.io.File file7 = null;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap18);
        explodedArchive0.entries = asciiBytesMap18;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive0.getFilteredArchive(entryRenameFilter24);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archive25);
    }

    @Test
    public void test12347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12347");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = null;
        explodedArchive4.entries = asciiBytesMap8;
        java.io.File file10 = explodedArchive4.root;
        java.io.File file11 = explodedArchive4.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        explodedArchive4.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        explodedArchive23.filtered = false;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
    }

    @Test
    public void test12348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12348");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getAuthority();
        java.lang.String str11 = uRL9.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        java.lang.String str37 = uRL35.getPath();
        java.lang.String str38 = uRL35.getPath();
        java.lang.String str39 = uRL35.toExternalForm();
        boolean boolean40 = uRL9.sameFile(uRL35);
        java.lang.String str41 = uRL9.toExternalForm();
        java.lang.String str42 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:1" + "'", str10, "hi!:1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!://hi!:1hi!" + "'", str11, "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/hi!" + "'", str39, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://hi!:1hi!" + "'", str41, "hi!://hi!:1hi!");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test12349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12349");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL59 = new java.net.URL(uRL39, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str60 = uRL39.getFile();
        java.lang.String str61 = uRL39.getProtocol();
        java.lang.String str62 = uRL39.getAuthority();
        boolean boolean63 = uRL22.sameFile(uRL39);
        java.net.URL uRL65 = new java.net.URL(uRL22, "");
        java.lang.String str66 = uRL65.getQuery();
        java.net.URL uRL68 = new java.net.URL(uRL65, "");
        java.lang.String str69 = uRL65.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI70 = uRL65.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test12350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12350");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.io.File file11 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test12351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12351");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive33.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive33.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL17, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL41 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL42 = new java.net.URL("/:52", "hi!://:100/hi!://:100/hi!://:100/hi!://hi!", (int) (byte) 0, "[archive://:10:100]", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL42.toString(), "/:52://[hi!://:100/hi!://:100/hi!://:100/hi!://hi!]:0[archive://:10:100]");
    }

    @Test
    public void test12352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12352");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry6.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry6.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry6.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test12353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12353");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test12354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12354");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.io.File file2 = explodedArchive0.root;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test12355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12355");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter18 = null;
        org.springframework.boot.loader.archive.Archive archive19 = explodedArchive12.getFilteredArchive(entryRenameFilter18);
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive21.getNestedArchives(entryFilter28);
        java.io.File file30 = null;
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap41);
        explodedArchive21.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap41);
        explodedArchive12.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap41);
        boolean boolean48 = explodedArchive47.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archive19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(entryCollection49);
    }

    @Test
    public void test12356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12356");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        int int18 = uRL16.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL16, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URLStreamHandler uRLStreamHandler30 = null;
        java.net.URL uRL31 = new java.net.URL(uRL28, "/hi!://[hi!://:100/hi!]:1/archive", uRLStreamHandler30);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:1/archive");
    }

    @Test
    public void test12357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12357");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.io.File file4 = explodedArchive0.root;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        org.springframework.boot.loader.archive.Archive archive8 = explodedArchive0.getFilteredArchive(entryRenameFilter7);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archive8);
    }

    @Test
    public void test12358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12358");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        boolean boolean9 = explodedArchive0.filtered;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        explodedArchive13.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive13.getNestedArchives(entryFilter22);
        explodedArchive13.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap26);
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        java.util.jar.Manifest manifest41 = explodedArchive39.getManifest();
        java.lang.String str42 = explodedArchive39.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive39.entries;
        explodedArchive28.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive45.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive47 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap43);
    }

    @Test
    public void test12359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12359");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.name;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test12360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12360");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive33.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive33.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL17, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL41 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL42 = new java.net.URL("hi!://hi!:1hi!", "hi!://:100/hi!://:100/hi!", (int) (short) 10, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str43 = uRL42.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        explodedArchive45.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive45.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive45.getNestedArchives(entryFilter53);
        java.util.jar.Manifest manifest55 = explodedArchive45.getManifest();
        explodedArchive45.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL(uRL42, "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL42.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection61 = uRL42.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://hi!:1hi!://[hi!://:100/hi!://:100/hi!]:10hi!://:100/archive");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://hi!:1hi!://[hi!://:100/hi!://:100/hi!]:10hi!://:100/hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test12361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12361");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive28.new FileEntry();
        java.lang.String str33 = explodedArchive28.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive28.new FileEntry();
        explodedArchive28.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL("/archive:///archive:0hi!://:100", "/:100", (int) (byte) 0, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.lang.String str48 = explodedArchive42.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive42.new FilteredURLStreamHandler();
        java.io.File file50 = null;
        java.io.File file51 = null;
        java.io.File file52 = null;
        java.io.File file53 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive54.getNestedArchives(entryFilter58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file53, asciiBytesMap60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive61.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, asciiBytesMap62);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap62);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap62);
        explodedArchive42.entries = asciiBytesMap62;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive42.new FilteredURLStreamHandler();
        java.io.File file68 = explodedArchive42.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL(uRL9, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str71 = uRL70.getUserInfo();
        java.lang.String str72 = uRL70.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "/archive:///archive:0hi!://:100://[/:100]:0hi!://:100/hi!:1");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ":100" + "'", str72, ":100");
    }

    @Test
    public void test12362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12362");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/hi!:1]", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!]:32hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (int) (byte) 100, "hi!://:100/hi!://:100/hi!://:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!:1]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12363");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.lang.String str9 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
    }

    @Test
    public void test12364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12364");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive12.new FileEntry();
        java.io.File file14 = explodedArchive12.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        explodedArchive12.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap26);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
    }

    @Test
    public void test12365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12365");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive", "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "hi!://:100/hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12366");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive25.new FileEntry();
        java.util.jar.Manifest manifest29 = explodedArchive25.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter30 = null;
        org.springframework.boot.loader.archive.Archive archive31 = explodedArchive25.getFilteredArchive(entryRenameFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive25.entries;
        java.lang.String str33 = explodedArchive25.toString();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(archive31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
    }

    @Test
    public void test12367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12367");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive0.entries;
        java.util.jar.Manifest manifest18 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNull(manifest18);
    }

    @Test
    public void test12368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12368");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive0.manifest = manifest16;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archive15);
    }

    @Test
    public void test12369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12369");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        java.io.File file3 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive4.new FileEntry();
        java.util.jar.Manifest manifest7 = explodedArchive4.getManifest();
        java.util.jar.Manifest manifest8 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive9.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive9.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive9.manifest = manifest16;
        explodedArchive9.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive9.entries;
        explodedArchive4.entries = asciiBytesMap20;
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive0.new FileEntry();
        boolean boolean24 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test12370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12370");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        java.util.jar.Manifest manifest13 = null;
        explodedArchive8.manifest = manifest13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.lang.String str21 = explodedArchive15.toString();
        java.util.jar.Manifest manifest22 = explodedArchive15.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive15.entries;
        java.io.File file24 = null;
        explodedArchive15.root = file24;
        explodedArchive15.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive28.getFilteredArchive(entryRenameFilter31);
        java.io.File file33 = explodedArchive28.root;
        java.lang.String str34 = explodedArchive28.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive28.entries;
        boolean boolean36 = explodedArchive28.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive28.entries;
        explodedArchive15.entries = asciiBytesMap37;
        explodedArchive8.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive8.new FileEntry();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
    }

    @Test
    public void test12371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12371");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        boolean boolean10 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        java.io.File file14 = null;
        explodedArchive0.root = file14;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
    }

    @Test
    public void test12372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12372");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL66.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        boolean boolean71 = explodedArchive69.filtered;
        java.io.File file72 = explodedArchive69.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL(uRL66, "[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL66.getQuery();
        java.lang.String str76 = uRL66.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI77 = uRL66.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test12373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12373");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive1.new FilteredURLStreamHandler();
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        explodedArchive26.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive26.new FileEntry();
        java.io.File file30 = fileEntry29.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = null;
        fileEntry29.name = asciiBytes31;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test12374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12374");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[hi!://:100/hi!]:0", "hi!://:100/://[hi!://:100/:100]:100/hi!://:100", 1, "[hi!://:100/:100]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[hi!://:100/hi!]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12375");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/archive", "/archive", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        int int12 = uRL11.getDefaultPort();
        java.net.URL uRL14 = new java.net.URL(uRL11, "hi!://:100/archive:///archive:0hi!://:100");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI15 = uRL14.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/archive:///archive:1hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
    }

    @Test
    public void test12376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12376");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry10.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry10.name = asciiBytes12;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = fileEntry10.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test12377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12377");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.toExternalForm();
        java.lang.String str41 = uRL39.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI42 = uRL39.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!://:100/hi!://:100" + "'", str40, "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test12378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12378");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(manifest11);
    }

    @Test
    public void test12379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12379");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = null;
        explodedArchive12.entries = asciiBytesMap16;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive21.new FileEntry();
        java.lang.String str26 = explodedArchive21.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive21.new FileEntry();
        java.util.jar.Manifest manifest28 = null;
        explodedArchive21.manifest = manifest28;
        java.lang.String str30 = explodedArchive21.toString();
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive33.getNestedArchives(entryFilter40);
        java.io.File file42 = null;
        java.io.File file43 = null;
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap53);
        explodedArchive33.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap58);
        explodedArchive21.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap58);
        java.io.File file62 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive63.getNestedArchives(entryFilter65);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive63.new FileEntry();
        java.lang.String str68 = explodedArchive63.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive63.new FileEntry();
        java.util.jar.Manifest manifest70 = null;
        explodedArchive63.manifest = manifest70;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive63.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file62, asciiBytesMap72);
        explodedArchive61.entries = asciiBytesMap72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap72);
        explodedArchive12.entries = asciiBytesMap72;
        explodedArchive0.entries = asciiBytesMap72;
        java.io.File file78 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(asciiBytesMap18);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertNull(file78);
    }

    @Test
    public void test12380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12380");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        java.io.File file17 = null;
        fileEntry16.file = file17;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = fileEntry16.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
    }

    @Test
    public void test12381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12381");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL37 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL38 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str39 = uRL38.toExternalForm();
        java.lang.String str40 = uRL38.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str64 = uRL63.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str67 = explodedArchive66.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive66.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL(uRL63, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL71 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str72 = uRL71.getQuery();
        java.lang.String str73 = uRL71.getQuery();
        java.io.File file79 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter82 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList83 = explodedArchive80.getNestedArchives(entryFilter82);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter84 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList85 = explodedArchive80.getNestedArchives(entryFilter84);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap86 = explodedArchive80.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file79, asciiBytesMap86);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection88 = explodedArchive87.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter89 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList90 = explodedArchive87.getNestedArchives(entryFilter89);
        java.util.jar.Manifest manifest91 = null;
        explodedArchive87.manifest = manifest91;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler93 = explodedArchive87.new FilteredURLStreamHandler();
        java.net.URL uRL94 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[://[archive://:10archive]:100archive://:10archive]:100", (int) '#', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler93);
        java.net.URL uRL95 = new java.net.URL(uRL71, ":10", (java.net.URLStreamHandler) filteredURLStreamHandler93);
        java.net.URL uRL96 = new java.net.URL(uRL38, "[hi!://:100/archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler93);
        java.lang.String str97 = uRL38.getAuthority();
        java.lang.String str98 = uRL38.toString();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!" + "'", str39, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/archive://[hi!://:100/hi!]:1/hi!" + "'", str40, "/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "archive" + "'", str67, "archive");
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(archiveList83);
        org.junit.Assert.assertNotNull(archiveList85);
        org.junit.Assert.assertNotNull(asciiBytesMap86);
        org.junit.Assert.assertNotNull(entryCollection88);
        org.junit.Assert.assertNotNull(archiveList90);
        org.junit.Assert.assertEquals(uRL94.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/:10");
        org.junit.Assert.assertEquals(uRL96.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/[hi!://:100/archive]:100");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[hi!://:100/:100]:0" + "'", str97, "[hi!://:100/:100]:0");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!" + "'", str98, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test12382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12382");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[hi!://:100/hi!]:100", "archive://[/hi!://:100/archive]:32", "archive://:10:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12383");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.io.File file7 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        explodedArchive0.entries = asciiBytesMap14;
        explodedArchive0.filtered = false;
        java.lang.String str18 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive0.getNestedArchives(entryFilter19);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(archiveList20);
    }

    @Test
    public void test12384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12384");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive0.getNestedArchives(entryFilter17);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archiveList18);
    }

    @Test
    public void test12385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12385");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest18 = explodedArchive10.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive10.entries;
        explodedArchive8.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive8.new FileEntry();
        java.util.jar.Manifest manifest22 = null;
        explodedArchive8.manifest = manifest22;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive8.manifest = manifest24;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
    }

    @Test
    public void test12386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12386");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive0.manifest = manifest18;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive0.manifest = manifest23;
        java.util.jar.Manifest manifest25 = explodedArchive0.getManifest();
        java.lang.String str26 = explodedArchive0.toString();
        java.util.jar.Manifest manifest27 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive0.getFilteredArchive(entryRenameFilter28);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNotNull(archive29);
    }

    @Test
    public void test12387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12387");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive29.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getQuery();
        int int39 = uRL37.getPort();
        java.lang.String str40 = uRL37.getUserInfo();
        java.lang.String str41 = uRL37.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertEquals(uRL36.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100/hi!://:100" + "'", str41, "hi!://:100/hi!://:100");
    }

    @Test
    public void test12388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12388");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        boolean boolean26 = uRL9.sameFile(uRL21);
        java.lang.String str27 = uRL9.toExternalForm();
        java.lang.String str28 = uRL9.toExternalForm();
        java.lang.String str29 = uRL9.getProtocol();
        java.lang.String str30 = uRL9.getAuthority();
        java.lang.String str31 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100" + "'", str27, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!://:100" + "'", str28, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + ":100" + "'", str30, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test12389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12389");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getHost();
        java.lang.String str18 = uRL9.getProtocol();
        java.lang.String str19 = uRL9.toExternalForm();
        java.lang.String str20 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.net.URL uRL32 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getHost();
        java.lang.String str35 = uRL32.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.lang.String str46 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getUserInfo();
        java.lang.String str50 = uRL48.getUserInfo();
        java.lang.String str51 = uRL48.getHost();
        boolean boolean52 = uRL32.sameFile(uRL48);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection53 = uRL32.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100" + "'", str19, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str33, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertEquals(uRL48.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test12390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12390");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getUserInfo();
        java.lang.String str20 = uRL16.getPath();
        java.lang.String str21 = uRL16.getUserInfo();
        java.net.URL uRL23 = new java.net.URL(uRL16, "[/:100]:0");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive25.getFilteredArchive(entryRenameFilter28);
        java.io.File file30 = explodedArchive25.root;
        java.lang.String str31 = explodedArchive25.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL(uRL23, "/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.Proxy proxy34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection35 = uRL33.openConnection(proxy34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/[/:100]:0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNotNull(archive29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test12391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12391");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive21.new FilteredURLStreamHandler();
        boolean boolean23 = explodedArchive21.filtered;
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(manifest24);
    }

    @Test
    public void test12392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12392");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
    }

    @Test
    public void test12393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12393");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getPath();
        int int19 = uRL9.getPort();
        java.lang.String str20 = uRL9.getFile();
        java.lang.String str21 = uRL9.getAuthority();
        java.net.URL uRL23 = new java.net.URL(uRL9, "[archive://:10archive]:1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":100" + "'", str21, ":100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/[archive://:10archive]:1");
    }

    @Test
    public void test12394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12394");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive21.getNestedArchives(entryFilter22);
        java.util.jar.Manifest manifest24 = explodedArchive21.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(manifest24);
    }

    @Test
    public void test12395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12395");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://[:100]:52hi!" + "'", str12, "hi!://[:100]:52hi!");
    }

    @Test
    public void test12396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12396");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive10.new FileEntry();
        java.lang.String str14 = explodedArchive10.toString();
        java.lang.String str15 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive10.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.io.File file20 = explodedArchive17.root;
        java.util.jar.Manifest manifest21 = explodedArchive17.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive17.entries;
        explodedArchive10.entries = asciiBytesMap22;
        java.io.File file24 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive10.buildEntries(file24, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
    }

    @Test
    public void test12397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12397");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive8.getFilteredArchive(entryRenameFilter10);
        explodedArchive8.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive8.getNestedArchives(entryFilter14);
        java.io.File file16 = explodedArchive8.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry17.getName();
        java.io.File file19 = null;
        fileEntry17.file = file19;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes18);
    }

    @Test
    public void test12398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12398");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str44 = uRL23.getFile();
        java.lang.String str45 = uRL23.getProtocol();
        java.lang.String str46 = uRL23.getRef();
        boolean boolean47 = uRL11.sameFile(uRL23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        boolean boolean51 = explodedArchive49.filtered;
        java.io.File file52 = explodedArchive49.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL11, "[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getFile();
        int int66 = uRL64.getDefaultPort();
        java.lang.String str67 = uRL64.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str78 = uRL77.getQuery();
        java.lang.String str79 = uRL77.getRef();
        java.lang.String str80 = uRL77.getRef();
        java.lang.String str81 = uRL77.toExternalForm();
        boolean boolean82 = uRL64.sameFile(uRL77);
        int int83 = uRL64.getPort();
        boolean boolean84 = uRL11.sameFile(uRL64);
        java.lang.String str85 = uRL64.getUserInfo();
        java.lang.String str86 = uRL64.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!://:100/hi!]" + "'", str13, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!://:100" + "'", str81, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test12399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12399");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getFile();
        java.lang.String str13 = uRL9.getProtocol();
        int int14 = uRL9.getPort();
        java.net.URL uRL16 = new java.net.URL(uRL9, "[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!");
        java.lang.String str17 = uRL9.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test12400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12400");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        int int14 = uRL9.getPort();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL51 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL52 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str53 = uRL52.toExternalForm();
        java.lang.String str54 = uRL52.getUserInfo();
        java.lang.String str55 = uRL52.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL51.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/:100" + "'", str53, "hi!://:100/:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test12401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12401");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        explodedArchive4.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", "/archive", (int) (short) 0, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL33, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str48 = uRL33.getQuery();
        int int49 = uRL33.getPort();
        java.lang.String str50 = uRL33.getHost();
        java.lang.String str51 = uRL33.toExternalForm();
        boolean boolean52 = uRL23.sameFile(uRL33);
        java.lang.String str53 = uRL33.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI54 = uRL33.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/archive");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!://:100" + "'", str51, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test12402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12402");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive27.new FileEntry();
        explodedArchive27.filtered = false;
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive33.new FileEntry();
        java.lang.String str38 = explodedArchive33.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive33.new FileEntry();
        java.util.jar.Manifest manifest40 = null;
        explodedArchive33.manifest = manifest40;
        java.lang.String str42 = explodedArchive33.toString();
        java.io.File file43 = null;
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive45.getNestedArchives(entryFilter52);
        java.io.File file54 = null;
        java.io.File file55 = null;
        java.io.File file56 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive57.getNestedArchives(entryFilter61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive64.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap65);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap65);
        explodedArchive45.entries = asciiBytesMap65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap70);
        explodedArchive33.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap70);
        explodedArchive27.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap70);
        explodedArchive8.entries = asciiBytesMap70;
        java.lang.Class<?> wildcardClass78 = asciiBytesMap70.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test12403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12403");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        int int12 = uRL9.getPort();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        java.lang.String str15 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100" + "'", str15, "hi!://:100");
    }

    @Test
    public void test12404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12404");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.io.File file12 = explodedArchive0.root;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test12405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12405");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        java.io.File file18 = null;
        explodedArchive0.root = file18;
        java.util.jar.Manifest manifest20 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest21 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(manifest21);
    }

    @Test
    public void test12406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12406");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        java.lang.String str18 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        java.io.File file20 = fileEntry19.file;
        java.io.File file21 = fileEntry19.file;
        java.io.File file22 = fileEntry19.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test12407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12407");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry12.name = asciiBytes14;
        java.io.File file16 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry12.name = asciiBytes17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry12.name = asciiBytes20;
        java.io.File file22 = null;
        fileEntry12.file = file22;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
    }

    @Test
    public void test12408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12408");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL49, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL65 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str66 = uRL33.getQuery();
        boolean boolean67 = uRL9.sameFile(uRL33);
        int int68 = uRL9.getDefaultPort();
        java.lang.String str69 = uRL9.toExternalForm();
        java.net.URL uRL71 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive");
        java.lang.String str72 = uRL9.getPath();
        java.lang.String str73 = uRL9.getRef();
        java.lang.String str74 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100" + "'", str69, "hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test12409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12409");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL37 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL38 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str39 = uRL38.toExternalForm();
        java.lang.String str40 = uRL38.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str64 = uRL63.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str67 = explodedArchive66.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive66.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL(uRL63, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL71 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str72 = uRL71.getQuery();
        java.lang.String str73 = uRL71.getQuery();
        java.io.File file79 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter82 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList83 = explodedArchive80.getNestedArchives(entryFilter82);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter84 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList85 = explodedArchive80.getNestedArchives(entryFilter84);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap86 = explodedArchive80.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file79, asciiBytesMap86);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection88 = explodedArchive87.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter89 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList90 = explodedArchive87.getNestedArchives(entryFilter89);
        java.util.jar.Manifest manifest91 = null;
        explodedArchive87.manifest = manifest91;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler93 = explodedArchive87.new FilteredURLStreamHandler();
        java.net.URL uRL94 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[://[archive://:10archive]:100archive://:10archive]:100", (int) '#', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler93);
        java.net.URL uRL95 = new java.net.URL(uRL71, ":10", (java.net.URLStreamHandler) filteredURLStreamHandler93);
        java.net.URL uRL96 = new java.net.URL(uRL38, "[hi!://:100/archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler93);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream97 = uRL38.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!" + "'", str39, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/archive://[hi!://:100/hi!]:1/hi!" + "'", str40, "/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "archive" + "'", str67, "archive");
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(archiveList83);
        org.junit.Assert.assertNotNull(archiveList85);
        org.junit.Assert.assertNotNull(asciiBytesMap86);
        org.junit.Assert.assertNotNull(entryCollection88);
        org.junit.Assert.assertNotNull(archiveList90);
        org.junit.Assert.assertEquals(uRL94.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/:10");
        org.junit.Assert.assertEquals(uRL96.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/[hi!://:100/archive]:100");
    }

    @Test
    public void test12410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12410");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        explodedArchive0.entries = asciiBytesMap2;
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest6);
    }

    @Test
    public void test12411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12411");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI26 = uRL23.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
    }

    @Test
    public void test12412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12412");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[archive://:10:100]:1[hi!://:100/:100]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12413");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        java.io.File file14 = fileEntry4.getFile();
        java.io.File file15 = null;
        fileEntry4.file = file15;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry4.name;
        java.io.File file18 = null;
        fileEntry4.file = file18;
        java.io.File file20 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = null;
        fileEntry4.name = asciiBytes21;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes17);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test12414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12414");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.io.File file10 = explodedArchive0.root;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.lang.String str20 = explodedArchive14.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive14.new FilteredURLStreamHandler();
        boolean boolean22 = explodedArchive14.filtered;
        java.io.File file23 = explodedArchive14.root;
        java.io.File file24 = null;
        explodedArchive14.root = file24;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive14.manifest = manifest26;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive14.entries;
        java.util.jar.Manifest manifest29 = explodedArchive14.getManifest();
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        boolean boolean33 = explodedArchive31.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter34 = null;
        org.springframework.boot.loader.archive.Archive archive35 = explodedArchive31.getFilteredArchive(entryRenameFilter34);
        explodedArchive31.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive31.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap39);
        explodedArchive14.entries = asciiBytesMap39;
        explodedArchive0.entries = asciiBytesMap39;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(archive35);
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
    }

    @Test
    public void test12415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12415");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!://:100/archive", "hi!", "archive", "/hi!://:100", "/archive", "/hi!", "/hi!://:100/archive", "/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/hi!://:100", "hi!://:100" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet27;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet27;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet27;
        java.lang.Class<?> wildcardClass32 = strSet27.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.lang.String str39 = explodedArchive33.toString();
        java.util.jar.Manifest manifest40 = explodedArchive33.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive33.entries;
        java.io.File file42 = null;
        explodedArchive33.root = file42;
        java.io.File file44 = null;
        java.io.File file45 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive46.getNestedArchives(entryFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive53.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap54);
        explodedArchive55.filtered = true;
        java.util.jar.Manifest manifest58 = explodedArchive55.getManifest();
        java.util.jar.Manifest manifest59 = explodedArchive55.manifest;
        java.io.File file60 = null;
        explodedArchive55.root = file60;
        java.io.File file62 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive63.getNestedArchives(entryFilter65);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive63.getNestedArchives(entryFilter67);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive63.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file62, asciiBytesMap69);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap71 = explodedArchive70.entries;
        explodedArchive55.entries = asciiBytesMap71;
        explodedArchive33.entries = asciiBytesMap71;
        boolean boolean74 = explodedArchive33.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection75 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest76 = explodedArchive33.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter77 = null;
        org.springframework.boot.loader.archive.Archive archive78 = explodedArchive33.getFilteredArchive(entryRenameFilter77);
        java.lang.Class<?> wildcardClass79 = explodedArchive33.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[] { wildcardClass32, wildcardClass79 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = uRL9.getContent(classArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertNotNull(asciiBytesMap71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(entryCollection75);
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertNotNull(archive78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray80);
    }

    @Test
    public void test12416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12416");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive0.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str43 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
    }

    @Test
    public void test12417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12417");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL37 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL38 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str39 = uRL38.getRef();
        java.io.File file45 = null;
        java.io.File file46 = null;
        java.io.File file47 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive48.getNestedArchives(entryFilter50);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive48.getNestedArchives(entryFilter52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive48.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("/archive:///archive:0hi!://:100", "/archive:///archive:0hi!://:100", (int) (byte) 10, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL38, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        int int62 = uRL38.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream63 = uRL38.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertEquals(uRL60.toString(), "/archive:///archive:0hi!://:100://[/archive:///archive:0hi!://:100]:10hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test12418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12418");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.toExternalForm();
        java.lang.String str19 = uRL9.getProtocol();
        int int20 = uRL9.getDefaultPort();
        java.net.URL uRL22 = new java.net.URL(uRL9, "[/hi!:1]");
        java.lang.String str23 = uRL22.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100" + "'", str18, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/[/hi!:1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!://:100/[/hi!:1]" + "'", str23, "hi!://:100/[/hi!:1]");
    }

    @Test
    public void test12419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12419");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100]:10/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100", (int) (short) -1, "hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12420");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        boolean boolean8 = explodedArchive0.filtered;
        java.lang.String str9 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
    }

    @Test
    public void test12421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12421");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive19.manifest = manifest20;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive19.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive19.entries;
        explodedArchive19.filtered = false;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
    }

    @Test
    public void test12422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12422");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry9.name;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(asciiBytes10);
    }

    @Test
    public void test12423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12423");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getRef();
        java.lang.String str32 = uRL9.getHost();
        int int33 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        java.util.jar.Manifest manifest39 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.jar.Manifest manifest42 = null;
        explodedArchive40.manifest = manifest42;
        java.util.jar.Manifest manifest44 = explodedArchive40.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive40.entries;
        explodedArchive35.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter47 = null;
        org.springframework.boot.loader.archive.Archive archive48 = explodedArchive35.getFilteredArchive(entryRenameFilter47);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL60, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.toExternalForm();
        java.lang.String str70 = uRL67.getUserInfo();
        java.lang.String str71 = uRL67.getPath();
        java.lang.String str72 = uRL67.getUserInfo();
        java.net.URL uRL74 = new java.net.URL(uRL67, "[/:100]:0");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter79 = null;
        org.springframework.boot.loader.archive.Archive archive80 = explodedArchive76.getFilteredArchive(entryRenameFilter79);
        java.io.File file81 = explodedArchive76.root;
        java.lang.String str82 = explodedArchive76.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL(uRL74, "/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection85 = filteredURLStreamHandler49.openConnection(uRL84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(archive48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100/hi!" + "'", str69, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/[/:100]:0");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNotNull(archive80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "archive" + "'", str82, "archive");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test12424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12424");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100", "hi!://:100/archive:///archive:1hi!://:100/archive", "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12425");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.getPath();
        java.lang.String str28 = uRL23.toExternalForm();
        java.lang.String str29 = uRL23.getFile();
        int int30 = uRL23.getDefaultPort();
        java.lang.String str31 = uRL23.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.io.File file35 = explodedArchive32.root;
        java.util.jar.Manifest manifest36 = explodedArchive32.getManifest();
        java.io.File file37 = null;
        explodedArchive32.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive32.new FileEntry();
        java.lang.String str40 = explodedArchive32.toString();
        java.util.jar.Manifest manifest41 = explodedArchive32.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive32.new FilteredURLStreamHandler();
        java.lang.String str43 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive32.getFilteredArchive(entryRenameFilter44);
        boolean boolean46 = explodedArchive32.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive32.getEntries();
        boolean boolean48 = uRL23.equals((java.lang.Object) explodedArchive32);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!://:100/hi!" + "'", str28, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test12426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12426");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        java.io.File file12 = explodedArchive10.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL13 = explodedArchive10.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test12427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12427");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive26.getFilteredArchive(entryRenameFilter29);
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        explodedArchive36.filtered = false;
        java.util.jar.Manifest manifest42 = explodedArchive36.manifest;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        explodedArchive36.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap52);
        explodedArchive26.entries = asciiBytesMap52;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap58);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive59.new FileEntry();
        explodedArchive59.filtered = true;
        java.lang.String str63 = explodedArchive59.toString();
        java.io.File file64 = explodedArchive59.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive59.new FilteredURLStreamHandler();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str66 = explodedArchive59.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNull(file64);
    }

    @Test
    public void test12428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12428");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.toExternalForm();
        java.lang.String str40 = uRL37.getRef();
        java.lang.String str41 = uRL37.getUserInfo();
        java.net.Proxy proxy42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection43 = uRL37.openConnection(proxy42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/archive" + "'", str39, "hi!://:100/archive");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test12429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12429");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        int int11 = uRL9.getPort();
        java.lang.String str12 = uRL9.getFile();
        java.lang.String str13 = uRL9.getAuthority();
        java.lang.String str14 = uRL9.getQuery();
        java.lang.String str15 = uRL9.toExternalForm();
        java.lang.String str16 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str41 = uRL26.getAuthority();
        java.lang.String str42 = uRL26.getUserInfo();
        java.lang.String str43 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str63 = uRL62.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str66 = explodedArchive65.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive65.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL(uRL62, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getAuthority();
        int int71 = uRL69.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive73.getNestedArchives(entryFilter75);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter77 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList78 = explodedArchive73.getNestedArchives(entryFilter77);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap79 = explodedArchive73.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive73.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL(uRL69, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL82 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL83 = new java.net.URL("hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) -1, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL84 = new java.net.URL(uRL26, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        boolean boolean85 = uRL9.sameFile(uRL84);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + ":100" + "'", str13, ":100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100" + "'", str15, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + ":100" + "'", str41, ":100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ":100" + "'", str70, ":100");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(archiveList76);
        org.junit.Assert.assertNotNull(archiveList78);
        org.junit.Assert.assertNotNull(asciiBytesMap79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]hi!://:100");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test12430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12430");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getAuthority();
        int int26 = uRL24.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL24, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL38 = new java.net.URL("://[archive://:10archive]:100archive://:10archive", "hi!://:100/hi!://:100/archive", (int) '#', "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        int int39 = uRL38.getDefaultPort();
        java.lang.String str40 = uRL38.getRef();
        java.lang.String str41 = uRL38.getAuthority();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "://[archive://:10archive]:100archive://:10archive://[hi!://:100/hi!://:100/archive]:35hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!://:100/hi!://:100/archive]:35" + "'", str41, "[hi!://:100/hi!://:100/archive]:35");
    }

    @Test
    public void test12431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12431");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNull(manifest34);
    }

    @Test
    public void test12432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12432");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive2.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive2.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = explodedArchive2.root;
        java.lang.String str8 = explodedArchive2.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive11.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        explodedArchive14.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive14.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive14.new FilteredURLStreamHandler();
        java.io.File file27 = null;
        explodedArchive14.root = file27;
        java.util.jar.Manifest manifest29 = explodedArchive14.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive14.entries;
        explodedArchive11.entries = asciiBytesMap30;
        java.lang.String str32 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive11.new FileEntry();
        boolean boolean34 = explodedArchive11.filtered;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test12433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12433");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive0.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file6, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archiveList4);
    }

    @Test
    public void test12434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12434");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getPath();
        java.lang.String str14 = uRL9.getHost();
        int int15 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getHost();
        int int28 = uRL25.getPort();
        java.lang.String str29 = uRL25.getAuthority();
        int int30 = uRL25.getDefaultPort();
        boolean boolean31 = uRL9.sameFile(uRL25);
        int int32 = uRL25.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + ":100" + "'", str29, ":100");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test12435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12435");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry3 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest4 = explodedArchive1.getManifest();
        java.util.jar.Manifest manifest5 = explodedArchive1.manifest;
        java.io.File file6 = null;
        explodedArchive1.root = file6;
        explodedArchive1.filtered = true;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        explodedArchive11.filtered = false;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap27);
        java.util.jar.Manifest manifest30 = null;
        explodedArchive29.manifest = manifest30;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive29.entries;
        explodedArchive1.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap32);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive34.getEntries();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL36 = explodedArchive34.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(entryCollection35);
    }

    @Test
    public void test12436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12436");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!");
        java.lang.String str15 = uRL14.getPath();
        java.net.Proxy proxy16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection17 = uRL14.openConnection(proxy16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/hi!" + "'", str15, "/hi!");
    }

    @Test
    public void test12437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12437");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive24.new FileEntry();
        explodedArchive24.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive24.getFilteredArchive(entryRenameFilter28);
        java.lang.String str30 = explodedArchive24.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive24.getFilteredArchive(entryRenameFilter31);
        java.lang.String str33 = explodedArchive24.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL(uRL11, "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = null;
        explodedArchive40.entries = asciiBytesMap42;
        java.util.jar.Manifest manifest44 = null;
        explodedArchive40.manifest = manifest44;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!://:100/archive", "/archive", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getFile();
        boolean boolean50 = uRL35.sameFile(uRL47);
        java.io.File file56 = null;
        java.io.File file57 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, asciiBytesMap64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive65.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap66);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL70 = new java.net.URL(uRL35, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str71 = uRL70.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(archive29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://[:100]:52/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/archive:///archive:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!://:100/archive" + "'", str48, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!://:100/archive" + "'", str49, "hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertEquals(uRL69.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://[:100]:52/hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test12438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12438");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive29.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.getFile();
        java.lang.String str40 = uRL37.getFile();
        int int41 = uRL37.getDefaultPort();
        java.net.URL uRL43 = new java.net.URL(uRL37, "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream44 = uRL37.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertEquals(uRL36.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/hi!://:100" + "'", str39, "/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!://:100" + "'", str40, "/hi!://:100");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
    }

    @Test
    public void test12439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12439");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file11 = explodedArchive0.root;
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test12440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12440");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/hi!://:100/:100", "");
    }

    @Test
    public void test12441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12441");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        int int11 = uRL9.getPort();
        java.lang.String str12 = uRL9.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI13 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test12442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12442");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
        java.io.File file15 = explodedArchive0.root;
        java.io.File file16 = null;
        explodedArchive0.root = file16;
        java.io.File file18 = null;
        explodedArchive0.root = file18;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test12443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12443");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean66 = uRL9.sameFile(uRL65);
        int int67 = uRL65.getPort();
        java.lang.String str68 = uRL65.getPath();
        java.lang.String str69 = uRL65.getPath();
        int int70 = uRL65.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!://:100" + "'", str68, "/hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!://:100" + "'", str69, "/hi!://:100");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 100 + "'", int70 == 100);
    }

    @Test
    public void test12444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12444");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL(uRL23, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.jar.Manifest manifest38 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.getFile();
        int int42 = uRL40.getDefaultPort();
        java.lang.String str43 = uRL40.getRef();
        boolean boolean44 = uRL23.sameFile(uRL40);
        boolean boolean45 = uRL9.sameFile(uRL23);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = null;
        explodedArchive50.entries = asciiBytesMap52;
        java.util.jar.Manifest manifest54 = null;
        explodedArchive50.manifest = manifest54;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.getPath();
        java.lang.String str59 = uRL57.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.lang.String str82 = uRL81.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str85 = explodedArchive84.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection86 = explodedArchive84.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler87 = explodedArchive84.new FilteredURLStreamHandler();
        java.net.URL uRL88 = new java.net.URL(uRL81, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL89 = new java.net.URL(uRL69, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.lang.String str90 = uRL69.getFile();
        java.lang.String str91 = uRL69.getProtocol();
        java.lang.String str92 = uRL69.getRef();
        boolean boolean93 = uRL57.sameFile(uRL69);
        java.lang.String str94 = uRL69.getUserInfo();
        boolean boolean95 = uRL9.sameFile(uRL69);
        java.lang.String str96 = uRL9.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI97 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!" + "'", str58, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!://:100/hi!]" + "'", str59, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "archive" + "'", str85, "archive");
        org.junit.Assert.assertNotNull(entryCollection86);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ":100" + "'", str96, ":100");
    }

    @Test
    public void test12445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12445");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = fileEntry12.name;
        java.io.File file21 = null;
        fileEntry12.file = file21;
        java.io.File file23 = fileEntry12.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(asciiBytes20);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test12446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12446");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive8.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        java.lang.String str13 = explodedArchive8.toString();
        java.lang.String str14 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive8.getFilteredArchive(entryRenameFilter15);
        java.io.File file17 = null;
        explodedArchive8.root = file17;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive8.getFilteredArchive(entryRenameFilter19);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNotNull(archive20);
    }

    @Test
    public void test12447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12447");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getFile();
        int int24 = uRL22.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL22, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str51 = uRL22.toExternalForm();
        boolean boolean52 = uRL9.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection62 = explodedArchive58.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.net.URL uRL66 = new java.net.URL(uRL22, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        int int67 = uRL22.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!://:100" + "'", str51, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(entryCollection62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertEquals(uRL65.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test12448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12448");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        explodedArchive0.filtered = true;
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        explodedArchive15.filtered = false;
        java.util.jar.Manifest manifest21 = explodedArchive15.manifest;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive30.entries;
        explodedArchive15.entries = asciiBytesMap31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.jar.Manifest manifest36 = explodedArchive35.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive35.entries;
        explodedArchive0.entries = asciiBytesMap38;
        java.lang.Class<?> wildcardClass40 = asciiBytesMap38.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test12449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12449");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        java.io.File file13 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive10.getFilteredArchive(entryRenameFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = explodedArchive10.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
    }

    @Test
    public void test12450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12450");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap12);
        explodedArchive13.filtered = true;
        java.io.File file16 = null;
        explodedArchive13.root = file16;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive13.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap19);
        java.util.jar.Manifest manifest22 = null;
        explodedArchive21.manifest = manifest22;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
    }

    @Test
    public void test12451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12451");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes7);
    }

    @Test
    public void test12452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12452");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        java.util.jar.Manifest manifest8 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        java.io.File file13 = fileEntry12.file;
        java.io.File file14 = fileEntry12.file;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test12453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12453");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://[hi!://:100/hi!]:0archive://:10:100", "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!]:32hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (int) (short) 1, "[hi!://:100]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://[hi!://:100/hi!]:0archive://:10:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12454");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive0.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.lang.String str7 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
    }

    @Test
    public void test12455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12455");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getPath();
        java.lang.String str31 = uRL29.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL15, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive54.new FileEntry();
        java.lang.String str59 = explodedArchive54.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive54.new FileEntry();
        explodedArchive54.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://:100", "hi!://:100/hi!", (int) '4', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL(uRL44, "/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str67 = uRL44.getQuery();
        java.lang.String str68 = uRL44.getPath();
        java.lang.String str69 = uRL44.getRef();
        java.lang.String str70 = uRL44.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!://:100/hi!" + "'", str70, "hi!://:100/hi!");
    }

    @Test
    public void test12456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12456");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.io.File file32 = explodedArchive11.root;
        java.io.File file33 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive11.getNestedArchives(entryFilter34);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
    }

    @Test
    public void test12457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12457");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest13 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive0.entries;
        java.io.File file17 = null;
        explodedArchive0.root = file17;
        java.io.File file19 = null;
        explodedArchive0.root = file19;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
    }

    @Test
    public void test12458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12458");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getUserInfo();
        java.lang.String str26 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getAuthority();
        int int54 = uRL52.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL52, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL("hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) -1, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL67 = new java.net.URL(uRL9, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL69 = new java.net.URL(uRL9, "[hi!://:100/hi!]:10");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive71.getNestedArchives(entryFilter73);
        java.util.jar.Manifest manifest75 = explodedArchive71.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.jar.Manifest manifest78 = null;
        explodedArchive76.manifest = manifest78;
        java.util.jar.Manifest manifest80 = explodedArchive76.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive76.entries;
        explodedArchive71.entries = asciiBytesMap81;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter83 = null;
        org.springframework.boot.loader.archive.Archive archive84 = explodedArchive71.getFilteredArchive(entryRenameFilter83);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler85 = explodedArchive71.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest86 = null;
        explodedArchive71.manifest = manifest86;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler88 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL89 = new java.net.URL(uRL69, "/[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        java.lang.String str90 = uRL69.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
        org.junit.Assert.assertNotNull(archive84);
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test12459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12459");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = explodedArchive0.root;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test12460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12460");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getAuthority();
        int int14 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getFile();
        int int26 = uRL24.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL52 = new java.net.URL(uRL24, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str53 = uRL52.getUserInfo();
        java.lang.String str54 = uRL52.getProtocol();
        java.lang.String str55 = uRL52.getAuthority();
        java.lang.String str56 = uRL52.getUserInfo();
        java.lang.String str57 = uRL52.getPath();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.net.URL uRL60 = new java.net.URL(uRL9, "/archive://[hi!://:100/hi!]:1/hi!");
        java.lang.String str61 = uRL60.getProtocol();
        java.lang.String str62 = uRL60.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + ":100" + "'", str13, ":100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ":100" + "'", str55, ":100");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/archive" + "'", str57, "/archive");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/archive://[hi!://:100/hi!]:1/hi!" + "'", str62, "/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test12461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12461");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.lang.String str19 = explodedArchive13.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive13.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest21 = explodedArchive13.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        java.util.jar.Manifest manifest24 = null;
        explodedArchive23.manifest = manifest24;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
    }

    @Test
    public void test12462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12462");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive0.getEntries();
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(entryCollection11);
    }

    @Test
    public void test12463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12463");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive8.entries = asciiBytesMap10;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.lang.String str16 = uRL15.getPath();
        java.lang.String str17 = uRL15.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL27, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str48 = uRL27.getFile();
        java.lang.String str49 = uRL27.getProtocol();
        java.lang.String str50 = uRL27.getRef();
        boolean boolean51 = uRL15.sameFile(uRL27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        boolean boolean55 = explodedArchive53.filtered;
        java.io.File file56 = explodedArchive53.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL15, "[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL59 = new java.net.URL("hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0", "/[hi!://:100/hi!]", 10, "[hi!://:100/:100]://[hi!://:100/://[hi!://:100/:100]:100/hi!://:100]:0hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str60 = uRL59.getRef();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100/hi!" + "'", str16, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!://:100/hi!]" + "'", str17, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0://[/[hi!://:100/hi!]]:10[hi!://:100/:100]://[hi!://:100/://[hi!://:100/:100]:100/hi!://:100]:0hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test12464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12464");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/[:100]", "", "/://[archive://:10archive]:100archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[:100]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12465");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive14.manifest = manifest20;
        java.io.File file22 = explodedArchive14.root;
        java.io.File file23 = explodedArchive14.root;
        boolean boolean24 = explodedArchive14.filtered;
        java.io.File file25 = explodedArchive14.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive14.entries;
        explodedArchive11.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest28 = explodedArchive11.getManifest();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest28);
    }

    @Test
    public void test12466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12466");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.io.File file7 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        explodedArchive0.entries = asciiBytesMap14;
        explodedArchive0.filtered = false;
        java.io.File file18 = null;
        explodedArchive0.root = file18;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter20 = null;
        org.springframework.boot.loader.archive.Archive archive21 = explodedArchive0.getFilteredArchive(entryRenameFilter20);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive0.getFilteredArchive(entryRenameFilter22);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archive21);
        org.junit.Assert.assertNotNull(archive23);
    }

    @Test
    public void test12467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12467");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getUserInfo();
        java.lang.String str42 = uRL22.getRef();
        java.lang.String str43 = uRL22.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = uRL22.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test12468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12468");
        java.io.File file4 = null;
        java.io.File file5 = null;
        java.io.File file6 = null;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive8.getNestedArchives(entryFilter15);
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        explodedArchive8.entries = asciiBytesMap28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap28);
        java.util.jar.Manifest manifest33 = null;
        explodedArchive32.manifest = manifest33;
        java.io.File file35 = explodedArchive32.root;
        java.util.jar.Manifest manifest36 = explodedArchive32.getManifest();
        java.io.File file37 = null;
        explodedArchive32.root = file37;
        java.io.File file39 = null;
        explodedArchive32.root = file39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.jar.Manifest manifest43 = null;
        explodedArchive41.manifest = manifest43;
        java.util.jar.Manifest manifest45 = explodedArchive41.getManifest();
        boolean boolean46 = explodedArchive41.filtered;
        java.util.jar.Manifest manifest47 = explodedArchive41.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive41.entries;
        explodedArchive32.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap48);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("/[/hi!://:100/archive]", "", 0, "/[/hi!://:100/archive]://[:100]:52:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getAuthority();
        java.lang.String str56 = uRL54.getUserInfo();
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertEquals(uRL54.toString(), "/[/hi!://:100/archive]://:0/[/hi!://:100/archive]://[:100]:52:100/:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ":0" + "'", str55, ":0");
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test12469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12469");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getFile();
        java.net.Proxy proxy19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection20 = uRL16.openConnection(proxy19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
    }

    @Test
    public void test12470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12470");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getHost();
        java.lang.String str55 = uRL51.getPath();
        java.lang.String str56 = uRL51.getFile();
        int int57 = uRL51.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test12471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12471");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        java.io.File file14 = null;
        fileEntry12.file = file14;
        java.io.File file16 = fileEntry12.file;
        java.io.File file17 = null;
        fileEntry12.file = file17;
        java.io.File file19 = fileEntry12.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test12472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12472");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getQuery();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getPort();
        java.lang.String str45 = uRL41.getQuery();
        java.net.URL uRL47 = new java.net.URL(uRL41, "");
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL47, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL30, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        int int66 = uRL30.getPort();
        java.net.URL uRL68 = new java.net.URL(uRL30, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.net.URL uRL70 = new java.net.URL(uRL30, "/hi!://:100");
        java.lang.String str71 = uRL70.getProtocol();
        java.net.Proxy proxy72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection73 = uRL70.openConnection(proxy72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test12473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12473");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive4.new FilteredURLStreamHandler();
        java.io.File file8 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive4.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive4.getFilteredArchive(entryRenameFilter11);
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.lang.String str20 = explodedArchive14.toString();
        java.util.jar.Manifest manifest21 = explodedArchive14.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap22);
        explodedArchive4.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "/archive:0", (int) (byte) 10, "[hi!://:100/hi!://:100/hi!://:100/hi!://:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100/[/hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[/archive:0]:10[hi!://:100/hi!://:100/hi!://:100/hi!://:100]:10");
    }

    @Test
    public void test12474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12474");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        java.lang.String str28 = uRL27.getQuery();
        java.net.URL uRL30 = new java.net.URL(uRL27, "/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        java.lang.String str31 = uRL30.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test12475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12475");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.io.File file6 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive7.new FileEntry();
        java.util.jar.Manifest manifest10 = explodedArchive7.getManifest();
        boolean boolean11 = explodedArchive7.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive7.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str14 = explodedArchive13.toString();
        boolean boolean15 = explodedArchive13.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive13.getFilteredArchive(entryRenameFilter16);
        java.io.File file18 = explodedArchive13.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive19.getFilteredArchive(entryRenameFilter22);
        java.io.File file24 = explodedArchive19.root;
        java.lang.String str25 = explodedArchive19.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive19.entries;
        explodedArchive13.entries = asciiBytesMap26;
        explodedArchive7.entries = asciiBytesMap26;
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive0.new FileEntry();
        java.io.File file31 = null;
        explodedArchive0.root = file31;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(archive17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNotNull(archive23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
    }

    @Test
    public void test12476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12476");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest13);
    }

    @Test
    public void test12477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12477");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        java.io.File file10 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test12478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12478");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive2.entries = asciiBytesMap6;
        boolean boolean8 = explodedArchive2.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive2.new FileEntry();
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive2.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap21);
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.lang.String str33 = explodedArchive27.toString();
        java.util.jar.Manifest manifest34 = explodedArchive27.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap35);
        explodedArchive25.entries = asciiBytesMap35;
        java.io.File file38 = null;
        explodedArchive25.root = file38;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive25.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive25.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap42);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
    }

    @Test
    public void test12479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12479");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getPath();
        boolean boolean30 = uRL9.sameFile(uRL27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL44.getQuery();
        java.lang.String str46 = uRL44.getRef();
        int int47 = uRL44.getPort();
        java.lang.String str48 = uRL44.getProtocol();
        java.lang.String str49 = uRL44.getPath();
        java.lang.String str50 = uRL44.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getFile();
        int int63 = uRL61.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive69.getEntries();
        java.util.jar.Manifest manifest72 = explodedArchive69.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL74.getQuery();
        java.lang.String str76 = uRL74.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str83 = explodedArchive82.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection84 = explodedArchive82.getEntries();
        java.util.jar.Manifest manifest85 = explodedArchive82.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler86 = explodedArchive82.new FilteredURLStreamHandler();
        java.net.URL uRL87 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL88 = new java.net.URL(uRL74, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL89 = new java.net.URL(uRL61, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL90 = new java.net.URL(uRL44, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL91 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        boolean boolean92 = uRL9.sameFile(uRL91);
        java.lang.String str93 = uRL9.getHost();
        int int94 = uRL9.getPort();
        java.net.Proxy proxy95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection96 = uRL9.openConnection(proxy95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ":100" + "'", str50, ":100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "archive" + "'", str83, "archive");
        org.junit.Assert.assertNotNull(entryCollection84);
        org.junit.Assert.assertNull(manifest85);
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL91.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
    }

    @Test
    public void test12480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12480");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        java.io.File file4 = explodedArchive1.root;
        java.util.jar.Manifest manifest5 = explodedArchive1.getManifest();
        java.io.File file6 = explodedArchive1.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.io.File file9 = null;
        explodedArchive8.root = file9;
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive8.buildEntries(file11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
    }

    @Test
    public void test12481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12481");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive", "/hi!://:100/hi!://:100/:100");
    }

    @Test
    public void test12482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12482");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!]:32hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", "hi!://:100/hi!://:100/hi!:1", 97, "/[hi!://:100/hi!://:100/hi!://:100/archive://[/hi!:1]:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!]:32hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test12483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12483");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getHost();
        java.lang.String str55 = uRL51.getPath();
        java.lang.String str56 = uRL51.getHost();
        java.lang.String str57 = uRL51.getPath();
        java.lang.String str58 = uRL51.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive60.getNestedArchives(entryFilter67);
        java.util.jar.Manifest manifest69 = explodedArchive60.getManifest();
        java.io.File file70 = null;
        explodedArchive60.root = file70;
        java.util.jar.Manifest manifest72 = explodedArchive60.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL(uRL51, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL74.toExternalForm();
        java.lang.String str76 = uRL74.getProtocol();
        int int77 = uRL74.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!://:100/[hi!://:100/hi!]:10" + "'", str75, "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
    }

    @Test
    public void test12484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12484");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest23 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive21.new FileEntry();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(manifest23);
    }

    @Test
    public void test12485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12485");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean66 = uRL9.sameFile(uRL65);
        int int67 = uRL65.getPort();
        java.lang.String str68 = uRL65.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
    }

    @Test
    public void test12486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12486");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("archive://:10archive", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        java.lang.String str26 = uRL24.getRef();
        int int27 = uRL24.getPort();
        java.lang.String str28 = uRL24.getProtocol();
        java.lang.String str29 = uRL24.getPath();
        java.lang.String str30 = uRL24.getPath();
        java.lang.String str31 = uRL24.getUserInfo();
        java.lang.String str32 = uRL24.getProtocol();
        boolean boolean33 = uRL14.sameFile(uRL24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive39.filtered = true;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive39.getFilteredArchive(entryRenameFilter44);
        java.io.File file46 = null;
        explodedArchive39.root = file46;
        java.lang.String str48 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive39.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("/[hi!://:100/hi!://:100/hi!://:100/archive", "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0", (int) 'a', "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL52 = new java.net.URL(uRL14, "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL53 = new java.net.URL("[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]:0", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals(uRL14.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertEquals(uRL51.toString(), "/[hi!://:100/hi!://:100/hi!://:100/archive://[hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0]:97hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "archive://:10archive://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL53.toString(), "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0");
    }

    @Test
    public void test12487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12487");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        int int14 = uRL9.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getRef();
        java.lang.String str19 = uRL17.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL21 = new java.net.URL(uRL17, "archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test12488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12488");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test12489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12489");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.getFile();
        java.lang.String str33 = uRL27.getRef();
        boolean boolean34 = uRL15.sameFile(uRL27);
        java.net.URL uRL36 = new java.net.URL(uRL15, "hi!://:100/hi!");
        int int37 = uRL15.getPort();
        int int38 = uRL15.getDefaultPort();
        java.lang.String str39 = uRL15.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100" + "'", str39, "hi!://:100");
    }

    @Test
    public void test12490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12490");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file4 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test12491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12491");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getAuthority();
        java.lang.String str20 = uRL17.getAuthority();
        java.lang.String str21 = uRL17.toExternalForm();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals(uRL17.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str18, "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[archive://:10archive]:100" + "'", str19, "[archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[archive://:10archive]:100" + "'", str20, "[archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str21, "://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test12492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12492");
        java.net.URLConnection.setDefaultRequestProperty("/://[archive://:10archive]:100archive://:10archive", "/[/hi!://:100/archive]://[:100]:52:100/:100");
    }

    @Test
    public void test12493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12493");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        explodedArchive8.filtered = false;
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        explodedArchive8.entries = asciiBytesMap24;
        explodedArchive0.entries = asciiBytesMap24;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive0.new FileEntry();
        java.io.File file29 = fileEntry28.file;
        java.io.File file30 = fileEntry28.file;
        java.io.File file31 = null;
        fileEntry28.file = file31;
        java.io.File file33 = null;
        fileEntry28.file = file33;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = null;
        fileEntry28.name = asciiBytes35;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test12494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12494");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("archive://:10:100", "/archive:///archive:0hi!://:100", 0, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        explodedArchive17.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive17.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "/:100", 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL11, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str28 = uRL11.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:0[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertEquals(uRL26.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[/:100]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:0[://[archive://:10archive]:100archive://hi!:1");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[/archive:///archive:0hi!://:100]" + "'", str28, "[/archive:///archive:0hi!://:100]");
    }

    @Test
    public void test12495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12495");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.getName();
        java.io.File file10 = null;
        fileEntry4.file = file10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.getName();
        java.io.File file13 = null;
        fileEntry4.file = file13;
        java.io.File file15 = null;
        fileEntry4.file = file15;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry4.name = asciiBytes17;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test12496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12496");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12497");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test12498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12498");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        java.io.File file14 = null;
        fileEntry4.file = file14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test12499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12499");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry2.getName();
        java.io.File file8 = fileEntry2.getFile();
        java.io.File file9 = fileEntry2.getFile();
        java.io.File file10 = fileEntry2.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry2.name;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test12500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12500");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        explodedArchive1.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str10 = explodedArchive9.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive9.new FileEntry();
        java.util.jar.Manifest manifest12 = explodedArchive9.getManifest();
        java.util.jar.Manifest manifest13 = explodedArchive9.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive14.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive14.getNestedArchives(entryFilter19);
        java.util.jar.Manifest manifest21 = null;
        explodedArchive14.manifest = manifest21;
        explodedArchive14.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive14.entries;
        explodedArchive9.entries = asciiBytesMap25;
        explodedArchive1.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        java.lang.Class<?> wildcardClass30 = explodedArchive28.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }
}

