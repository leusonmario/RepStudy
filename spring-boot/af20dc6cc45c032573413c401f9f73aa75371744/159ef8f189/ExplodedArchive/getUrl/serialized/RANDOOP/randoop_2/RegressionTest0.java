import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.io.File file0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive(file0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler1 = explodedArchive0.new FilteredURLStreamHandler();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: reflection call to org.springframework.boot.loader.archive.ExplodedArchive$FilteredURLStreamHandler with null for superclass argument");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        boolean boolean0 = java.net.URLConnection.getDefaultAllowUserInteraction();
        org.junit.Assert.assertTrue("'" + boolean0 + "' != '" + false + "'", boolean0 == false);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.net.URLConnection.setDefaultAllowUserInteraction(true);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.net.ContentHandlerFactory contentHandlerFactory0 = null;
        java.net.URLConnection.setContentHandlerFactory(contentHandlerFactory0);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.util.Set<java.lang.String> strSet0 = org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES;
        org.junit.Assert.assertNotNull(strSet0);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "hi!", (int) (short) 10, "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file4, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        java.net.URLConnection.setDefaultRequestProperty("hi!", "hi!");
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        java.io.InputStream inputStream0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str1 = java.net.URLConnection.guessContentTypeFromStream(inputStream0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass3 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive3.entries = asciiBytesMap4;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive7 = explodedArchive3.getFilteredArchive(entryRenameFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file6 = serializedObjectSupporter5.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter5.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter5.deserializeObjectExplodedArchive15();
        java.io.File file9 = serializedObjectSupporter5.deserializeObjectFile4();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -14");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive3.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.net.Proxy proxy11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection12 = uRL10.openConnection(proxy11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file13 = serializedObjectSupporter12.deserializeObjectFile7();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter12.getClass();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file17 = serializedObjectSupporter16.deserializeObjectFile7();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass19 = serializedObjectSupporter16.getClass();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile7();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass23 = serializedObjectSupporter20.getClass();
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass15, wildcardClass19, wildcardClass23 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = uRL10.getContent(classArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file17.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classArray24);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.net.URLConnection.setDefaultRequestProperty("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile1();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "src/test/resources/root");
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        java.net.Proxy proxy13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection14 = uRL10.openConnection(proxy13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection21 = uRL20.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "://hi!:100/hi!" + "'", str17, "://hi!:100/hi!");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        java.net.URLConnection.setDefaultRequestProperty("", "hi!:100");
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.util.Set<java.lang.String> strSet10 = explodedArchive9.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive9.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = null;
        explodedArchive9.entries = asciiBytesMap12;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive17.new FileEntry(asciiBytes19, file24);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file27 = serializedObjectSupporter26.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter26.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter26.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter26.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest31 = serializedObjectSupporter26.deserializeObjectManifest1();
        java.io.File file32 = serializedObjectSupporter26.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive9.new FileEntry(asciiBytes19, file32);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry33.serializedObjectSupporter = serializedObjectSupporter34;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive36 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(asciiBytes19);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(manifest31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileEntry27.serializedObjectSupporter;
        java.io.File file32 = fileEntry27.file;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.util.Set<java.lang.String> strSet10 = explodedArchive9.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive9.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = null;
        explodedArchive9.entries = asciiBytesMap12;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive17.new FileEntry(asciiBytes19, file24);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file27 = serializedObjectSupporter26.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter26.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter26.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter26.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest31 = serializedObjectSupporter26.deserializeObjectManifest1();
        java.io.File file32 = serializedObjectSupporter26.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive9.new FileEntry(asciiBytes19, file32);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file32, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(asciiBytes19);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(manifest31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.net.URLConnection.setDefaultRequestProperty("://hi!:100/hi!", "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.net.URLConnection.setDefaultRequestProperty("hi!:100", "hi!");
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream22 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive3.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream13 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "://hi!:100" + "'", str12, "://hi!:100");
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.util.jar.Manifest manifest6 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive8 = explodedArchive3.getFilteredArchive(entryRenameFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNull(manifest6);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive7 = explodedArchive3.getFilteredArchive(entryRenameFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream20 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive3.entries = asciiBytesMap4;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file38 = serializedObjectSupporter37.deserializeObjectFile7();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass40 = serializedObjectSupporter37.getClass();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file42 = serializedObjectSupporter41.deserializeObjectFile7();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass44 = serializedObjectSupporter41.getClass();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file46 = serializedObjectSupporter45.deserializeObjectFile7();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass48 = serializedObjectSupporter45.getClass();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile7();
        java.io.File file51 = serializedObjectSupporter49.deserializeObjectFile12();
        java.lang.Class<?> wildcardClass52 = serializedObjectSupporter49.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[] { wildcardClass40, wildcardClass44, wildcardClass48, wildcardClass52 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = uRL35.getContent(classArray53);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file38.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file42.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray53);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream23 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        java.net.URLStreamHandlerFactory uRLStreamHandlerFactory0 = null;
        java.net.URL.setURLStreamHandlerFactory(uRLStreamHandlerFactory0);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.util.Set<java.lang.String> strSet9 = explodedArchive8.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive8.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.util.Set<java.lang.String> strSet17 = explodedArchive16.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.io.File file23 = explodedArchive22.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = explodedArchive16.new FileEntry(asciiBytes18, file23);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file26 = serializedObjectSupporter25.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter25.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter25.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter25.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest30 = serializedObjectSupporter25.deserializeObjectManifest1();
        java.io.File file31 = serializedObjectSupporter25.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive8.new FileEntry(asciiBytes18, file31);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry32.serializedObjectSupporter = serializedObjectSupporter33;
        java.io.File file35 = fileEntry32.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = fileEntry32.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive37 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(asciiBytes18);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(manifest30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter36);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = fileNotFoundURLConnection17.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.util.jar.Manifest manifest6 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file8 = serializedObjectSupporter7.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter7.deserializeObjectExplodedArchive14();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile9();
        java.io.File file12 = serializedObjectSupporter7.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter7.deserializeObjectExplodedArchive5();
        java.io.File file14 = serializedObjectSupporter7.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter7.deserializeObjectExplodedArchive12();
        java.io.File file16 = serializedObjectSupporter7.deserializeObjectFile16();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file14.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.util.jar.Manifest manifest6 = explodedArchive3.getManifest();
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file16 = serializedObjectSupporter15.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter15.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter15.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter15.deserializeObjectExplodedArchive12();
        java.io.File file20 = serializedObjectSupporter15.deserializeObjectFile5();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file20, true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -41");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file20.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.net.Proxy proxy49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection50 = uRL10.openConnection(proxy49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = fileNotFoundURLConnection17.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.lang.Class<?> wildcardClass4 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.net.URLConnection.setDefaultRequestProperty("hi!", "://hi!:100/hi!");
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        java.net.URLConnection.setDefaultRequestProperty("", "://hi!:100/hi!");
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI35 = uRL26.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 10, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = uRL15.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        java.util.HashSet hashSet5 = serializedObjectSupporter0.deserializeObjectSet1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(hashSet5);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = explodedArchive3.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(asciiBytes8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive3.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream22 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", 0, "://hi!:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream23 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.net.Proxy proxy51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection52 = uRL22.openConnection(proxy51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection22 = filteredURLStreamHandler19.openConnection(uRL21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.FileNameMap fileNameMap3 = java.net.URLConnection.getFileNameMap();
        java.net.URLConnection.setFileNameMap(fileNameMap3);
        java.net.URLConnection.setFileNameMap(fileNameMap3);
        boolean boolean6 = uRL1.equals((java.lang.Object) fileNameMap3);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertNotNull(fileNameMap3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.util.jar.Manifest manifest7 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(manifest7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = null;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter1 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter1.deserializeObjectExplodedArchive11();
        java.io.File file3 = serializedObjectSupporter1.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive(file3);
        java.util.Set<java.lang.String> strSet5 = explodedArchive4.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive4.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = null;
        explodedArchive4.entries = asciiBytesMap7;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.util.Set<java.lang.String> strSet13 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.io.File file19 = explodedArchive18.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive12.new FileEntry(asciiBytes14, file19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter21.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest26 = serializedObjectSupporter21.deserializeObjectManifest1();
        java.io.File file27 = serializedObjectSupporter21.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive4.new FileEntry(asciiBytes14, file27);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.util.Set<java.lang.String> strSet33 = explodedArchive32.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive32.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = null;
        explodedArchive32.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.util.Set<java.lang.String> strSet41 = explodedArchive40.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes42 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive40.new FileEntry(asciiBytes42, file47);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter49.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest54 = serializedObjectSupporter49.deserializeObjectManifest1();
        java.io.File file55 = serializedObjectSupporter49.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry56 = explodedArchive32.new FileEntry(asciiBytes42, file55);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive0.new FileEntry(asciiBytes14, file55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: reflection call to org.springframework.boot.loader.archive.ExplodedArchive$FileEntry with null for superclass argument");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(asciiBytes14);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(manifest26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(asciiBytes42);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(manifest54);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = uRL10.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "://hi!:100" + "'", str12, "://hi!:100");
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "://hi!:100" + "'", str36, "://hi!:100");
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter54.deserializeObjectExplodedArchive11();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file56);
        java.util.Set<java.lang.String> strSet58 = explodedArchive57.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.util.Set<java.lang.String> strSet65 = explodedArchive64.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive64.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = null;
        explodedArchive64.entries = asciiBytesMap67;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive11();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file71);
        java.util.Set<java.lang.String> strSet73 = explodedArchive72.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes74 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter75 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter75.deserializeObjectExplodedArchive11();
        java.io.File file77 = serializedObjectSupporter75.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file77);
        java.io.File file79 = explodedArchive78.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry80 = explodedArchive72.new FileEntry(asciiBytes74, file79);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter81 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file82 = serializedObjectSupporter81.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter81.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter81.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter81.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest86 = serializedObjectSupporter81.deserializeObjectManifest1();
        java.io.File file87 = serializedObjectSupporter81.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = explodedArchive64.new FileEntry(asciiBytes74, file87);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter89 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry88.serializedObjectSupporter = serializedObjectSupporter89;
        java.io.File file91 = fileEntry88.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter92 = fileEntry88.serializedObjectSupporter;
        filteredURLStreamHandler59.serializedObjectSupporter = serializedObjectSupporter92;
        java.net.URL uRL94 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection95 = uRL94.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals(uRL60.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(asciiBytes74);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNotNull(manifest86);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter92);
        org.junit.Assert.assertEquals(uRL94.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        int int26 = fileNotFoundURLConnection17.getReadTimeout();
        java.lang.Class[] classArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = fileNotFoundURLConnection17.getContent(classArray27);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream28 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (byte) 10);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap22 = fileNotFoundURLConnection17.getRequestProperties();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = fileNotFoundURLConnection17.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive3);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = uRL22.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:100" + "'", str51, "hi!:100");
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection49 = uRL22.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.util.Set<java.lang.String> strSet81 = explodedArchive80.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getPath();
        java.lang.String str85 = uRL83.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter87.deserializeObjectExplodedArchive11();
        java.io.File file89 = serializedObjectSupporter87.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
        java.util.Set<java.lang.String> strSet91 = explodedArchive90.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive90.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL83, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL(uRL69, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL57, "file", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL96 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.lang.String str97 = uRL10.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals(uRL57.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:100" + "'", str71, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals(uRL83.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertEquals(uRL93.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL94.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL95.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL96.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "://hi!:100" + "'", str97, "://hi!:100");
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "file", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        fileNotFoundURLConnection17.setDoOutput(false);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = fileNotFoundURLConnection17.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.setConnectTimeout((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: timeout can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(serializedObjectSupporter28);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive3.getEntries();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(entryCollection6);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest28 = explodedArchive3.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = null;
        filteredURLStreamHandler33.serializedObjectSupporter = serializedObjectSupporter36;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("://hi!:100/hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.lang.String str6 = fileNotFoundURLConnection4.getHeaderField("hi!:100");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = fileNotFoundURLConnection4.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        java.lang.String str22 = fileNotFoundURLConnection17.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str22, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str50 = uRL49.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        java.io.File file57 = serializedObjectSupporter55.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file57);
        java.util.Set<java.lang.String> strSet59 = explodedArchive58.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getPath();
        java.lang.String str63 = uRL61.getUserInfo();
        java.lang.String str64 = uRL61.getHost();
        java.net.URL uRL66 = new java.net.URL(uRL61, "hi!");
        java.lang.String str67 = uRL66.getQuery();
        java.lang.String str68 = uRL66.getHost();
        boolean boolean69 = uRL49.equals((java.lang.Object) str68);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertEquals(uRL61.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals(uRL66.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        explodedArchive3.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.util.Set<java.lang.String> strSet14 = explodedArchive13.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive13.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest16 = explodedArchive13.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = explodedArchive13.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = explodedArchive13.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file20 = serializedObjectSupporter19.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter19.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter19.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter19.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest24 = serializedObjectSupporter19.deserializeObjectManifest1();
        java.io.File file25 = serializedObjectSupporter19.deserializeObjectFile14();
        java.io.File file26 = serializedObjectSupporter19.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes18, file26);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNotNull(asciiBytes18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(manifest24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = uRL26.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        java.net.URLStreamHandler uRLStreamHandler38 = null;
        java.net.URL uRL39 = new java.net.URL(uRL35, "hi!:100", uRLStreamHandler38);
        java.lang.String str40 = uRL35.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str40, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.net.URL uRL6 = new java.net.URL(uRL1, "file");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.util.Set<java.lang.String> strSet11 = explodedArchive10.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest13 = explodedArchive10.manifest;
        java.util.jar.Manifest manifest14 = explodedArchive10.getManifest();
        boolean boolean15 = uRL1.equals((java.lang.Object) explodedArchive10);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/file");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection37 = filteredURLStreamHandler33.openConnection(uRL36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.toExternalForm();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        java.io.File file19 = serializedObjectSupporter17.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive20.getEntries();
        boolean boolean22 = uRL15.equals((java.lang.Object) explodedArchive20);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "://hi!:100/hi!" + "'", str16, "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.util.Set<java.lang.String> strSet9 = explodedArchive8.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive8.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        java.lang.String str18 = explodedArchive16.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.io.File file27 = explodedArchive26.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest29 = serializedObjectSupporter28.deserializeObjectManifest1();
        explodedArchive26.manifest = manifest29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = null;
        explodedArchive34.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.util.Set<java.lang.String> strSet43 = explodedArchive42.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes44 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.io.File file49 = explodedArchive48.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive42.new FileEntry(asciiBytes44, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file52 = serializedObjectSupporter51.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter51.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter51.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter51.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest56 = serializedObjectSupporter51.deserializeObjectManifest1();
        java.io.File file57 = serializedObjectSupporter51.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive34.new FileEntry(asciiBytes44, file57);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file60 = serializedObjectSupporter59.deserializeObjectFile8();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile15();
        java.io.File file62 = serializedObjectSupporter59.deserializeObjectFile13();
        java.io.File file63 = serializedObjectSupporter59.deserializeObjectFile9();
        java.io.File file64 = serializedObjectSupporter59.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive26.new FileEntry(asciiBytes44, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry68 = explodedArchive22.new FileEntry(asciiBytes44, file67);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive12();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive16.new FileEntry(asciiBytes44, file71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive16.entries;
        explodedArchive8.entries = asciiBytesMap73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap73);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive75.getNestedArchives(entryFilter76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str18, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest29);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(asciiBytes44);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(manifest56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file61.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file64.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap73);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI21 = uRL20.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.lang.Class<?> wildcardClass18 = uRL15.getClass();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile5();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.Class<?> wildcardClass35 = serializedObjectSupporter31.getClass();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter54.deserializeObjectExplodedArchive11();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file56);
        java.util.Set<java.lang.String> strSet58 = explodedArchive57.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.util.Set<java.lang.String> strSet65 = explodedArchive64.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive64.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = null;
        explodedArchive64.entries = asciiBytesMap67;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive11();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file71);
        java.util.Set<java.lang.String> strSet73 = explodedArchive72.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes74 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter75 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter75.deserializeObjectExplodedArchive11();
        java.io.File file77 = serializedObjectSupporter75.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file77);
        java.io.File file79 = explodedArchive78.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry80 = explodedArchive72.new FileEntry(asciiBytes74, file79);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter81 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file82 = serializedObjectSupporter81.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter81.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter81.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter81.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest86 = serializedObjectSupporter81.deserializeObjectManifest1();
        java.io.File file87 = serializedObjectSupporter81.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = explodedArchive64.new FileEntry(asciiBytes74, file87);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter89 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry88.serializedObjectSupporter = serializedObjectSupporter89;
        java.io.File file91 = fileEntry88.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter92 = fileEntry88.serializedObjectSupporter;
        filteredURLStreamHandler59.serializedObjectSupporter = serializedObjectSupporter92;
        java.net.URL uRL94 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.Proxy proxy95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection96 = uRL22.openConnection(proxy95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals(uRL60.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(asciiBytes74);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNotNull(manifest86);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter92);
        org.junit.Assert.assertEquals(uRL94.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.setConnectTimeout((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: timeout can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive6 = explodedArchive3.getFilteredArchive(entryRenameFilter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = filteredURLStreamHandler55.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
        org.junit.Assert.assertNull(serializedObjectSupporter59);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.net.URL uRL24 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str25 = uRL24.getProtocol();
        java.lang.Class[] classArray26 = new java.lang.Class[] {};
        java.lang.Object obj27 = uRL24.getContent(classArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj28 = fileNotFoundURLConnection17.getContent(classArray26);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file" + "'", str25, "file");
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        explodedArchive3.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive3.getNestedArchives(entryFilter17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = fileNotFoundURLConnection4.serializedObjectSupporter;
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getAuthority();
        java.net.Proxy proxy3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection4 = uRL1.openConnection(proxy3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField(0);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI16 = uRL15.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive9 = explodedArchive3.getFilteredArchive(entryRenameFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        explodedArchive3.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.io.File file19 = explodedArchive18.getroot();
        java.lang.String str20 = explodedArchive18.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest31 = serializedObjectSupporter30.deserializeObjectManifest1();
        explodedArchive28.manifest = manifest31;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.util.Set<java.lang.String> strSet37 = explodedArchive36.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive36.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = null;
        explodedArchive36.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes46 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter47.deserializeObjectExplodedArchive11();
        java.io.File file49 = serializedObjectSupporter47.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file49);
        java.io.File file51 = explodedArchive50.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive44.new FileEntry(asciiBytes46, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter53.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter53.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter53.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest58 = serializedObjectSupporter53.deserializeObjectManifest1();
        java.io.File file59 = serializedObjectSupporter53.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive36.new FileEntry(asciiBytes46, file59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file62 = serializedObjectSupporter61.deserializeObjectFile8();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile15();
        java.io.File file64 = serializedObjectSupporter61.deserializeObjectFile13();
        java.io.File file65 = serializedObjectSupporter61.deserializeObjectFile9();
        java.io.File file66 = serializedObjectSupporter61.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive28.new FileEntry(asciiBytes46, file66);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file69 = serializedObjectSupporter68.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = explodedArchive24.new FileEntry(asciiBytes46, file69);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive12();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry74 = explodedArchive18.new FileEntry(asciiBytes46, file73);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive75 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str20, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(asciiBytes46);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(manifest58);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file63.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file66.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "hi!", (int) (byte) 0, "://hi!:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setDefaultUseCaches(true);
        fileNotFoundURLConnection50.setDoOutput(true);
        boolean boolean55 = fileNotFoundURLConnection50.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream30 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 0, "://hi!:100", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = filteredURLStreamHandler9.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(asciiBytes8);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI12 = uRL10.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.util.Set<java.lang.String> strSet81 = explodedArchive80.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getPath();
        java.lang.String str85 = uRL83.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter87.deserializeObjectExplodedArchive11();
        java.io.File file89 = serializedObjectSupporter87.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
        java.util.Set<java.lang.String> strSet91 = explodedArchive90.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive90.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL83, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL(uRL69, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL57, "file", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL96 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.lang.String str97 = uRL96.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream98 = uRL96.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals(uRL57.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:100" + "'", str71, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals(uRL83.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertEquals(uRL93.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL94.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL95.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL96.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        int int5 = fileNotFoundURLConnection4.getContentLength();
        java.net.URL uRL7 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str8 = uRL7.getProtocol();
        java.lang.Class[] classArray9 = new java.lang.Class[] {};
        java.lang.Object obj10 = uRL7.getContent(classArray9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = fileNotFoundURLConnection4.getContent(classArray9);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL7.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file" + "'", str8, "file");
        org.junit.Assert.assertNotNull(classArray9);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        boolean boolean29 = fileNotFoundURLConnection17.getAllowUserInteraction();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.net.URL uRL14 = new java.net.URL(uRL10, "file");
        java.net.URL uRL16 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str17 = uRL16.getProtocol();
        java.lang.Class[] classArray18 = new java.lang.Class[] {};
        java.lang.Object obj19 = uRL16.getContent(classArray18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = uRL14.getContent(classArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -83");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file" + "'", str17, "file");
        org.junit.Assert.assertNotNull(classArray18);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderFieldKey(0);
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", (long) ' ');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.util.Set<java.lang.String> strSet41 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive3.getNestedArchives(entryFilter42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(strSet41);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        java.net.URL uRL8 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str9 = uRL8.getProtocol();
        java.lang.Class[] classArray10 = new java.lang.Class[] {};
        java.lang.Object obj11 = uRL8.getContent(classArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = fileNotFoundURLConnection4.getContent(classArray10);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file" + "'", str9, "file");
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        java.lang.Class[] classArray30 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = fileNotFoundURLConnection17.getContent(classArray30);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertNotNull(classArray30);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        long long22 = fileNotFoundURLConnection17.getContentLengthLong();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file7.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream27 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.util.Set<java.lang.String> strSet81 = explodedArchive80.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getPath();
        java.lang.String str85 = uRL83.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter87.deserializeObjectExplodedArchive11();
        java.io.File file89 = serializedObjectSupporter87.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
        java.util.Set<java.lang.String> strSet91 = explodedArchive90.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive90.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL83, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL(uRL69, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL57, "file", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL96 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.Proxy proxy97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection98 = uRL10.openConnection(proxy97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals(uRL57.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:100" + "'", str71, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals(uRL83.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertEquals(uRL93.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL94.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL95.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL96.toString(), "://hi!:100");
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream24 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setDoInput(true);
        fileNotFoundURLConnection4.setIfModifiedSince(0L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream13 = fileNotFoundURLConnection4.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        int int7 = fileNotFoundURLConnection4.getReadTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = fileNotFoundURLConnection4.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection18 = uRL17.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile10();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream20 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        java.util.jar.Manifest manifest12 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter13.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter13.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter13.deserializeObjectExplodedArchive7();
        java.io.File file18 = serializedObjectSupporter13.deserializeObjectFile3();
        java.io.File file19 = serializedObjectSupporter13.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.io.File file23 = serializedObjectSupporter20.deserializeObjectFile3();
        java.io.File file24 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.util.Set<java.lang.String> strSet29 = explodedArchive28.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive28.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = null;
        explodedArchive28.entries = asciiBytesMap31;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        java.lang.String str38 = explodedArchive36.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest49 = serializedObjectSupporter48.deserializeObjectManifest1();
        explodedArchive46.manifest = manifest49;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = null;
        explodedArchive54.entries = asciiBytesMap57;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter59.deserializeObjectExplodedArchive11();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file61);
        java.util.Set<java.lang.String> strSet63 = explodedArchive62.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter65.deserializeObjectExplodedArchive11();
        java.io.File file67 = serializedObjectSupporter65.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file67);
        java.io.File file69 = explodedArchive68.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = explodedArchive62.new FileEntry(asciiBytes64, file69);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file72 = serializedObjectSupporter71.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter71.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter71.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter71.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest76 = serializedObjectSupporter71.deserializeObjectManifest1();
        java.io.File file77 = serializedObjectSupporter71.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry78 = explodedArchive54.new FileEntry(asciiBytes64, file77);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter79 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file80 = serializedObjectSupporter79.deserializeObjectFile8();
        java.io.File file81 = serializedObjectSupporter79.deserializeObjectFile15();
        java.io.File file82 = serializedObjectSupporter79.deserializeObjectFile13();
        java.io.File file83 = serializedObjectSupporter79.deserializeObjectFile9();
        java.io.File file84 = serializedObjectSupporter79.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry85 = explodedArchive46.new FileEntry(asciiBytes64, file84);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter86 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file87 = serializedObjectSupporter86.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = explodedArchive42.new FileEntry(asciiBytes64, file87);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter89 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = serializedObjectSupporter89.deserializeObjectExplodedArchive12();
        java.io.File file91 = serializedObjectSupporter89.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry92 = explodedArchive36.new FileEntry(asciiBytes64, file91);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap93 = explodedArchive36.entries;
        explodedArchive28.entries = asciiBytesMap93;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive95 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap93);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive96 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap93);
        // The following exception was thrown during execution in test generation
        try {
// flaky:             explodedArchive3.buildEntries(file19, true);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file18.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file19.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file23.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str38, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNotNull(manifest76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file81.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file82.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file83.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file84.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive90);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap93);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.io.File file0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "hi!:100", 10, "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.io.File file5 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive3.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        java.io.File file12 = serializedObjectSupporter7.deserializeObjectFile10();
        boolean boolean13 = uRL6.equals((java.lang.Object) serializedObjectSupporter7);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.jar.Manifest manifest60 = explodedArchive3.getManifest();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(manifest60);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.util.Set<java.lang.String> strSet81 = explodedArchive80.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getPath();
        java.lang.String str85 = uRL83.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter87.deserializeObjectExplodedArchive11();
        java.io.File file89 = serializedObjectSupporter87.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
        java.util.Set<java.lang.String> strSet91 = explodedArchive90.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive90.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL83, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL(uRL69, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL57, "file", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL96 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.lang.String str97 = uRL96.getProtocol();
        java.net.Proxy proxy98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection99 = uRL96.openConnection(proxy98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals(uRL57.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:100" + "'", str71, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals(uRL83.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertEquals(uRL93.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL94.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL95.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL96.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.addRequestProperty("", "hi!");
        fileNotFoundURLConnection17.setUseCaches(true);
        fileNotFoundURLConnection17.setDoOutput(true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream29 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.getQuery();
        java.net.FileNameMap fileNameMap8 = java.net.URLConnection.getFileNameMap();
        java.net.URLConnection.setFileNameMap(fileNameMap8);
        boolean boolean10 = uRL6.equals((java.lang.Object) fileNameMap8);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileNameMap8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        long long22 = fileNotFoundURLConnection17.getIfModifiedSince();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = uRL22.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream34 = uRL15.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.util.Set<java.lang.String> strSet41 = explodedArchive3.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest42 = explodedArchive3.manifest;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile6();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file47, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(manifest42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        long long9 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long28 = fileNotFoundURLConnection17.getLastModified();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream29 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.io.File file7 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive9 = explodedArchive3.getFilteredArchive(entryRenameFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) (short) -1);
        java.net.URL uRL31 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str32 = uRL31.getProtocol();
        java.lang.Class[] classArray33 = new java.lang.Class[] {};
        java.lang.Object obj34 = uRL31.getContent(classArray33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = fileNotFoundURLConnection17.getContent(classArray33);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertEquals(uRL31.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "file" + "'", str32, "file");
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setConnectTimeout((int) '#');
        long long33 = fileNotFoundURLConnection17.getHeaderFieldDate("", (long) (short) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.io.File file6 = explodedArchive3.root;
        java.util.jar.Manifest manifest7 = explodedArchive3.manifest;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry35.serializedObjectSupporter = serializedObjectSupporter36;
        java.io.File file38 = fileEntry35.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = fileEntry35.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive40 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter39);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile14();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive7();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter8.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter8.deserializeObjectExplodedArchive6();
        java.io.File file16 = serializedObjectSupporter8.deserializeObjectFile11();
        java.io.File file17 = serializedObjectSupporter8.deserializeObjectFile12();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        java.io.File file19 = serializedObjectSupporter8.deserializeObjectFile9();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile12();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("file");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.lang.String str6 = fileNotFoundURLConnection4.getHeaderField("hi!:100");
        java.security.Permission permission7 = fileNotFoundURLConnection4.getPermission();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(permission7);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.net.URLConnection.setDefaultRequestProperty("", "file");
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        java.net.Proxy proxy18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection19 = uRL17.openConnection(proxy18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.setConnectTimeout((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: timeout can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long28 = fileNotFoundURLConnection17.getLastModified();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream29 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        int int7 = fileNotFoundURLConnection4.getReadTimeout();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection4.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ://hi!:100");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.net.URLConnection.setDefaultRequestProperty("", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file16 = serializedObjectSupporter15.deserializeObjectFile8();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile15();
        java.io.File file18 = serializedObjectSupporter15.deserializeObjectFile13();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter15.deserializeObjectManifest1();
        java.io.File file20 = serializedObjectSupporter15.deserializeObjectFile11();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file17.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        java.lang.String str21 = fileNotFoundURLConnection17.name;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long28 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str30 = fileNotFoundURLConnection17.getRequestProperty("");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        java.lang.String str34 = uRL15.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = uRL15.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: ://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.net.URLConnection.setDefaultAllowUserInteraction(false);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.setConnectTimeout((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: timeout can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter57.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter57.deserializeObjectExplodedArchive14();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter57.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter57;
        java.net.URL uRL65 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL66 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL67 = new java.net.URL(uRL1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = serializedObjectSupporter68.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertEquals(uRL65.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL66.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNull(explodedArchive69);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        boolean boolean30 = fileNotFoundURLConnection17.getDefaultUseCaches();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter62.deserializeObjectExplodedArchive11();
        java.io.File file64 = serializedObjectSupporter62.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file64);
        java.util.Set<java.lang.String> strSet66 = explodedArchive65.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive65.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = null;
        explodedArchive65.entries = asciiBytesMap68;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter70.deserializeObjectExplodedArchive11();
        java.io.File file72 = serializedObjectSupporter70.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file72);
        java.util.Set<java.lang.String> strSet74 = explodedArchive73.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes75 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive11();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file78);
        java.io.File file80 = explodedArchive79.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry81 = explodedArchive73.new FileEntry(asciiBytes75, file80);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter82 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file83 = serializedObjectSupporter82.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter82.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter82.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter82.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest87 = serializedObjectSupporter82.deserializeObjectManifest1();
        java.io.File file88 = serializedObjectSupporter82.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry89 = explodedArchive65.new FileEntry(asciiBytes75, file88);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter90 = fileEntry89.serializedObjectSupporter;
        java.io.File file91 = fileEntry89.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive92 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNull(serializedObjectSupporter61);
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file72.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNotNull(asciiBytes75);
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file80.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNotNull(manifest87);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(serializedObjectSupporter90);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        int int5 = fileNotFoundURLConnection4.getContentLength();
        java.lang.String str7 = fileNotFoundURLConnection4.getHeaderFieldKey((int) (byte) 100);
        java.lang.String str9 = fileNotFoundURLConnection4.getRequestProperty("hi!");
        int int12 = fileNotFoundURLConnection4.getHeaderFieldInt("file", (int) (short) 10);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter54.deserializeObjectExplodedArchive11();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file56);
        java.util.Set<java.lang.String> strSet58 = explodedArchive57.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getPath();
        java.lang.String str62 = uRL60.getUserInfo();
        java.lang.String str63 = uRL60.getHost();
        java.net.URL uRL65 = new java.net.URL(uRL60, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL60, "hi!");
        fileNotFoundURLConnection67.setDefaultUseCaches(false);
        java.lang.String str70 = fileNotFoundURLConnection67.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file72 = serializedObjectSupporter71.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter71.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter71.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection67.serializedObjectSupporter = serializedObjectSupporter71;
        long long78 = fileNotFoundURLConnection67.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        fileNotFoundURLConnection67.setAllowUserInteraction(false);
        boolean boolean81 = uRL10.equals((java.lang.Object) fileNotFoundURLConnection67);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals(uRL60.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 32L + "'", long78 == 32L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive35);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        fileNotFoundURLConnection17.setUseCaches(false);
        long long30 = fileNotFoundURLConnection17.getExpiration();
        java.net.URL uRL31 = fileNotFoundURLConnection17.getURL();
        java.lang.String str32 = uRL31.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(uRL31);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.net.FileNameMap fileNameMap0 = java.net.URLConnection.getFileNameMap();
        java.net.URLConnection.setFileNameMap(fileNameMap0);
        java.net.URLConnection.setFileNameMap(fileNameMap0);
        java.net.URLConnection.setFileNameMap(fileNameMap0);
        java.net.URLConnection.setFileNameMap(fileNameMap0);
        org.junit.Assert.assertNotNull(fileNameMap0);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive7.entries = asciiBytesMap10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.io.File file22 = explodedArchive21.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive15.new FileEntry(asciiBytes17, file22);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file25 = serializedObjectSupporter24.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter24.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter24.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter24.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest29 = serializedObjectSupporter24.deserializeObjectManifest1();
        java.io.File file30 = serializedObjectSupporter24.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive7.new FileEntry(asciiBytes17, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = fileEntry31.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive33 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(asciiBytes17);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(manifest29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(serializedObjectSupporter32);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.util.Set<java.lang.String> strSet45 = explodedArchive44.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.util.Set<java.lang.String> strSet81 = explodedArchive80.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getPath();
        java.lang.String str85 = uRL83.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter87.deserializeObjectExplodedArchive11();
        java.io.File file89 = serializedObjectSupporter87.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive90 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
        java.util.Set<java.lang.String> strSet91 = explodedArchive90.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive90.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL(uRL83, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL(uRL69, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL(uRL57, "file", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL96 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter97 = filteredURLStreamHandler92.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals(uRL47.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertEquals(uRL57.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:100" + "'", str71, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertEquals(uRL83.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertEquals(uRL93.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL94.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL95.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals(uRL96.toString(), "://hi!:100");
        org.junit.Assert.assertNull(serializedObjectSupporter97);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive46.entries;
        explodedArchive3.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest56 = serializedObjectSupporter55.deserializeObjectManifest1();
        explodedArchive53.manifest = manifest56;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter58.deserializeObjectExplodedArchive11();
        java.io.File file60 = serializedObjectSupporter58.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file60);
        java.util.Set<java.lang.String> strSet62 = explodedArchive61.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive61.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = null;
        explodedArchive61.entries = asciiBytesMap64;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file68);
        java.util.Set<java.lang.String> strSet70 = explodedArchive69.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes71 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter72 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter72.deserializeObjectExplodedArchive11();
        java.io.File file74 = serializedObjectSupporter72.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file74);
        java.io.File file76 = explodedArchive75.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry77 = explodedArchive69.new FileEntry(asciiBytes71, file76);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter78 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file79 = serializedObjectSupporter78.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = serializedObjectSupporter78.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = serializedObjectSupporter78.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = serializedObjectSupporter78.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest83 = serializedObjectSupporter78.deserializeObjectManifest1();
        java.io.File file84 = serializedObjectSupporter78.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry85 = explodedArchive61.new FileEntry(asciiBytes71, file84);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter86 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file87 = serializedObjectSupporter86.deserializeObjectFile8();
        java.io.File file88 = serializedObjectSupporter86.deserializeObjectFile15();
        java.io.File file89 = serializedObjectSupporter86.deserializeObjectFile13();
        java.io.File file90 = serializedObjectSupporter86.deserializeObjectFile9();
        java.io.File file91 = serializedObjectSupporter86.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry92 = explodedArchive53.new FileEntry(asciiBytes71, file91);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive93 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest56);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(asciiBytes71);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file74.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file76.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive80);
        org.junit.Assert.assertNull(explodedArchive81);
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNotNull(manifest83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file88.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file90.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file91.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = fileEntry59.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(serializedObjectSupporter60);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI13 = uRL10.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        int int5 = fileNotFoundURLConnection4.getContentLength();
        java.lang.String str7 = fileNotFoundURLConnection4.getHeaderFieldKey((int) (byte) 100);
        java.net.URL uRL9 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str10 = uRL9.getProtocol();
        java.lang.Class[] classArray11 = new java.lang.Class[] {};
        java.lang.Object obj12 = uRL9.getContent(classArray11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = fileNotFoundURLConnection4.getContent(classArray11);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL15, "");
        java.lang.String str19 = uRL18.toExternalForm();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "://hi!:100/hi!" + "'", str19, "://hi!:100/hi!");
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getPath();
        java.lang.String str30 = uRL28.getUserInfo();
        java.lang.String str31 = uRL28.getHost();
        java.net.URL uRL33 = new java.net.URL(uRL28, "hi!");
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getHost();
        java.net.URL uRL37 = new java.net.URL(uRL33, "hi!:100");
        boolean boolean38 = uRL10.sameFile(uRL37);
        java.net.URL uRL40 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str41 = uRL40.getProtocol();
        java.lang.Class[] classArray42 = new java.lang.Class[] {};
        java.lang.Object obj43 = uRL40.getContent(classArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = uRL37.getContent(classArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -80");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals(uRL40.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "file" + "'", str41, "file");
        org.junit.Assert.assertNotNull(classArray42);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        java.lang.String str28 = explodedArchive3.toString();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str28, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        boolean boolean8 = fileNotFoundURLConnection4.getDoInput();
        java.lang.String str9 = fileNotFoundURLConnection4.name;
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream10 = fileNotFoundURLConnection4.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "://hi!:100" + "'", str9, "://hi!:100");
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("://hi!:100", "/hi!", (int) '4', "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream28 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file11 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file12 = serializedObjectSupporter0.deserializeObjectFile2();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        java.lang.String str28 = fileNotFoundURLConnection17.name;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        java.io.File file50 = fileEntry49.file;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        boolean boolean58 = explodedArchive57.filtered;
        boolean boolean59 = explodedArchive57.filtered;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.io.File file60 = fileEntry59.getFile();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream50 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", "", (int) (byte) 10, "://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: org.springframework.boot.loader.archive.explodedarchive$filenotfoundurlconnection:://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.util.jar.Manifest manifest7 = explodedArchive3.manifest;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.io.File file13 = explodedArchive12.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest15 = serializedObjectSupporter14.deserializeObjectManifest1();
        explodedArchive12.manifest = manifest15;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        java.io.File file19 = serializedObjectSupporter17.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
        java.util.Set<java.lang.String> strSet21 = explodedArchive20.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive20.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = null;
        explodedArchive20.entries = asciiBytesMap23;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.util.Set<java.lang.String> strSet29 = explodedArchive28.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes30 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.io.File file35 = explodedArchive34.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = explodedArchive28.new FileEntry(asciiBytes30, file35);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file38 = serializedObjectSupporter37.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter37.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter37.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter37.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest42 = serializedObjectSupporter37.deserializeObjectManifest1();
        java.io.File file43 = serializedObjectSupporter37.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = explodedArchive20.new FileEntry(asciiBytes30, file43);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file46 = serializedObjectSupporter45.deserializeObjectFile8();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile15();
        java.io.File file48 = serializedObjectSupporter45.deserializeObjectFile13();
        java.io.File file49 = serializedObjectSupporter45.deserializeObjectFile9();
        java.io.File file50 = serializedObjectSupporter45.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry51 = explodedArchive12.new FileEntry(asciiBytes30, file50);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = fileEntry51.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive53 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest15);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(asciiBytes30);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(manifest42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file47.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file50.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(serializedObjectSupporter52);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getProtocol();
        java.lang.Class[] classArray3 = new java.lang.Class[] {};
        java.lang.Object obj4 = uRL1.getContent(classArray3);
        java.net.Proxy proxy5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection6 = uRL1.openConnection(proxy5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertNotNull(classArray3);
        org.junit.Assert.assertNull(obj4);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setReadTimeout(0);
        fileNotFoundURLConnection17.addRequestProperty("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getProtocol();
        java.lang.Class[] classArray3 = new java.lang.Class[] {};
        java.lang.Object obj4 = uRL1.getContent(classArray3);
        java.lang.String str5 = uRL1.toString();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertNotNull(classArray3);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.util.Set<java.lang.String> strSet9 = explodedArchive8.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive8.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        java.lang.String str18 = explodedArchive16.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.io.File file27 = explodedArchive26.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest29 = serializedObjectSupporter28.deserializeObjectManifest1();
        explodedArchive26.manifest = manifest29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive34.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = null;
        explodedArchive34.entries = asciiBytesMap37;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.util.Set<java.lang.String> strSet43 = explodedArchive42.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes44 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.io.File file49 = explodedArchive48.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive42.new FileEntry(asciiBytes44, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file52 = serializedObjectSupporter51.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter51.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter51.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter51.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest56 = serializedObjectSupporter51.deserializeObjectManifest1();
        java.io.File file57 = serializedObjectSupporter51.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive34.new FileEntry(asciiBytes44, file57);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file60 = serializedObjectSupporter59.deserializeObjectFile8();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile15();
        java.io.File file62 = serializedObjectSupporter59.deserializeObjectFile13();
        java.io.File file63 = serializedObjectSupporter59.deserializeObjectFile9();
        java.io.File file64 = serializedObjectSupporter59.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive26.new FileEntry(asciiBytes44, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry68 = explodedArchive22.new FileEntry(asciiBytes44, file67);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive12();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive16.new FileEntry(asciiBytes44, file71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive16.entries;
        explodedArchive8.entries = asciiBytesMap73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap73);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file77 = serializedObjectSupporter76.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter76.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = serializedObjectSupporter76.deserializeObjectExplodedArchive15();
        java.io.File file80 = serializedObjectSupporter76.deserializeObjectFile11();
        java.io.File file81 = serializedObjectSupporter76.deserializeObjectFile15();
        // The following exception was thrown during execution in test generation
        try {
// flaky:             explodedArchive75.buildEntries(file81, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str18, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest29);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(asciiBytes44);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(manifest56);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file61.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file64.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNull(explodedArchive79);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file80.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file81.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        fileNotFoundURLConnection17.setConnectTimeout((int) (byte) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.net.URL uRL0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL0, "://hi!:100");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        boolean boolean31 = fileEntry27.isDirectory();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.toExternalForm();
        java.lang.String str13 = uRL10.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "://hi!:100" + "'", str12, "://hi!:100");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "://hi!:100" + "'", str13, "://hi!:100");
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive8 = explodedArchive3.getFilteredArchive(entryRenameFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile3();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile8();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile6();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter31;
        java.io.File file35 = fileEntry27.file;
        java.io.File file36 = fileEntry27.getFile();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        java.io.File file53 = serializedObjectSupporter49.deserializeObjectFile9();
        java.io.File file54 = serializedObjectSupporter49.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter49.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter49;
        java.net.URL uRL57 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        java.io.File file62 = serializedObjectSupporter58.deserializeObjectFile9();
        java.io.File file63 = serializedObjectSupporter58.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter58.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter58;
        java.io.File file66 = serializedObjectSupporter58.deserializeObjectFile6();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file://hi!:100file");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = fileEntry42.serializedObjectSupporter;
        java.io.File file44 = fileEntry42.file;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file44.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        java.lang.String str37 = uRL35.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str37, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        int int7 = fileNotFoundURLConnection4.getReadTimeout();
        java.lang.String str9 = fileNotFoundURLConnection4.getHeaderFieldKey((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream10 = fileNotFoundURLConnection4.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream21 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = fileEntry27.serializedObjectSupporter;
        java.io.File file29 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter30.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter30.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter30.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter30.deserializeObjectExplodedArchive16();
        java.io.File file36 = serializedObjectSupporter30.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter30.deserializeObjectExplodedArchive4();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter30.deserializeObjectExplodedArchive15();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive39);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        fileNotFoundURLConnection4.setDoOutput(false);
        fileNotFoundURLConnection4.setDoInput(true);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive3.new FilteredURLStreamHandler();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("://hi!:100", "hi!", 100, "/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ://hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getAuthority();
        java.lang.String str52 = uRL22.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = uRL22.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:100" + "'", str51, "hi!:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
        java.util.Set<java.lang.String> strSet60 = explodedArchive59.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = null;
        explodedArchive66.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive11();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
        java.util.Set<java.lang.String> strSet75 = explodedArchive74.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes76 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.io.File file81 = explodedArchive80.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry82 = explodedArchive74.new FileEntry(asciiBytes76, file81);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file84 = serializedObjectSupporter83.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter83.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter83.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = serializedObjectSupporter83.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest88 = serializedObjectSupporter83.deserializeObjectManifest1();
        java.io.File file89 = serializedObjectSupporter83.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry90 = explodedArchive66.new FileEntry(asciiBytes76, file89);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter91 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry90.serializedObjectSupporter = serializedObjectSupporter91;
        java.io.File file93 = fileEntry90.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter94 = fileEntry90.serializedObjectSupporter;
        filteredURLStreamHandler61.serializedObjectSupporter = serializedObjectSupporter94;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter96 = filteredURLStreamHandler61.serializedObjectSupporter;
        java.net.URL uRL97 = new java.net.URL(uRL22, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        int int98 = uRL97.getPort();
        java.lang.String str99 = uRL97.getFile();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals(uRL62.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(asciiBytes76);
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file81.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNull(explodedArchive87);
        org.junit.Assert.assertNotNull(manifest88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter94);
        org.junit.Assert.assertNotNull(serializedObjectSupporter96);
        org.junit.Assert.assertEquals(uRL97.toString(), "://hi!:100/://hi!:100");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 100 + "'", int98 == 100);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "/://hi!:100" + "'", str99, "/://hi!:100");
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file63 = serializedObjectSupporter62.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter62.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = serializedObjectSupporter62.deserializeObjectExplodedArchive15();
        java.io.File file66 = serializedObjectSupporter62.deserializeObjectFile4();
        java.io.File file67 = serializedObjectSupporter62.deserializeObjectFile2();
        java.util.jar.Manifest manifest68 = serializedObjectSupporter62.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest68;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNull(explodedArchive65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(manifest68);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.net.URL uRL25 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str26 = uRL25.getAuthority();
        boolean boolean27 = uRL23.sameFile(uRL25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        java.io.File file32 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap38);
        boolean boolean40 = uRL25.equals((java.lang.Object) explodedArchive39);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile6();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("://hi!:100/hi!", "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (int) (short) 1, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ://hi!:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        fileNotFoundURLConnection50.setDefaultUseCaches(true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream53 = fileNotFoundURLConnection50.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile7();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile12();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("://hi!:100/hi!", "file", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ://hi!:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        java.lang.String str49 = uRL10.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "");
        fileNotFoundURLConnection51.setReadTimeout(0);
        long long56 = fileNotFoundURLConnection51.getHeaderFieldLong("file", (long) '4');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 52L + "'", long56 == 52L);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("://hi!:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: ://hi!:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/://hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter15.deserializeObjectExplodedArchive15();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter15;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive3.new FilteredURLStreamHandler();
        java.io.File file21 = explodedArchive3.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file17.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = null;
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter54.deserializeObjectExplodedArchive11();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file56);
        java.util.Set<java.lang.String> strSet58 = explodedArchive57.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.util.Set<java.lang.String> strSet65 = explodedArchive64.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive64.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = null;
        explodedArchive64.entries = asciiBytesMap67;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive11();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file71);
        java.util.Set<java.lang.String> strSet73 = explodedArchive72.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes74 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter75 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter75.deserializeObjectExplodedArchive11();
        java.io.File file77 = serializedObjectSupporter75.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file77);
        java.io.File file79 = explodedArchive78.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry80 = explodedArchive72.new FileEntry(asciiBytes74, file79);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter81 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file82 = serializedObjectSupporter81.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter81.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter81.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter81.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest86 = serializedObjectSupporter81.deserializeObjectManifest1();
        java.io.File file87 = serializedObjectSupporter81.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = explodedArchive64.new FileEntry(asciiBytes74, file87);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter89 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry88.serializedObjectSupporter = serializedObjectSupporter89;
        java.io.File file91 = fileEntry88.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter92 = fileEntry88.serializedObjectSupporter;
        filteredURLStreamHandler59.serializedObjectSupporter = serializedObjectSupporter92;
        java.net.URL uRL94 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL96 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.net.URLConnection uRLConnection97 = filteredURLStreamHandler59.openConnection(uRL96);
        boolean boolean98 = uRLConnection97.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals(uRL60.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(asciiBytes74);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNotNull(manifest86);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter92);
        org.junit.Assert.assertEquals(uRL94.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL96.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRLConnection97);
// flaky:         org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter15.deserializeObjectExplodedArchive15();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter15;
        java.io.File file20 = serializedObjectSupporter15.deserializeObjectFile9();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file17.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setDoInput(true);
        fileNotFoundURLConnection4.setIfModifiedSince(0L);
        long long13 = fileNotFoundURLConnection4.getLastModified();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        java.lang.String str8 = explodedArchive3.toString();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str8, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest1 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNotNull(manifest1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getPath();
        java.lang.String str30 = uRL28.getUserInfo();
        java.lang.String str31 = uRL28.getHost();
        java.net.URL uRL33 = new java.net.URL(uRL28, "hi!");
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getHost();
        java.net.URL uRL37 = new java.net.URL(uRL33, "hi!:100");
        boolean boolean38 = uRL10.sameFile(uRL37);
        java.lang.String str39 = uRL10.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "://hi!:100" + "'", str39, "://hi!:100");
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setDoInput(true);
        boolean boolean11 = fileNotFoundURLConnection4.getAllowUserInteraction();
        fileNotFoundURLConnection4.setConnectTimeout(10);
        java.net.URL uRL15 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str16 = uRL15.getProtocol();
        java.lang.Class[] classArray17 = new java.lang.Class[] {};
        java.lang.Object obj18 = uRL15.getContent(classArray17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj19 = fileNotFoundURLConnection4.getContent(classArray17);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file" + "'", str16, "file");
        org.junit.Assert.assertNotNull(classArray17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream14 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getUserInfo();
        java.lang.String str72 = uRL69.getHost();
        java.net.URL uRL74 = new java.net.URL(uRL69, "hi!");
        java.lang.String str75 = uRL74.getRef();
        java.net.URL uRL77 = new java.net.URL(uRL74, "");
        boolean boolean78 = uRL20.sameFile(uRL74);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection79 = uRL74.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals(uRL74.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals(uRL77.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getQuery();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter45.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter45.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
        java.util.Set<java.lang.String> strSet49 = explodedArchive48.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.util.Set<java.lang.String> strSet56 = explodedArchive55.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive55.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = null;
        explodedArchive55.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter60 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter60.deserializeObjectExplodedArchive11();
        java.io.File file62 = serializedObjectSupporter60.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file62);
        java.util.Set<java.lang.String> strSet64 = explodedArchive63.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes65 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter66.deserializeObjectExplodedArchive11();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file68);
        java.io.File file70 = explodedArchive69.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = explodedArchive63.new FileEntry(asciiBytes65, file70);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter72 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file73 = serializedObjectSupporter72.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter72.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter72.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter72.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest77 = serializedObjectSupporter72.deserializeObjectManifest1();
        java.io.File file78 = serializedObjectSupporter72.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive55.new FileEntry(asciiBytes65, file78);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry79.serializedObjectSupporter = serializedObjectSupporter80;
        java.io.File file82 = fileEntry79.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = fileEntry79.serializedObjectSupporter;
        filteredURLStreamHandler50.serializedObjectSupporter = serializedObjectSupporter83;
        java.net.URL uRL85 = new java.net.URL("hi!:100", "hi!:100", (int) (byte) 0, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        boolean boolean86 = uRL10.sameFile(uRL85);
        int int87 = uRL10.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection88 = uRL10.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertEquals(uRL51.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(asciiBytes65);
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(manifest77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter83);
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        java.io.File file53 = serializedObjectSupporter49.deserializeObjectFile9();
        java.io.File file54 = serializedObjectSupporter49.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter49.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter49;
        java.net.URL uRL57 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str58 = uRL57.getHost();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.toString();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        java.net.Proxy proxy18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection19 = uRL15.openConnection(proxy18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long26 = fileNotFoundURLConnection17.getExpiration();
        long long29 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!", 100L);
        boolean boolean30 = fileNotFoundURLConnection17.getDefaultUseCaches();
        fileNotFoundURLConnection17.addRequestProperty("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.net.URL uRL8 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str9 = uRL8.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL8, "://hi!:100");
        fileNotFoundURLConnection11.setUseCaches(true);
        java.lang.String str15 = fileNotFoundURLConnection11.getRequestProperty("");
        fileNotFoundURLConnection11.setDoInput(true);
        boolean boolean18 = fileNotFoundURLConnection11.getAllowUserInteraction();
        boolean boolean19 = uRL6.equals((java.lang.Object) fileNotFoundURLConnection11);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str9, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        int int23 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setReadTimeout((int) (short) 10);
        fileNotFoundURLConnection17.setUseCaches(true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream28 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive3.entries;
        java.lang.Class<?> wildcardClass32 = explodedArchive3.getClass();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setIfModifiedSince(0L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream27 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL10.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection22 = uRL10.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive46.entries;
        explodedArchive3.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive3.getNestedArchives(entryFilter50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap48);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("/hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        fileNotFoundURLConnection4.setIfModifiedSince((-1L));
        java.net.URL uRL9 = fileNotFoundURLConnection4.getURL();
        java.lang.Class<?> wildcardClass10 = fileNotFoundURLConnection4.getClass();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL9);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile7();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = fileNotFoundURLConnection4.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        java.lang.String str29 = fileNotFoundURLConnection17.getContentEncoding();
        long long30 = fileNotFoundURLConnection17.getLastModified();
        int int31 = fileNotFoundURLConnection17.getReadTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getContentLengthLong();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = fileNotFoundURLConnection17.serializedObjectSupporter;
        boolean boolean32 = fileNotFoundURLConnection17.getDefaultUseCaches();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile15();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file4.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = fileNotFoundURLConnection4.serializedObjectSupporter;
        fileNotFoundURLConnection4.setUseCaches(false);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getProtocol();
        int int37 = uRL10.getDefaultPort();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive3.getNestedArchives(entryFilter31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive3.getEntries();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection5);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        java.net.URLConnection.setDefaultRequestProperty("/://hi!:100", "hi!");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        java.net.URL uRL49 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        int int50 = uRL49.getPort();
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals(uRL49.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int20 = fileNotFoundURLConnection17.getReadTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.jar.Manifest manifest31 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter37.deserializeObjectManifest1();
        explodedArchive35.manifest = manifest38;
        explodedArchive3.manifest = manifest38;
        java.lang.String str41 = explodedArchive3.toString();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str41, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getQuery();
        java.lang.String str37 = uRL10.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.io.File file42 = explodedArchive41.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive41.entries;
        java.io.File file44 = explodedArchive41.getroot();
        java.util.jar.Manifest manifest45 = explodedArchive41.getManifest();
        java.net.URL uRL46 = explodedArchive41.getUrl();
        java.net.URL uRL48 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str49 = uRL48.getProtocol();
        java.lang.Class[] classArray50 = new java.lang.Class[] {};
        java.lang.Object obj51 = uRL48.getContent(classArray50);
        java.lang.Object obj52 = uRL46.getContent(classArray50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = uRL10.getContent(classArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertNotNull(uRL46);
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "file" + "'", str49, "file");
        org.junit.Assert.assertNotNull(classArray50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        fileNotFoundURLConnection4.addRequestProperty("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter15.deserializeObjectExplodedArchive15();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter15;
        java.util.jar.Manifest manifest20 = explodedArchive3.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive22 = explodedArchive3.getFilteredArchive(entryRenameFilter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file17.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(manifest20);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL(uRL10, "[hi!:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL10.getRef();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals(uRL21.toString(), "://hi!:100/[hi!:100]:0");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getProtocol();
        java.lang.String str3 = uRL1.toString();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str3, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest1 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNotNull(manifest1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[hi!:100]:0");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        java.lang.String str8 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.io.File file22 = explodedArchive21.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive21.entries;
        explodedArchive13.entries = asciiBytesMap23;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.util.Set<java.lang.String> strSet29 = explodedArchive28.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive28.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = null;
        explodedArchive28.entries = asciiBytesMap31;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.util.Set<java.lang.String> strSet37 = explodedArchive36.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes38 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter39.deserializeObjectExplodedArchive11();
        java.io.File file41 = serializedObjectSupporter39.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file41);
        java.io.File file43 = explodedArchive42.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = explodedArchive36.new FileEntry(asciiBytes38, file43);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file46 = serializedObjectSupporter45.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter45.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = serializedObjectSupporter45.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter45.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest50 = serializedObjectSupporter45.deserializeObjectManifest1();
        java.io.File file51 = serializedObjectSupporter45.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive28.new FileEntry(asciiBytes38, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry52.serializedObjectSupporter = serializedObjectSupporter53;
        java.io.File file55 = fileEntry52.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile6();
        fileEntry52.serializedObjectSupporter = serializedObjectSupporter56;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes60 = fileEntry52.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter61.deserializeObjectExplodedArchive2();
        java.io.File file64 = serializedObjectSupporter61.deserializeObjectFile3();
        java.io.File file65 = serializedObjectSupporter61.deserializeObjectFile14();
        java.io.File file66 = serializedObjectSupporter61.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry67 = explodedArchive13.new FileEntry(asciiBytes60, file66);
        java.io.File file68 = fileEntry67.file;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file68, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str8, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(asciiBytes38);
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNull(explodedArchive48);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNotNull(manifest50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes60);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file64.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.net.URL uRL27 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str28 = uRL27.getProtocol();
        java.lang.Class[] classArray29 = new java.lang.Class[] {};
        java.lang.Object obj30 = uRL27.getContent(classArray29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = fileNotFoundURLConnection17.getContent(classArray29);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertNotNull(classArray29);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter54.deserializeObjectExplodedArchive11();
        java.io.File file56 = serializedObjectSupporter54.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file56);
        java.util.Set<java.lang.String> strSet58 = explodedArchive57.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter61 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter61.deserializeObjectExplodedArchive11();
        java.io.File file63 = serializedObjectSupporter61.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file63);
        java.util.Set<java.lang.String> strSet65 = explodedArchive64.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive64.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = null;
        explodedArchive64.entries = asciiBytesMap67;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = serializedObjectSupporter69.deserializeObjectExplodedArchive11();
        java.io.File file71 = serializedObjectSupporter69.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file71);
        java.util.Set<java.lang.String> strSet73 = explodedArchive72.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes74 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter75 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = serializedObjectSupporter75.deserializeObjectExplodedArchive11();
        java.io.File file77 = serializedObjectSupporter75.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file77);
        java.io.File file79 = explodedArchive78.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry80 = explodedArchive72.new FileEntry(asciiBytes74, file79);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter81 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file82 = serializedObjectSupporter81.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter81.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter81.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter81.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest86 = serializedObjectSupporter81.deserializeObjectManifest1();
        java.io.File file87 = serializedObjectSupporter81.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = explodedArchive64.new FileEntry(asciiBytes74, file87);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter89 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry88.serializedObjectSupporter = serializedObjectSupporter89;
        java.io.File file91 = fileEntry88.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter92 = fileEntry88.serializedObjectSupporter;
        filteredURLStreamHandler59.serializedObjectSupporter = serializedObjectSupporter92;
        java.net.URL uRL94 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL96 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.net.URLConnection uRLConnection97 = filteredURLStreamHandler59.openConnection(uRL96);
        uRLConnection97.setDefaultUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals(uRL60.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file63.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNull(explodedArchive70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file71.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(asciiBytes74);
        org.junit.Assert.assertNull(explodedArchive76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNotNull(manifest86);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter92);
        org.junit.Assert.assertEquals(uRL94.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL96.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRLConnection97);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive3.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive3.entries = asciiBytesMap4;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = explodedArchive3.serializedObjectSupporter;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter84 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file85 = serializedObjectSupporter84.deserializeObjectFile8();
        java.io.File file86 = serializedObjectSupporter84.deserializeObjectFile15();
        java.io.File file87 = serializedObjectSupporter84.deserializeObjectFile13();
        java.io.File file88 = serializedObjectSupporter84.deserializeObjectFile9();
        java.io.File file89 = serializedObjectSupporter84.deserializeObjectFile15();
        java.util.jar.Manifest manifest90 = serializedObjectSupporter84.deserializeObjectManifest1();
        explodedArchive83.manifest = manifest90;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file86.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file88.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file89.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest90);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        java.lang.String str7 = uRL6.getQuery();
        java.lang.Object obj8 = uRL6.getContent();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file10 = serializedObjectSupporter9.deserializeObjectFile8();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile15();
        java.io.File file12 = serializedObjectSupporter9.deserializeObjectFile13();
        java.io.File file13 = serializedObjectSupporter9.deserializeObjectFile9();
        java.io.File file14 = serializedObjectSupporter9.deserializeObjectFile15();
        boolean boolean15 = uRL6.equals((java.lang.Object) serializedObjectSupporter9);
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file11.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file14.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive7();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter8.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter8.deserializeObjectExplodedArchive6();
        java.io.File file16 = serializedObjectSupporter8.deserializeObjectFile11();
        java.io.File file17 = serializedObjectSupporter8.deserializeObjectFile12();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        fileNotFoundURLConnection4.setUseCaches(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream21 = fileNotFoundURLConnection4.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        explodedArchive3.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive3.getEntries();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = explodedArchive3.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setUseCaches(true);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap27 = fileNotFoundURLConnection17.getRequestProperties();
        java.net.URL uRL28 = fileNotFoundURLConnection17.getURL();
        java.lang.String str30 = fileNotFoundURLConnection17.getHeaderField((int) (byte) -1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(uRL28);
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive46.entries;
        explodedArchive3.entries = asciiBytesMap48;
        java.util.jar.Manifest manifest50 = explodedArchive3.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter51.deserializeObjectExplodedArchive11();
        java.io.File file53 = serializedObjectSupporter51.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file53);
        java.util.Set<java.lang.String> strSet55 = explodedArchive54.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive54.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = null;
        explodedArchive54.entries = asciiBytesMap57;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter59 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter59.deserializeObjectExplodedArchive11();
        java.io.File file61 = serializedObjectSupporter59.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file61);
        java.util.Set<java.lang.String> strSet63 = explodedArchive62.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = serializedObjectSupporter65.deserializeObjectExplodedArchive11();
        java.io.File file67 = serializedObjectSupporter65.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file67);
        java.io.File file69 = explodedArchive68.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = explodedArchive62.new FileEntry(asciiBytes64, file69);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file72 = serializedObjectSupporter71.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter71.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter71.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = serializedObjectSupporter71.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest76 = serializedObjectSupporter71.deserializeObjectManifest1();
        java.io.File file77 = serializedObjectSupporter71.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry78 = explodedArchive54.new FileEntry(asciiBytes64, file77);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter79 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry78.serializedObjectSupporter = serializedObjectSupporter79;
        java.io.File file81 = fileEntry78.file;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter82 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter82.deserializeObjectExplodedArchive11();
        java.io.File file84 = serializedObjectSupporter82.deserializeObjectFile6();
        fileEntry78.serializedObjectSupporter = serializedObjectSupporter82;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes86 = fileEntry78.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes87 = fileEntry78.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive88 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(manifest50);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(asciiBytes64);
        org.junit.Assert.assertNull(explodedArchive66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNull(explodedArchive75);
        org.junit.Assert.assertNotNull(manifest76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes86);
        org.junit.Assert.assertNotNull(asciiBytes87);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        java.lang.String str34 = uRL15.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection35 = uRL15.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile14();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str36 = uRL10.getQuery();
        java.lang.String str37 = uRL10.toExternalForm();
        java.net.URL uRL39 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str40 = uRL39.getProtocol();
        java.lang.Class[] classArray41 = new java.lang.Class[] {};
        java.lang.Object obj42 = uRL39.getContent(classArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = uRL10.getContent(classArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "://hi!:100" + "'", str37, "://hi!:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "file" + "'", str40, "file");
        org.junit.Assert.assertNotNull(classArray41);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file11 = serializedObjectSupporter0.deserializeObjectFile12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive12);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        int int28 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setConnectTimeout((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getRequestProperties();
        long long23 = fileNotFoundURLConnection17.getHeaderFieldDate("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 0L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        long long22 = fileNotFoundURLConnection17.getDate();
        boolean boolean23 = fileNotFoundURLConnection17.getAllowUserInteraction();
        fileNotFoundURLConnection17.setDefaultUseCaches(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = fileNotFoundURLConnection17.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        fileNotFoundURLConnection4.setDoOutput(false);
        boolean boolean10 = fileNotFoundURLConnection4.getDoInput();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("://hi!:100/hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file51 = serializedObjectSupporter50.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter50.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter50.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = serializedObjectSupporter50.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest55 = serializedObjectSupporter50.deserializeObjectManifest1();
        java.io.File file56 = serializedObjectSupporter50.deserializeObjectFile14();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file58 = serializedObjectSupporter50.deserializeObjectFile4();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNull(explodedArchive54);
        org.junit.Assert.assertNotNull(manifest55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter15.deserializeObjectExplodedArchive15();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter15;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = explodedArchive23.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter33.deserializeObjectExplodedArchive11();
        java.io.File file35 = serializedObjectSupporter33.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
        java.io.File file37 = explodedArchive36.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest39 = serializedObjectSupporter38.deserializeObjectManifest1();
        explodedArchive36.manifest = manifest39;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.io.File file45 = explodedArchive44.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive44.entries;
        explodedArchive36.entries = asciiBytesMap46;
        explodedArchive23.entries = asciiBytesMap46;
        java.util.jar.Manifest manifest49 = explodedArchive23.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive23.entries;
        java.util.jar.Manifest manifest51 = explodedArchive23.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest58 = serializedObjectSupporter57.deserializeObjectManifest1();
        explodedArchive55.manifest = manifest58;
        explodedArchive23.manifest = manifest58;
        java.util.Set<java.lang.String> strSet61 = explodedArchive23.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest62 = explodedArchive23.manifest;
        explodedArchive3.manifest = manifest62;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file17.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes32);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file35.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest39);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest58);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(manifest62);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str23 = fileNotFoundURLConnection17.getHeaderField(100);
        long long24 = fileNotFoundURLConnection17.getExpiration();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry35.serializedObjectSupporter = serializedObjectSupporter36;
        java.io.File file38 = fileEntry35.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry35.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = fileEntry35.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes41 = fileEntry35.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive11();
        java.io.File file47 = serializedObjectSupporter42.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive3.new FileEntry(asciiBytes41, file47);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter49.deserializeObjectExplodedArchive11();
        java.io.File file51 = serializedObjectSupporter49.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file51);
        java.util.Set<java.lang.String> strSet53 = explodedArchive52.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive52.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = null;
        explodedArchive52.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter57.deserializeObjectExplodedArchive11();
        java.io.File file59 = serializedObjectSupporter57.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file59);
        java.util.Set<java.lang.String> strSet61 = explodedArchive60.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes62 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.io.File file67 = explodedArchive66.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry68 = explodedArchive60.new FileEntry(asciiBytes62, file67);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter69 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file70 = serializedObjectSupporter69.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter69.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter69.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = serializedObjectSupporter69.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest74 = serializedObjectSupporter69.deserializeObjectManifest1();
        java.io.File file75 = serializedObjectSupporter69.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry76 = explodedArchive52.new FileEntry(asciiBytes62, file75);
        java.io.File file77 = fileEntry76.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive78 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNotNull(asciiBytes40);
        org.junit.Assert.assertNotNull(asciiBytes41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file47.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file59.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(asciiBytes62);
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNull(explodedArchive73);
        org.junit.Assert.assertNotNull(manifest74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str7 = explodedArchive3.toString();
        java.util.jar.Manifest manifest8 = explodedArchive3.manifest;
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        fileNotFoundURLConnection17.setDoOutput(false);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream28 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        java.lang.String str24 = uRL23.getRef();
        java.lang.String str25 = uRL23.getRef();
        int int26 = uRL23.getDefaultPort();
        java.net.Proxy proxy27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection28 = uRL23.openConnection(proxy27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getContentLengthLong();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter57.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter57.deserializeObjectExplodedArchive14();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter57.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter57;
        java.net.URL uRL65 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL66 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL67 = new java.net.URL(uRL1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str68 = uRL1.getProtocol();
        int int69 = uRL1.getDefaultPort();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertEquals(uRL65.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL66.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "file" + "'", str68, "file");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = fileEntry27.serializedObjectSupporter;
        java.io.File file29 = fileEntry27.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter30.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter30.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter30.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter30.deserializeObjectExplodedArchive16();
        java.io.File file36 = serializedObjectSupporter30.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter30.deserializeObjectExplodedArchive4();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter30;
        java.io.File file39 = fileEntry27.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        boolean boolean5 = explodedArchive3.filtered;
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile7();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile12();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.net.URLConnection.setDefaultRequestProperty("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        int int24 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        int int27 = fileNotFoundURLConnection17.getConnectTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI20 = uRL15.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        long long27 = fileNotFoundURLConnection17.getHeaderFieldLong("", 10L);
        long long30 = fileNotFoundURLConnection17.getHeaderFieldLong("", 35L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream31 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10L + "'", long27 == 10L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive26.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = null;
        explodedArchive26.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter31.deserializeObjectExplodedArchive11();
        java.io.File file33 = serializedObjectSupporter31.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file33);
        java.util.Set<java.lang.String> strSet35 = explodedArchive34.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive34.new FileEntry(asciiBytes36, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest48 = serializedObjectSupporter43.deserializeObjectManifest1();
        java.io.File file49 = serializedObjectSupporter43.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive26.new FileEntry(asciiBytes36, file49);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter51 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry50.serializedObjectSupporter = serializedObjectSupporter51;
        java.io.File file53 = fileEntry50.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = fileEntry50.serializedObjectSupporter;
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter54;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = filteredURLStreamHandler21.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter57 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file58 = serializedObjectSupporter57.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter57.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter57.deserializeObjectExplodedArchive14();
        java.io.File file61 = serializedObjectSupporter57.deserializeObjectFile9();
        java.io.File file62 = serializedObjectSupporter57.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = serializedObjectSupporter57.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler21.serializedObjectSupporter = serializedObjectSupporter57;
        java.net.URL uRL65 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL66 = new java.net.URL("file", "://hi!:100/hi!", (int) (byte) 100, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL67 = new java.net.URL(uRL1, "hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = filteredURLStreamHandler21.serializedObjectSupporter;
        java.io.File file69 = serializedObjectSupporter68.deserializeObjectFile6();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(asciiBytes36);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(manifest48);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(serializedObjectSupporter56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive63);
        org.junit.Assert.assertEquals(uRL65.toString(), "file://hi!:100file");
        org.junit.Assert.assertEquals(uRL66.toString(), "file://[://hi!:100/hi!]:100hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
        org.junit.Assert.assertNotNull(serializedObjectSupporter68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldLong("://hi!:100/hi!", (long) ' ');
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        fileNotFoundURLConnection17.setDoOutput(true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream33 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        java.util.jar.Manifest manifest84 = explodedArchive83.manifest;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter85 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter85.deserializeObjectExplodedArchive11();
        java.io.File file87 = serializedObjectSupporter85.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive(file87);
        // The following exception was thrown during execution in test generation
        try {
// flaky:             explodedArchive83.buildEntries(file87, false);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -54");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest84);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file87.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        java.util.HashSet hashSet4 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(hashSet4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.lang.String str6 = fileNotFoundURLConnection4.getHeaderField("hi!:100");
        long long7 = fileNotFoundURLConnection4.getDate();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap8 = fileNotFoundURLConnection4.getRequestProperties();
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection4.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: ://hi!:100");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getUserInfo();
        java.lang.String str72 = uRL69.getHost();
        java.net.URL uRL74 = new java.net.URL(uRL69, "hi!");
        java.lang.String str75 = uRL74.getRef();
        java.net.URL uRL77 = new java.net.URL(uRL74, "");
        boolean boolean78 = uRL20.sameFile(uRL74);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream79 = uRL74.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals(uRL69.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertEquals(uRL74.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals(uRL77.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getDoOutput();
        fileNotFoundURLConnection17.setConnectTimeout((int) (byte) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile7();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit1069761328127692012/junit891059030562649033/d");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file10 = serializedObjectSupporter9.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive8();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(asciiBytes8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNull(explodedArchive14);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.lang.String str5 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter10.deserializeObjectExplodedArchive11();
        java.io.File file12 = serializedObjectSupporter10.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
        java.io.File file14 = explodedArchive13.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest16 = serializedObjectSupporter15.deserializeObjectManifest1();
        explodedArchive13.manifest = manifest16;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive21.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter32.deserializeObjectExplodedArchive11();
        java.io.File file34 = serializedObjectSupporter32.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file34);
        java.io.File file36 = explodedArchive35.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive29.new FileEntry(asciiBytes31, file36);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file39 = serializedObjectSupporter38.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = serializedObjectSupporter38.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter38.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter38.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest43 = serializedObjectSupporter38.deserializeObjectManifest1();
        java.io.File file44 = serializedObjectSupporter38.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = explodedArchive21.new FileEntry(asciiBytes31, file44);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file47 = serializedObjectSupporter46.deserializeObjectFile8();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile15();
        java.io.File file49 = serializedObjectSupporter46.deserializeObjectFile13();
        java.io.File file50 = serializedObjectSupporter46.deserializeObjectFile9();
        java.io.File file51 = serializedObjectSupporter46.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive13.new FileEntry(asciiBytes31, file51);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file54 = serializedObjectSupporter53.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = explodedArchive9.new FileEntry(asciiBytes31, file54);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive12();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry59 = explodedArchive3.new FileEntry(asciiBytes31, file58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive3.entries;
        java.lang.String str61 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive3.getNestedArchives(entryFilter62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest16);
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive40);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(manifest43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file49.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file51.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str61, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        java.lang.String str18 = uRL15.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter34.deserializeObjectExplodedArchive11();
        java.io.File file36 = serializedObjectSupporter34.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
        java.util.Set<java.lang.String> strSet38 = explodedArchive37.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive37.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = null;
        explodedArchive37.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter42.deserializeObjectExplodedArchive11();
        java.io.File file44 = serializedObjectSupporter42.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file44);
        java.util.Set<java.lang.String> strSet46 = explodedArchive45.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter48.deserializeObjectExplodedArchive11();
        java.io.File file50 = serializedObjectSupporter48.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file50);
        java.io.File file52 = explodedArchive51.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive45.new FileEntry(asciiBytes47, file52);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter54 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file55 = serializedObjectSupporter54.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter54.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter54.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter54.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest59 = serializedObjectSupporter54.deserializeObjectManifest1();
        java.io.File file60 = serializedObjectSupporter54.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive37.new FileEntry(asciiBytes47, file60);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter62 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry61.serializedObjectSupporter = serializedObjectSupporter62;
        java.io.File file64 = fileEntry61.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = fileEntry61.serializedObjectSupporter;
        filteredURLStreamHandler32.serializedObjectSupporter = serializedObjectSupporter65;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter67 = filteredURLStreamHandler32.serializedObjectSupporter;
        java.net.URL uRL68 = new java.net.URL("/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "", (-1), "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str69 = uRL68.getUserInfo();
        java.lang.String str70 = uRL68.getUserInfo();
        java.lang.String str71 = uRL68.getPath();
        boolean boolean72 = uRL15.sameFile(uRL68);
        java.lang.String str73 = uRL68.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals(uRL33.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file36.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(asciiBytes47);
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file50.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNotNull(manifest59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(serializedObjectSupporter67);
        org.junit.Assert.assertEquals(uRL68.toString(), "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/:://hi!:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "://hi!:100" + "'", str71, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.io.File file6 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive25.entries = asciiBytesMap28;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter36.deserializeObjectExplodedArchive11();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file38);
        java.io.File file40 = explodedArchive39.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive33.new FileEntry(asciiBytes35, file40);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter42.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest47 = serializedObjectSupporter42.deserializeObjectManifest1();
        java.io.File file48 = serializedObjectSupporter42.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive25.new FileEntry(asciiBytes35, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry49.serializedObjectSupporter = serializedObjectSupporter50;
        java.io.File file52 = fileEntry49.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter53 = fileEntry49.serializedObjectSupporter;
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter53;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = filteredURLStreamHandler20.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file57 = serializedObjectSupporter56.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter56.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter56.deserializeObjectExplodedArchive14();
        java.io.File file60 = serializedObjectSupporter56.deserializeObjectFile9();
        java.io.File file61 = serializedObjectSupporter56.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter56.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter56;
        java.net.URL uRL64 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter65 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file66 = serializedObjectSupporter65.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = serializedObjectSupporter65.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = serializedObjectSupporter65.deserializeObjectExplodedArchive14();
        java.io.File file69 = serializedObjectSupporter65.deserializeObjectFile9();
        java.io.File file70 = serializedObjectSupporter65.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = serializedObjectSupporter65.deserializeObjectExplodedArchive5();
        filteredURLStreamHandler20.serializedObjectSupporter = serializedObjectSupporter65;
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter65;
        java.io.File file74 = serializedObjectSupporter65.deserializeObjectFile3();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals(uRL21.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(asciiBytes35);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNotNull(manifest47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter53);
        org.junit.Assert.assertNotNull(serializedObjectSupporter55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertEquals(uRL64.toString(), "file://hi!:100file");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive67);
        org.junit.Assert.assertNull(explodedArchive68);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive71);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive13();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile11();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file2.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        boolean boolean22 = fileNotFoundURLConnection17.getUseCaches();
        int int23 = fileNotFoundURLConnection17.getReadTimeout();
        int int24 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        long long24 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!:100", (long) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream25 = fileNotFoundURLConnection17.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL10.getPath();
        java.lang.String str22 = uRL10.getHost();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderFieldKey(0);
        fileNotFoundURLConnection17.setDoOutput(true);
        long long30 = fileNotFoundURLConnection17.getDate();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        long long25 = fileNotFoundURLConnection17.getLastModified();
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderFieldKey(0);
        long long28 = fileNotFoundURLConnection17.getLastModified();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = fileNotFoundURLConnection17.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        java.util.jar.Manifest manifest84 = explodedArchive83.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection85 = explodedArchive83.getEntries();
        java.util.jar.Manifest manifest86 = explodedArchive83.manifest;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest84);
        org.junit.Assert.assertNotNull(entryCollection85);
        org.junit.Assert.assertNull(manifest86);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.io.File file11 = explodedArchive10.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest13 = serializedObjectSupporter12.deserializeObjectManifest1();
        explodedArchive10.manifest = manifest13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file44 = serializedObjectSupporter43.deserializeObjectFile8();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile15();
        java.io.File file46 = serializedObjectSupporter43.deserializeObjectFile13();
        java.io.File file47 = serializedObjectSupporter43.deserializeObjectFile9();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive10.new FileEntry(asciiBytes28, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.io.File file54 = explodedArchive53.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive53.entries;
        explodedArchive10.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        boolean boolean58 = explodedArchive57.filtered;
        java.util.jar.Manifest manifest59 = explodedArchive57.getManifest();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file48.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertNull(manifest60);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        java.net.URLConnection.setDefaultRequestProperty("org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", "");
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter0.deserializeObjectExplodedArchive4();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("/://hi!:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        java.lang.String str26 = fileNotFoundURLConnection17.getHeaderField("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str28 = fileNotFoundURLConnection17.getHeaderFieldKey((int) '#');
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI13 = uRL10.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: ://hi!:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str8 = fileNotFoundURLConnection4.getRequestProperty("");
        fileNotFoundURLConnection4.setDoInput(true);
        boolean boolean11 = fileNotFoundURLConnection4.getAllowUserInteraction();
        fileNotFoundURLConnection4.setConnectTimeout(10);
        boolean boolean14 = fileNotFoundURLConnection4.getAllowUserInteraction();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.io.File file47 = explodedArchive46.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive46.entries;
        explodedArchive3.entries = asciiBytesMap48;
        java.util.jar.Manifest manifest50 = explodedArchive3.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(manifest50);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter11 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter11.deserializeObjectExplodedArchive11();
        java.io.File file13 = serializedObjectSupporter11.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file13);
        java.util.Set<java.lang.String> strSet15 = explodedArchive14.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive14.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = null;
        explodedArchive14.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter19 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = serializedObjectSupporter19.deserializeObjectExplodedArchive11();
        java.io.File file21 = serializedObjectSupporter19.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file21);
        java.util.Set<java.lang.String> strSet23 = explodedArchive22.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.io.File file29 = explodedArchive28.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive22.new FileEntry(asciiBytes24, file29);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter31 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file32 = serializedObjectSupporter31.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = serializedObjectSupporter31.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter31.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter31.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter31.deserializeObjectManifest1();
        java.io.File file37 = serializedObjectSupporter31.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive14.new FileEntry(asciiBytes24, file37);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter39 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry38.serializedObjectSupporter = serializedObjectSupporter39;
        java.io.File file41 = fileEntry38.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = fileEntry38.serializedObjectSupporter;
        filteredURLStreamHandler9.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter44 = filteredURLStreamHandler9.serializedObjectSupporter;
        java.io.File file45 = serializedObjectSupporter44.deserializeObjectFile11();
        java.io.File file46 = serializedObjectSupporter44.deserializeObjectFile12();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(explodedArchive20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(asciiBytes24);
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive33);
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        java.net.URLConnection.setDefaultRequestProperty("://hi!:100/hi!", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        java.net.URL uRL35 = new java.net.URL(uRL30, "hi!:100");
        int int36 = uRL30.getPort();
        java.lang.String str37 = uRL30.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream38 = uRL30.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals(uRL35.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 0, "/://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        java.lang.String str6 = fileNotFoundURLConnection4.getHeaderField("hi!:100");
        long long7 = fileNotFoundURLConnection4.getDate();
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap8 = fileNotFoundURLConnection4.getRequestProperties();
        boolean boolean9 = fileNotFoundURLConnection4.getUseCaches();
        // The following exception was thrown during execution in test generation
        try {
            java.io.OutputStream outputStream10 = fileNotFoundURLConnection4.getOutputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support output");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!", "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "/home/cin/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.util.Set<java.lang.String> strSet13 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive12.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = null;
        explodedArchive12.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        java.io.File file19 = serializedObjectSupporter17.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
        java.io.File file21 = explodedArchive20.getroot();
        java.lang.String str22 = explodedArchive20.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.io.File file31 = explodedArchive30.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter32.deserializeObjectManifest1();
        explodedArchive30.manifest = manifest33;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive38.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = null;
        explodedArchive38.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.util.Set<java.lang.String> strSet47 = explodedArchive46.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes48 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter49.deserializeObjectExplodedArchive11();
        java.io.File file51 = serializedObjectSupporter49.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file51);
        java.io.File file53 = explodedArchive52.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive46.new FileEntry(asciiBytes48, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file56 = serializedObjectSupporter55.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest60 = serializedObjectSupporter55.deserializeObjectManifest1();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = explodedArchive38.new FileEntry(asciiBytes48, file61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file64 = serializedObjectSupporter63.deserializeObjectFile8();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile15();
        java.io.File file66 = serializedObjectSupporter63.deserializeObjectFile13();
        java.io.File file67 = serializedObjectSupporter63.deserializeObjectFile9();
        java.io.File file68 = serializedObjectSupporter63.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive30.new FileEntry(asciiBytes48, file68);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file71 = serializedObjectSupporter70.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive26.new FileEntry(asciiBytes48, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter73.deserializeObjectExplodedArchive12();
        java.io.File file75 = serializedObjectSupporter73.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry76 = explodedArchive20.new FileEntry(asciiBytes48, file75);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive20.entries;
        explodedArchive12.entries = asciiBytesMap77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap77);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file81 = serializedObjectSupporter80.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = serializedObjectSupporter80.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter80.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter80.deserializeObjectExplodedArchive11();
        java.util.jar.Manifest manifest85 = serializedObjectSupporter80.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter80.deserializeObjectExplodedArchive3();
        explodedArchive79.serializedObjectSupporter = serializedObjectSupporter80;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter88 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = serializedObjectSupporter88.deserializeObjectExplodedArchive12();
        java.io.File file90 = serializedObjectSupporter88.deserializeObjectFile9();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive79.buildEntries(file90, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(asciiBytes48);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(manifest60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file65.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNotNull(manifest85);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNull(explodedArchive89);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file90.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        int int24 = fileNotFoundURLConnection17.getConnectTimeout();
        fileNotFoundURLConnection17.setReadTimeout((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = fileNotFoundURLConnection17.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile5();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit322166554403479484/spaces in the name");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.util.Set<java.lang.String> strSet10 = explodedArchive9.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive9.new FileEntry(asciiBytes11, file16);
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(asciiBytes11);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setUseCaches(false);
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection17.connect();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: hi!");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap20 = fileNotFoundURLConnection17.getHeaderFields();
        java.lang.String str21 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setUseCaches(true);
        long long26 = fileNotFoundURLConnection17.getHeaderFieldDate("/://hi!:100", 52L);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 52L + "'", long26 == 52L);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = serializedObjectSupporter18.deserializeObjectExplodedArchive11();
        java.io.File file20 = serializedObjectSupporter18.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
        java.util.Set<java.lang.String> strSet22 = explodedArchive21.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getPath();
        java.lang.String str26 = uRL24.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.util.Set<java.lang.String> strSet32 = explodedArchive31.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL10, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        java.net.URLStreamHandler uRLStreamHandler38 = null;
        java.net.URL uRL39 = new java.net.URL(uRL35, "hi!:100", uRLStreamHandler38);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream40 = uRL39.openStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file20.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals(uRL34.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/hi!:100");
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setDoOutput(true);
        long long7 = fileNotFoundURLConnection4.getIfModifiedSince();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive7();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter8.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter8.deserializeObjectExplodedArchive6();
        java.io.File file16 = serializedObjectSupporter8.deserializeObjectFile11();
        java.io.File file17 = serializedObjectSupporter8.deserializeObjectFile12();
        fileNotFoundURLConnection4.serializedObjectSupporter = serializedObjectSupporter8;
        fileNotFoundURLConnection4.setDefaultUseCaches(false);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file", "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100", (int) (short) 10, "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Set<java.lang.String> strSet31 = explodedArchive3.getSKIPPED_NAMES();
        explodedArchive3.filtered = true;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(strSet31);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        fileNotFoundURLConnection17.setConnectTimeout((int) (short) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter25.deserializeObjectExplodedArchive11();
        java.io.File file27 = serializedObjectSupporter25.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
        java.util.Set<java.lang.String> strSet29 = explodedArchive28.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.getPath();
        java.lang.String str33 = uRL31.getUserInfo();
        java.lang.String str34 = uRL31.getHost();
        java.net.URL uRL36 = new java.net.URL(uRL31, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL31, "hi!");
        fileNotFoundURLConnection38.setDefaultUseCaches(false);
        java.lang.String str41 = fileNotFoundURLConnection38.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file43 = serializedObjectSupporter42.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter42.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter42.deserializeObjectExplodedArchive9();
        fileNotFoundURLConnection38.serializedObjectSupporter = serializedObjectSupporter42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter42.deserializeObjectExplodedArchive6();
        boolean boolean48 = uRL20.equals((java.lang.Object) explodedArchive47);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file27.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        int int27 = fileNotFoundURLConnection17.getHeaderFieldInt("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", 1);
        long long28 = fileNotFoundURLConnection17.getExpiration();
        java.lang.String str29 = fileNotFoundURLConnection17.getContentType();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        java.util.Map<java.lang.String, java.util.List<java.lang.String>> strMap23 = fileNotFoundURLConnection17.getHeaderFields();
        int int26 = fileNotFoundURLConnection17.getHeaderFieldInt("/hi!", 0);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        fileNotFoundURLConnection17.setRequestProperty("hi!", "");
        java.net.URL uRL30 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str31 = uRL30.getProtocol();
        java.lang.Class[] classArray32 = new java.lang.Class[] {};
        java.lang.Object obj33 = uRL30.getContent(classArray32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = fileNotFoundURLConnection17.getContent(classArray32);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "file" + "'", str31, "file");
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile5();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder /tmp/junit322166554403479484/spaces in the name");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file3.toString(), "/tmp/junit322166554403479484/spaces in the name");
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        boolean boolean4 = explodedArchive3.filtered;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.net.URL uRL6 = explodedArchive3.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = explodedArchive3.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNotNull(uRL6);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive3.entries;
        java.util.jar.Manifest manifest6 = explodedArchive3.getManifest();
        java.lang.String str7 = explodedArchive3.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive3.getNestedArchives(entryFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str7, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        java.security.Permission permission21 = fileNotFoundURLConnection17.getPermission();
        fileNotFoundURLConnection17.setUseCaches(false);
        java.net.URL uRL24 = fileNotFoundURLConnection17.getURL();
        int int25 = fileNotFoundURLConnection17.getContentLength();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(permission21);
        org.junit.Assert.assertNotNull(uRL24);
        org.junit.Assert.assertEquals(uRL24.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        int int21 = fileNotFoundURLConnection17.getConnectTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream22 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL10, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.util.Set<java.lang.String> strSet30 = explodedArchive29.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL46, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL32, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL20, "file", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str59 = uRL20.getProtocol();
        java.lang.String str60 = uRL20.toString();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals(uRL20.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals(uRL32.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:100" + "'", str34, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals(uRL56.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals(uRL58.toString(), "://hi!:100/file");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "://hi!:100/hi!" + "'", str60, "://hi!:100/hi!");
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive11.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file29 = serializedObjectSupporter28.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter28.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter28.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = serializedObjectSupporter28.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter28.deserializeObjectManifest1();
        java.io.File file34 = serializedObjectSupporter28.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive11.new FileEntry(asciiBytes21, file34);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter36 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file37 = serializedObjectSupporter36.deserializeObjectFile8();
        java.io.File file38 = serializedObjectSupporter36.deserializeObjectFile15();
        java.io.File file39 = serializedObjectSupporter36.deserializeObjectFile13();
        java.io.File file40 = serializedObjectSupporter36.deserializeObjectFile9();
        java.io.File file41 = serializedObjectSupporter36.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive3.new FileEntry(asciiBytes21, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = fileEntry42.serializedObjectSupporter;
        java.io.File file44 = fileEntry42.getFile();
        boolean boolean45 = fileEntry42.isDirectory();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNull(explodedArchive32);
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file38.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file41.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file44.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL10, "");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream18 = uRL17.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100");
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file10 = serializedObjectSupporter7.deserializeObjectFile3();
        java.io.File file11 = serializedObjectSupporter7.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.lang.String str25 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.io.File file34 = explodedArchive33.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest36 = serializedObjectSupporter35.deserializeObjectManifest1();
        explodedArchive33.manifest = manifest36;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter38 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter38.deserializeObjectExplodedArchive11();
        java.io.File file40 = serializedObjectSupporter38.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file40);
        java.util.Set<java.lang.String> strSet42 = explodedArchive41.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive41.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = null;
        explodedArchive41.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter46.deserializeObjectExplodedArchive11();
        java.io.File file48 = serializedObjectSupporter46.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive49.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter52 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = serializedObjectSupporter52.deserializeObjectExplodedArchive11();
        java.io.File file54 = serializedObjectSupporter52.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file54);
        java.io.File file56 = explodedArchive55.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive49.new FileEntry(asciiBytes51, file56);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter58 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file59 = serializedObjectSupporter58.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = serializedObjectSupporter58.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = serializedObjectSupporter58.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = serializedObjectSupporter58.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest63 = serializedObjectSupporter58.deserializeObjectManifest1();
        java.io.File file64 = serializedObjectSupporter58.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive41.new FileEntry(asciiBytes51, file64);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter66 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file67 = serializedObjectSupporter66.deserializeObjectFile8();
        java.io.File file68 = serializedObjectSupporter66.deserializeObjectFile15();
        java.io.File file69 = serializedObjectSupporter66.deserializeObjectFile13();
        java.io.File file70 = serializedObjectSupporter66.deserializeObjectFile9();
        java.io.File file71 = serializedObjectSupporter66.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive33.new FileEntry(asciiBytes51, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file74 = serializedObjectSupporter73.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry75 = explodedArchive29.new FileEntry(asciiBytes51, file74);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter76 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = serializedObjectSupporter76.deserializeObjectExplodedArchive12();
        java.io.File file78 = serializedObjectSupporter76.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry79 = explodedArchive23.new FileEntry(asciiBytes51, file78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap80);
        java.io.File file84 = explodedArchive83.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str25, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file34.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest36);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file48.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(asciiBytes51);
        org.junit.Assert.assertNull(explodedArchive53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file56.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive60);
        org.junit.Assert.assertNull(explodedArchive61);
        org.junit.Assert.assertNull(explodedArchive62);
        org.junit.Assert.assertNotNull(manifest63);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file69.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file70.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file71.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive77);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file78.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file84.toString(), "src/test/resources/root");
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter7.deserializeObjectExplodedArchive11();
        java.io.File file9 = serializedObjectSupporter7.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file9);
        java.util.Set<java.lang.String> strSet11 = explodedArchive10.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = null;
        explodedArchive10.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive18.new FileEntry(asciiBytes20, file25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file28 = serializedObjectSupporter27.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter27.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter27.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter27.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest32 = serializedObjectSupporter27.deserializeObjectManifest1();
        java.io.File file33 = serializedObjectSupporter27.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive10.new FileEntry(asciiBytes20, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry34.serializedObjectSupporter = serializedObjectSupporter35;
        java.io.File file37 = fileEntry34.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes38 = fileEntry34.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry34.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter40.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = serializedObjectSupporter40.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter40.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter40.deserializeObjectExplodedArchive16();
        java.io.File file46 = serializedObjectSupporter40.deserializeObjectFile6();
        java.io.File file47 = serializedObjectSupporter40.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive3.new FileEntry(asciiBytes39, file47);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes49 = fileEntry48.name;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(asciiBytes20);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(manifest32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes38);
        org.junit.Assert.assertNotNull(asciiBytes39);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNull(explodedArchive43);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes49);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.net.URL uRL23 = fileNotFoundURLConnection17.getURL();
        boolean boolean24 = fileNotFoundURLConnection17.getDoInput();
        long long25 = fileNotFoundURLConnection17.getExpiration();
        fileNotFoundURLConnection17.setConnectTimeout((int) (byte) 0);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(uRL23);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        int int20 = fileNotFoundURLConnection17.getConnectTimeout();
        java.security.Permission permission21 = fileNotFoundURLConnection17.getPermission();
        java.lang.String str23 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream24 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(permission21);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile4();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        java.lang.String str35 = uRL26.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = uRL26.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = explodedArchive3.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = manifest6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(manifest6);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.io.File file4 = explodedArchive3.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter5.deserializeObjectManifest1();
        explodedArchive3.manifest = manifest6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.io.File file12 = explodedArchive11.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap13;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = serializedObjectSupporter43.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = serializedObjectSupporter43.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = serializedObjectSupporter43.deserializeObjectExplodedArchive7();
        java.io.File file48 = serializedObjectSupporter43.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes28, file48);
        java.util.Set<java.lang.String> strSet50 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive52 = explodedArchive3.getFilteredArchive(entryRenameFilter51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file12.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNull(explodedArchive45);
        org.junit.Assert.assertNull(explodedArchive46);
        org.junit.Assert.assertNull(explodedArchive47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.io.File file16 = explodedArchive15.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest18 = serializedObjectSupporter17.deserializeObjectManifest1();
        explodedArchive15.manifest = manifest18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.io.File file24 = explodedArchive23.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive23.entries;
        explodedArchive15.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.util.Set<java.lang.String> strSet31 = explodedArchive30.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive30.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = null;
        explodedArchive30.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = serializedObjectSupporter41.deserializeObjectExplodedArchive11();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file43);
        java.io.File file45 = explodedArchive44.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive38.new FileEntry(asciiBytes40, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = serializedObjectSupporter47.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter47.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter47.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest52 = serializedObjectSupporter47.deserializeObjectManifest1();
        java.io.File file53 = serializedObjectSupporter47.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive30.new FileEntry(asciiBytes40, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = serializedObjectSupporter55.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive7();
        java.io.File file60 = serializedObjectSupporter55.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive15.new FileEntry(asciiBytes40, file60);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive62 = explodedArchive3.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest18);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(asciiBytes40);
        org.junit.Assert.assertNull(explodedArchive42);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive49);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(manifest52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive56);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file60.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive3.getEntries();
        java.util.Set<java.lang.String> strSet5 = explodedArchive3.getSKIPPED_NAMES();
        boolean boolean6 = explodedArchive3.filtered;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter7 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file8 = serializedObjectSupporter7.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter7.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter7.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter7.deserializeObjectExplodedArchive2();
        java.io.File file13 = serializedObjectSupporter7.deserializeObjectFile6();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive3.buildEntries(file13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -20");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        java.lang.String str21 = fileNotFoundURLConnection17.toString();
        long long24 = fileNotFoundURLConnection17.getHeaderFieldLong("hi!:100", (long) (byte) 0);
        boolean boolean25 = fileNotFoundURLConnection17.getDoInput();
        int int26 = fileNotFoundURLConnection17.getReadTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100" + "'", str21, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = serializedObjectSupporter15.deserializeObjectExplodedArchive11();
        java.io.File file17 = serializedObjectSupporter15.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file17);
        java.util.Set<java.lang.String> strSet19 = explodedArchive18.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive18.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = null;
        explodedArchive18.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        java.util.Set<java.lang.String> strSet27 = explodedArchive26.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive26.new FileEntry(asciiBytes28, file33);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file36 = serializedObjectSupporter35.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter35.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter35.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = serializedObjectSupporter35.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest40 = serializedObjectSupporter35.deserializeObjectManifest1();
        java.io.File file41 = serializedObjectSupporter35.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive18.new FileEntry(asciiBytes28, file41);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry42.serializedObjectSupporter = serializedObjectSupporter43;
        java.io.File file45 = fileEntry42.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter46 = fileEntry42.serializedObjectSupporter;
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter46;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter48 = filteredURLStreamHandler13.serializedObjectSupporter;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file50 = serializedObjectSupporter49.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter49.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = serializedObjectSupporter49.deserializeObjectExplodedArchive14();
        java.io.File file53 = serializedObjectSupporter49.deserializeObjectFile9();
        java.io.File file54 = serializedObjectSupporter49.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = serializedObjectSupporter49.deserializeObjectExplodedArchive9();
        filteredURLStreamHandler13.serializedObjectSupporter = serializedObjectSupporter49;
        java.net.URL uRL57 = new java.net.URL("file", "hi!", (int) (short) 100, "file", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream58 = uRL57.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals(uRL14.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive16);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNull(explodedArchive39);
        org.junit.Assert.assertNotNull(manifest40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNull(explodedArchive52);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive55);
        org.junit.Assert.assertEquals(uRL57.toString(), "file://hi!:100file");
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter24 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = serializedObjectSupporter24.deserializeObjectExplodedArchive11();
        java.io.File file26 = serializedObjectSupporter24.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file26);
        java.util.Set<java.lang.String> strSet28 = explodedArchive27.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getPath();
        java.lang.String str32 = uRL30.toExternalForm();
        boolean boolean33 = uRL15.sameFile(uRL30);
        java.net.URL uRL35 = new java.net.URL(uRL30, "hi!:100");
        int int36 = uRL30.getPort();
        java.net.URL uRL38 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str39 = uRL38.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL38, "://hi!:100");
        fileNotFoundURLConnection41.setUseCaches(true);
        fileNotFoundURLConnection41.setIfModifiedSince((-1L));
        java.net.URL uRL46 = fileNotFoundURLConnection41.getURL();
        java.lang.Class<?> wildcardClass47 = fileNotFoundURLConnection41.getClass();
        java.lang.Class[] classArray48 = new java.lang.Class[] { wildcardClass47 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj49 = uRL30.getContent(classArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(explodedArchive25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals(uRL30.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "://hi!:100" + "'", str32, "://hi!:100");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals(uRL35.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str39, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(uRL46);
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(classArray48);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.net.URL uRL17 = new java.net.URL(uRL15, "hi!:100");
        java.lang.String str18 = uRL15.getQuery();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest37 = serializedObjectSupporter32.deserializeObjectManifest1();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive15.new FileEntry(asciiBytes25, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile15();
        java.io.File file43 = serializedObjectSupporter40.deserializeObjectFile13();
        java.io.File file44 = serializedObjectSupporter40.deserializeObjectFile9();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive7.new FileEntry(asciiBytes25, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes25, file48);
        java.util.jar.Manifest manifest50 = explodedArchive3.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive3.new FilteredURLStreamHandler();
        java.lang.Class<?> wildcardClass52 = explodedArchive3.getClass();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(manifest37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file42.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile7();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter9.deserializeObjectExplodedArchive11();
        java.io.File file11 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file11);
        java.util.Set<java.lang.String> strSet13 = explodedArchive12.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive12.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = null;
        explodedArchive12.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        java.io.File file19 = serializedObjectSupporter17.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
        java.io.File file21 = explodedArchive20.getroot();
        java.lang.String str22 = explodedArchive20.toString();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter23 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter23.deserializeObjectExplodedArchive11();
        java.io.File file25 = serializedObjectSupporter23.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.io.File file31 = explodedArchive30.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest33 = serializedObjectSupporter32.deserializeObjectManifest1();
        explodedArchive30.manifest = manifest33;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter35 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter35.deserializeObjectExplodedArchive11();
        java.io.File file37 = serializedObjectSupporter35.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file37);
        java.util.Set<java.lang.String> strSet39 = explodedArchive38.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive38.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = null;
        explodedArchive38.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter43 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = serializedObjectSupporter43.deserializeObjectExplodedArchive11();
        java.io.File file45 = serializedObjectSupporter43.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file45);
        java.util.Set<java.lang.String> strSet47 = explodedArchive46.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes48 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter49 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = serializedObjectSupporter49.deserializeObjectExplodedArchive11();
        java.io.File file51 = serializedObjectSupporter49.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file51);
        java.io.File file53 = explodedArchive52.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive46.new FileEntry(asciiBytes48, file53);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter55 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file56 = serializedObjectSupporter55.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter55.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = serializedObjectSupporter55.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = serializedObjectSupporter55.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest60 = serializedObjectSupporter55.deserializeObjectManifest1();
        java.io.File file61 = serializedObjectSupporter55.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = explodedArchive38.new FileEntry(asciiBytes48, file61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file64 = serializedObjectSupporter63.deserializeObjectFile8();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile15();
        java.io.File file66 = serializedObjectSupporter63.deserializeObjectFile13();
        java.io.File file67 = serializedObjectSupporter63.deserializeObjectFile9();
        java.io.File file68 = serializedObjectSupporter63.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive30.new FileEntry(asciiBytes48, file68);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter70 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file71 = serializedObjectSupporter70.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive26.new FileEntry(asciiBytes48, file71);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter73 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = serializedObjectSupporter73.deserializeObjectExplodedArchive12();
        java.io.File file75 = serializedObjectSupporter73.deserializeObjectFile13();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry76 = explodedArchive20.new FileEntry(asciiBytes48, file75);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive20.entries;
        explodedArchive12.entries = asciiBytesMap77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap77);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter80 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = serializedObjectSupporter80.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = serializedObjectSupporter80.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter80.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = serializedObjectSupporter80.deserializeObjectExplodedArchive7();
        java.io.File file85 = serializedObjectSupporter80.deserializeObjectFile3();
        java.io.File file86 = serializedObjectSupporter80.deserializeObjectFile1();
        java.io.File file87 = serializedObjectSupporter80.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = serializedObjectSupporter80.deserializeObjectExplodedArchive10();
        java.io.File file89 = serializedObjectSupporter80.deserializeObjectFile12();
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive79.buildEntries(file89, false);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file11.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file21.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest33);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file37.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(explodedArchive44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(asciiBytes48);
        org.junit.Assert.assertNull(explodedArchive50);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file51.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file53.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNull(explodedArchive58);
        org.junit.Assert.assertNull(explodedArchive59);
        org.junit.Assert.assertNotNull(manifest60);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file65.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file66.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file68.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive74);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertNull(explodedArchive81);
        org.junit.Assert.assertNull(explodedArchive82);
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNull(explodedArchive84);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file85.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file86.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str26 = fileNotFoundURLConnection17.getname();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str2 = uRL1.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL1, "://hi!:100");
        fileNotFoundURLConnection4.setUseCaches(true);
        java.lang.String str7 = fileNotFoundURLConnection4.name;
        java.lang.String str9 = fileNotFoundURLConnection4.getRequestProperty("");
        // The following exception was thrown during execution in test generation
        try {
            fileNotFoundURLConnection4.setConnectTimeout((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: timeout can not be negative");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str2, "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "://hi!:100" + "'", str7, "://hi!:100");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.net.URL uRL12 = new java.net.URL("file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        java.lang.String str13 = uRL12.getProtocol();
        boolean boolean14 = uRL10.sameFile(uRL12);
        java.lang.String str15 = uRL10.getHost();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file" + "'", str13, "file");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter17 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = serializedObjectSupporter17.deserializeObjectExplodedArchive11();
        java.io.File file19 = serializedObjectSupporter17.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file19);
        java.util.Set<java.lang.String> strSet21 = explodedArchive20.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getPath();
        java.lang.String str25 = uRL23.getUserInfo();
        java.lang.String str26 = uRL23.getHost();
        java.net.URL uRL28 = new java.net.URL(uRL23, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL23, "hi!");
        fileNotFoundURLConnection30.setDefaultUseCaches(false);
        java.lang.String str34 = fileNotFoundURLConnection30.getHeaderField("hi!");
        fileNotFoundURLConnection30.addRequestProperty("", "hi!");
        long long38 = fileNotFoundURLConnection30.getContentLengthLong();
        long long39 = fileNotFoundURLConnection30.getIfModifiedSince();
        boolean boolean40 = uRL10.equals((java.lang.Object) fileNotFoundURLConnection30);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(explodedArchive18);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file19.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals(uRL23.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.io.File file17 = explodedArchive16.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter18 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest19 = serializedObjectSupporter18.deserializeObjectManifest1();
        explodedArchive16.manifest = manifest19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.io.File file25 = explodedArchive24.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive24.entries;
        explodedArchive16.entries = asciiBytesMap26;
        explodedArchive3.entries = asciiBytesMap26;
        java.util.jar.Manifest manifest29 = explodedArchive3.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive3.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive4();
        explodedArchive3.serializedObjectSupporter = serializedObjectSupporter32;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file17.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest19);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file25.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(explodedArchive34);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        long long28 = fileNotFoundURLConnection17.getHeaderFieldDate("://hi!:100/hi!", (long) (byte) 1);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getRef();
        int int17 = uRL15.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = uRL15.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -84");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive9();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive7);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry27.serializedObjectSupporter = serializedObjectSupporter28;
        java.io.File file30 = fileEntry27.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = fileEntry27.getName();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = fileEntry27.serializedObjectSupporter;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry27.getName();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(asciiBytes31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(asciiBytes33);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.toExternalForm();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.util.Set<java.lang.String> strSet18 = explodedArchive17.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = null;
        explodedArchive17.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.util.Set<java.lang.String> strSet26 = explodedArchive25.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter28 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter28.deserializeObjectExplodedArchive11();
        java.io.File file30 = serializedObjectSupporter28.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file30);
        java.io.File file32 = explodedArchive31.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive25.new FileEntry(asciiBytes27, file32);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file35 = serializedObjectSupporter34.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter34.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter34.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter34.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest39 = serializedObjectSupporter34.deserializeObjectManifest1();
        java.io.File file40 = serializedObjectSupporter34.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive17.new FileEntry(asciiBytes27, file40);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter42 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry41.serializedObjectSupporter = serializedObjectSupporter42;
        java.io.File file44 = fileEntry41.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter45 = fileEntry41.serializedObjectSupporter;
        java.io.File file46 = serializedObjectSupporter45.deserializeObjectFile5();
        boolean boolean47 = uRL10.equals((java.lang.Object) serializedObjectSupporter45);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:100" + "'", str12, "hi!:100");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "://hi!:100" + "'", str13, "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(asciiBytes27);
        org.junit.Assert.assertNull(explodedArchive29);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(manifest39);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file46.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.io.File file6 = explodedArchive3.root;
        java.io.File file7 = explodedArchive3.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        boolean boolean21 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str23 = fileNotFoundURLConnection17.getHeaderField(100);
        fileNotFoundURLConnection17.setAllowUserInteraction(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter5 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter5.deserializeObjectExplodedArchive11();
        java.io.File file7 = serializedObjectSupporter5.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
        java.io.File file9 = explodedArchive8.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter10 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest11 = serializedObjectSupporter10.deserializeObjectManifest1();
        explodedArchive8.manifest = manifest11;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter13 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter13.deserializeObjectExplodedArchive11();
        java.io.File file15 = serializedObjectSupporter13.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file15);
        java.util.Set<java.lang.String> strSet17 = explodedArchive16.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive16.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = null;
        explodedArchive16.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter21.deserializeObjectExplodedArchive11();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file23);
        java.util.Set<java.lang.String> strSet25 = explodedArchive24.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter27 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = serializedObjectSupporter27.deserializeObjectExplodedArchive11();
        java.io.File file29 = serializedObjectSupporter27.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
        java.io.File file31 = explodedArchive30.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive24.new FileEntry(asciiBytes26, file31);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter33 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file34 = serializedObjectSupporter33.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter33.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter33.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = serializedObjectSupporter33.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest38 = serializedObjectSupporter33.deserializeObjectManifest1();
        java.io.File file39 = serializedObjectSupporter33.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive16.new FileEntry(asciiBytes26, file39);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter41 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file42 = serializedObjectSupporter41.deserializeObjectFile8();
        java.io.File file43 = serializedObjectSupporter41.deserializeObjectFile15();
        java.io.File file44 = serializedObjectSupporter41.deserializeObjectFile13();
        java.io.File file45 = serializedObjectSupporter41.deserializeObjectFile9();
        java.io.File file46 = serializedObjectSupporter41.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive8.new FileEntry(asciiBytes26, file46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap48);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder src/test/resources/root");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file2.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file4.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file7.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file9.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest11);
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file23.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(asciiBytes26);
        org.junit.Assert.assertNull(explodedArchive28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file29.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNull(explodedArchive37);
        org.junit.Assert.assertNotNull(manifest38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file43.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file45.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file46.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap48);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getHost();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!:100");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL15, "org.springframework.boot.loader.archive.ExplodedArchive$FileNotFoundURLConnection:://hi!:100");
        long long22 = fileNotFoundURLConnection21.getLastModified();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "://hi!:100/hi!:100");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile4();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.util.jar.Manifest manifest5 = serializedObjectSupporter0.deserializeObjectManifest1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(manifest5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        java.lang.String str51 = uRL22.getAuthority();
        java.lang.String str52 = uRL22.getProtocol();
        java.lang.String str53 = uRL22.getUserInfo();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:100" + "'", str51, "hi!:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        boolean boolean26 = fileNotFoundURLConnection17.getDoInput();
        int int27 = fileNotFoundURLConnection17.getReadTimeout();
        java.security.Permission permission28 = fileNotFoundURLConnection17.getPermission();
        fileNotFoundURLConnection17.setUseCaches(true);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(permission28);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getPath();
        java.lang.String str28 = uRL26.getUserInfo();
        java.lang.String str29 = uRL26.getHost();
        java.net.URL uRL31 = new java.net.URL(uRL26, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL26, "hi!");
        boolean boolean34 = uRL15.sameFile(uRL26);
        java.lang.String str35 = uRL26.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream36 = uRL26.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals(uRL26.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file5.toString(), "src/test/resources/root");
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setAllowUserInteraction(false);
        long long22 = fileNotFoundURLConnection17.getHeaderFieldDate("hi!:100", (long) (byte) -1);
        fileNotFoundURLConnection17.setDoOutput(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile5();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile8();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit322166554403479484");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit322166554403479484/spaces in the name");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile6();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = serializedObjectSupporter0.deserializeObjectExplodedArchive10();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file11 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive8);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF/classes/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderField("://hi!:100/hi!");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str27 = fileNotFoundURLConnection17.getHeaderField("hi!");
        long long28 = fileNotFoundURLConnection17.getContentLengthLong();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream29 = fileNotFoundURLConnection17.getInputStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownServiceException; message: protocol doesn't support input");
        } catch (java.net.UnknownServiceException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile6();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit322166554403479484/spaces in the name/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit322166554403479484/spaces in the name/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        java.lang.String str5 = explodedArchive3.toString();
        java.util.Set<java.lang.String> strSet6 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file9 = serializedObjectSupporter8.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter8.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter8.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter8.deserializeObjectFile7();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive3.new FileEntry(asciiBytes7, file13);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter15 = fileEntry14.serializedObjectSupporter;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/" + "'", str5, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(asciiBytes7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive10);
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033");
        org.junit.Assert.assertEquals(file13.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d");
        org.junit.Assert.assertNull(serializedObjectSupporter15);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter6 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter6.deserializeObjectExplodedArchive11();
        java.io.File file8 = serializedObjectSupporter6.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
        java.io.File file10 = explodedArchive9.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive3.new FileEntry(asciiBytes5, file10);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = explodedArchive3.getMANIFEST_ENTRY_NAME();
        java.util.jar.Manifest manifest13 = explodedArchive3.getManifest();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(asciiBytes5);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes12);
        org.junit.Assert.assertNull(manifest13);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile4();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile2();
        java.util.HashSet hashSet6 = serializedObjectSupporter0.deserializeObjectSet1();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(hashSet6);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        boolean boolean20 = fileNotFoundURLConnection17.getDoOutput();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter21.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter21.deserializeObjectExplodedArchive15();
        java.io.File file25 = serializedObjectSupporter21.deserializeObjectFile4();
        java.util.jar.Manifest manifest26 = serializedObjectSupporter21.deserializeObjectManifest1();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "/tmp/junit3853753617501372040/junit897402010941125298/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(manifest26);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        java.lang.String str23 = fileNotFoundURLConnection17.getContentType();
        long long24 = fileNotFoundURLConnection17.getExpiration();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter25 = fileNotFoundURLConnection17.serializedObjectSupporter;
        java.lang.String str26 = fileNotFoundURLConnection17.getContentType();
        int int27 = fileNotFoundURLConnection17.getConnectTimeout();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        java.lang.String str24 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter30 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = serializedObjectSupporter30.deserializeObjectExplodedArchive11();
        java.io.File file32 = serializedObjectSupporter30.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file32);
        java.util.Set<java.lang.String> strSet34 = explodedArchive33.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str37 = uRL36.getPath();
        java.lang.String str38 = uRL36.getUserInfo();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = serializedObjectSupporter40.deserializeObjectExplodedArchive11();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file42);
        java.util.Set<java.lang.String> strSet44 = explodedArchive43.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL36, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL22, "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        boolean boolean48 = uRL10.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL22, "");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
        java.util.Set<java.lang.String> strSet60 = explodedArchive59.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.util.Set<java.lang.String> strSet67 = explodedArchive66.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive66.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = null;
        explodedArchive66.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive11();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
        java.util.Set<java.lang.String> strSet75 = explodedArchive74.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes76 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter77 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = serializedObjectSupporter77.deserializeObjectExplodedArchive11();
        java.io.File file79 = serializedObjectSupporter77.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file79);
        java.io.File file81 = explodedArchive80.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry82 = explodedArchive74.new FileEntry(asciiBytes76, file81);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter83 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file84 = serializedObjectSupporter83.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = serializedObjectSupporter83.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = serializedObjectSupporter83.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = serializedObjectSupporter83.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest88 = serializedObjectSupporter83.deserializeObjectManifest1();
        java.io.File file89 = serializedObjectSupporter83.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry90 = explodedArchive66.new FileEntry(asciiBytes76, file89);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter91 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        fileEntry90.serializedObjectSupporter = serializedObjectSupporter91;
        java.io.File file93 = fileEntry90.getFile();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter94 = fileEntry90.serializedObjectSupporter;
        filteredURLStreamHandler61.serializedObjectSupporter = serializedObjectSupporter94;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter96 = filteredURLStreamHandler61.serializedObjectSupporter;
        java.net.URL uRL97 = new java.net.URL(uRL22, "://hi!:100", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str98 = uRL22.toExternalForm();
        int int99 = uRL22.getDefaultPort();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals(uRL22.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:100" + "'", str24, "hi!:100");
        org.junit.Assert.assertNull(explodedArchive31);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file32.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals(uRL36.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(explodedArchive41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file42.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertEquals(uRL46.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals(uRL62.toString(), "://hi!:100");
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(asciiBytes76);
        org.junit.Assert.assertNull(explodedArchive78);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file79.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file81.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive85);
        org.junit.Assert.assertNull(explodedArchive86);
        org.junit.Assert.assertNull(explodedArchive87);
        org.junit.Assert.assertNotNull(manifest88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(serializedObjectSupporter94);
        org.junit.Assert.assertNotNull(serializedObjectSupporter96);
        org.junit.Assert.assertEquals(uRL97.toString(), "://hi!:100/://hi!:100");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "://hi!:100" + "'", str98, "://hi!:100");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file3.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.io.File file8 = explodedArchive7.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest10 = serializedObjectSupporter9.deserializeObjectManifest1();
        explodedArchive7.manifest = manifest10;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter12 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = serializedObjectSupporter12.deserializeObjectExplodedArchive11();
        java.io.File file14 = serializedObjectSupporter12.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
        java.util.Set<java.lang.String> strSet16 = explodedArchive15.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive15.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = null;
        explodedArchive15.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = serializedObjectSupporter20.deserializeObjectExplodedArchive11();
        java.io.File file22 = serializedObjectSupporter20.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file22);
        java.util.Set<java.lang.String> strSet24 = explodedArchive23.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter26 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter26.deserializeObjectExplodedArchive11();
        java.io.File file28 = serializedObjectSupporter26.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
        java.io.File file30 = explodedArchive29.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive23.new FileEntry(asciiBytes25, file30);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter32 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file33 = serializedObjectSupporter32.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = serializedObjectSupporter32.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = serializedObjectSupporter32.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = serializedObjectSupporter32.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest37 = serializedObjectSupporter32.deserializeObjectManifest1();
        java.io.File file38 = serializedObjectSupporter32.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive15.new FileEntry(asciiBytes25, file38);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter40 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file41 = serializedObjectSupporter40.deserializeObjectFile8();
        java.io.File file42 = serializedObjectSupporter40.deserializeObjectFile15();
        java.io.File file43 = serializedObjectSupporter40.deserializeObjectFile13();
        java.io.File file44 = serializedObjectSupporter40.deserializeObjectFile9();
        java.io.File file45 = serializedObjectSupporter40.deserializeObjectFile15();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive7.new FileEntry(asciiBytes25, file45);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter47 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file48 = serializedObjectSupporter47.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive3.new FileEntry(asciiBytes25, file48);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter50 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = serializedObjectSupporter50.deserializeObjectExplodedArchive11();
        java.io.File file52 = serializedObjectSupporter50.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file52);
        java.util.Set<java.lang.String> strSet54 = explodedArchive53.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes55 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter56 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = serializedObjectSupporter56.deserializeObjectExplodedArchive11();
        java.io.File file58 = serializedObjectSupporter56.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file58);
        java.io.File file60 = explodedArchive59.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive53.new FileEntry(asciiBytes55, file60);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes62 = explodedArchive53.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter63 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = serializedObjectSupporter63.deserializeObjectExplodedArchive11();
        java.io.File file65 = serializedObjectSupporter63.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
        java.io.File file67 = explodedArchive66.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter68 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest69 = serializedObjectSupporter68.deserializeObjectManifest1();
        explodedArchive66.manifest = manifest69;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter71 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = serializedObjectSupporter71.deserializeObjectExplodedArchive11();
        java.io.File file73 = serializedObjectSupporter71.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
        java.io.File file75 = explodedArchive74.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive74.entries;
        explodedArchive66.entries = asciiBytesMap76;
        explodedArchive53.entries = asciiBytesMap76;
        java.util.jar.Manifest manifest79 = explodedArchive53.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive53.entries;
        java.util.jar.Manifest manifest81 = explodedArchive53.getManifest();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter82 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = serializedObjectSupporter82.deserializeObjectExplodedArchive11();
        java.io.File file84 = serializedObjectSupporter82.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file84);
        java.io.File file86 = explodedArchive85.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter87 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest88 = serializedObjectSupporter87.deserializeObjectManifest1();
        explodedArchive85.manifest = manifest88;
        explodedArchive53.manifest = manifest88;
        java.util.Set<java.lang.String> strSet91 = explodedArchive53.getSKIPPED_NAMES();
        java.util.jar.Manifest manifest92 = explodedArchive53.manifest;
        explodedArchive3.manifest = manifest92;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest10);
        org.junit.Assert.assertNull(explodedArchive13);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file14.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(explodedArchive21);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file22.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(asciiBytes25);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file28.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file30.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive34);
        org.junit.Assert.assertNull(explodedArchive35);
        org.junit.Assert.assertNull(explodedArchive36);
        org.junit.Assert.assertNotNull(manifest37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file42.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file43.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file44.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file45.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive51);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file52.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(asciiBytes55);
        org.junit.Assert.assertNull(explodedArchive57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file58.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file60.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes62);
        org.junit.Assert.assertNull(explodedArchive64);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file65.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file67.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest69);
        org.junit.Assert.assertNull(explodedArchive72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file73.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file75.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest81);
        org.junit.Assert.assertNull(explodedArchive83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file84.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file86.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest88);
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertNotNull(manifest92);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile15();
        java.io.File file3 = serializedObjectSupporter0.deserializeObjectFile13();
        java.io.File file4 = serializedObjectSupporter0.deserializeObjectFile9();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile15();
        java.util.jar.Manifest manifest6 = serializedObjectSupporter0.deserializeObjectManifest1();
        java.util.HashSet hashSet7 = serializedObjectSupporter0.deserializeObjectSet1();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile10();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file2.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file3.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file4.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file5.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(manifest6);
        org.junit.Assert.assertNotNull(hashSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive9);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        fileNotFoundURLConnection17.setRequestProperty("hi!", "://hi!:100");
        long long28 = fileNotFoundURLConnection17.getHeaderFieldDate("file", (long) (-1));
        java.lang.String str29 = fileNotFoundURLConnection17.getContentType();
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive12();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive6();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile11();
        java.io.File file9 = serializedObjectSupporter0.deserializeObjectFile15();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file9.toString(), "target/exploded-war/WEB-INF/classes");
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("://hi!:100/hi!", "file", (int) '4', "://hi!:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ://hi!:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str20 = fileNotFoundURLConnection17.getContentType();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter21 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file22 = serializedObjectSupporter21.deserializeObjectFile8();
        java.io.File file23 = serializedObjectSupporter21.deserializeObjectFile15();
        java.io.File file24 = serializedObjectSupporter21.deserializeObjectFile13();
        fileNotFoundURLConnection17.serializedObjectSupporter = serializedObjectSupporter21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = serializedObjectSupporter21.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = serializedObjectSupporter21.deserializeObjectExplodedArchive12();
        java.io.File file28 = serializedObjectSupporter21.deserializeObjectFile3();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = serializedObjectSupporter21.deserializeObjectExplodedArchive8();
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "target/exploded-war/WEB-INF");
        org.junit.Assert.assertEquals(file23.toString(), "target/exploded-war/WEB-INF/classes");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars");
        org.junit.Assert.assertNull(explodedArchive26);
        org.junit.Assert.assertNull(explodedArchive27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file28.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNull(explodedArchive29);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        int int22 = fileNotFoundURLConnection17.getContentLength();
        long long23 = fileNotFoundURLConnection17.getDate();
        boolean boolean24 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str26 = fileNotFoundURLConnection17.getHeaderField((int) '4');
        fileNotFoundURLConnection17.setRequestProperty("hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/", "hi!:100://[hi!:100]:0file:/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes/");
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive5();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive7();
        java.io.File file5 = serializedObjectSupporter0.deserializeObjectFile3();
        java.io.File file6 = serializedObjectSupporter0.deserializeObjectFile1();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = serializedObjectSupporter0.deserializeObjectExplodedArchive3();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile2();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "/tmp/junit3853753617501372040");
        org.junit.Assert.assertEquals(file5.toString(), "/tmp/junit3853753617501372040/junit897402010941125298");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "src/test/resources");
        org.junit.Assert.assertEquals(file6.toString(), "src/test/resources/root");
        org.junit.Assert.assertNull(explodedArchive7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "src/test/resources/root/META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "src/test/resources/root/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive3.entries = asciiBytesMap6;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter8 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = serializedObjectSupporter8.deserializeObjectExplodedArchive11();
        java.io.File file10 = serializedObjectSupporter8.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
        java.util.Set<java.lang.String> strSet12 = explodedArchive11.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter14 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = serializedObjectSupporter14.deserializeObjectExplodedArchive11();
        java.io.File file16 = serializedObjectSupporter14.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file16);
        java.io.File file18 = explodedArchive17.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry(asciiBytes13, file18);
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter20 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file21 = serializedObjectSupporter20.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = serializedObjectSupporter20.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter20.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = serializedObjectSupporter20.deserializeObjectExplodedArchive2();
        java.util.jar.Manifest manifest25 = serializedObjectSupporter20.deserializeObjectManifest1();
        java.io.File file26 = serializedObjectSupporter20.deserializeObjectFile14();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive3.new FileEntry(asciiBytes13, file26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive3.entries;
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(explodedArchive9);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file10.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(asciiBytes13);
        org.junit.Assert.assertNull(explodedArchive15);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file16.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive22);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNull(explodedArchive24);
        org.junit.Assert.assertNotNull(manifest25);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(asciiBytesMap28);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/hi!:100", "://hi!:100", 0, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.getUserInfo();
        java.lang.String str13 = uRL10.getHost();
        java.net.URL uRL15 = new java.net.URL(uRL10, "hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        fileNotFoundURLConnection17.setDefaultUseCaches(false);
        java.lang.String str21 = fileNotFoundURLConnection17.getHeaderField("hi!");
        boolean boolean22 = fileNotFoundURLConnection17.getAllowUserInteraction();
        java.lang.String str24 = fileNotFoundURLConnection17.getHeaderFieldKey((int) (short) 10);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "://hi!:100/hi!");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = serializedObjectSupporter0.deserializeObjectExplodedArchive11();
        java.io.File file2 = serializedObjectSupporter0.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive(file2);
        java.util.Set<java.lang.String> strSet4 = explodedArchive3.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive3.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive3.new FilteredURLStreamHandler();
        java.util.Set<java.lang.String> strSet7 = explodedArchive3.getSKIPPED_NAMES();
        java.io.File file8 = explodedArchive3.getroot();
        org.junit.Assert.assertNull(explodedArchive1);
        org.junit.Assert.assertNotNull(file2);
        org.junit.Assert.assertEquals(file2.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file2.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter4 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter4.deserializeObjectExplodedArchive11();
        java.io.File file6 = serializedObjectSupporter4.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive(file6);
        java.util.Set<java.lang.String> strSet8 = explodedArchive7.getSKIPPED_NAMES();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive7.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("", "hi!", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        java.lang.String str12 = uRL10.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection fileNotFoundURLConnection14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileNotFoundURLConnection(uRL10, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = uRL10.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -88");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file6.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals(uRL10.toString(), "://hi!:100");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter0 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file1 = serializedObjectSupporter0.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = serializedObjectSupporter0.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = serializedObjectSupporter0.deserializeObjectExplodedArchive14();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = serializedObjectSupporter0.deserializeObjectExplodedArchive2();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = serializedObjectSupporter0.deserializeObjectExplodedArchive16();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = serializedObjectSupporter0.deserializeObjectExplodedArchive8();
        java.io.File file7 = serializedObjectSupporter0.deserializeObjectFile8();
        java.io.File file8 = serializedObjectSupporter0.deserializeObjectFile11();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter9 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.io.File file10 = serializedObjectSupporter9.deserializeObjectFile8();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = serializedObjectSupporter9.deserializeObjectExplodedArchive15();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = serializedObjectSupporter9.deserializeObjectExplodedArchive14();
        java.io.File file13 = serializedObjectSupporter9.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = serializedObjectSupporter9.deserializeObjectExplodedArchive7();
        java.io.File file15 = serializedObjectSupporter9.deserializeObjectFile14();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter16 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = serializedObjectSupporter16.deserializeObjectExplodedArchive11();
        java.io.File file18 = serializedObjectSupporter16.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file18);
        java.util.Set<java.lang.String> strSet20 = explodedArchive19.getSKIPPED_NAMES();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = org.springframework.boot.loader.archive.ExplodedArchive.MANIFEST_ENTRY_NAME;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter22 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = serializedObjectSupporter22.deserializeObjectExplodedArchive11();
        java.io.File file24 = serializedObjectSupporter22.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
        java.io.File file26 = explodedArchive25.getroot();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry(asciiBytes21, file26);
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = explodedArchive19.getMANIFEST_ENTRY_NAME();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter29 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = serializedObjectSupporter29.deserializeObjectExplodedArchive11();
        java.io.File file31 = serializedObjectSupporter29.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
        java.io.File file33 = explodedArchive32.getroot();
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter34 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        java.util.jar.Manifest manifest35 = serializedObjectSupporter34.deserializeObjectManifest1();
        explodedArchive32.manifest = manifest35;
        org.springframework.boot.loader.archive.SerializedObjectSupporter serializedObjectSupporter37 = new org.springframework.boot.loader.archive.SerializedObjectSupporter();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = serializedObjectSupporter37.deserializeObjectExplodedArchive11();
        java.io.File file39 = serializedObjectSupporter37.deserializeObjectFile9();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file39);
        java.io.File file41 = explodedArchive40.getroot();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive40.entries;
        explodedArchive32.entries = asciiBytesMap42;
        explodedArchive19.entries = asciiBytesMap42;
        java.util.jar.Manifest manifest45 = explodedArchive19.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive19.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap47);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap47);
        org.junit.Assert.assertNotNull(file1);
        org.junit.Assert.assertEquals(file1.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file1.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive2);
        org.junit.Assert.assertNull(explodedArchive3);
        org.junit.Assert.assertNull(explodedArchive4);
        org.junit.Assert.assertNull(explodedArchive5);
        org.junit.Assert.assertNull(explodedArchive6);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources");
        org.junit.Assert.assertEquals(file8.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/jars");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "/tmp/junit1069761328127692012/junit891059030562649033/d/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive11);
        org.junit.Assert.assertNull(explodedArchive12);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file13.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNull(explodedArchive14);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/src/test/resources/nested-jars/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(explodedArchive17);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file18.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(asciiBytes21);
        org.junit.Assert.assertNull(explodedArchive23);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file24.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file26.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytes28);
        org.junit.Assert.assertNull(explodedArchive30);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file31.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file33.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(manifest35);
        org.junit.Assert.assertNull(explodedArchive38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file39.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target");
        org.junit.Assert.assertEquals(file41.toString(), "/home/CIN/jaam/projects/spring-boot/spring-boot-tools/spring-boot-loader/target/classes");
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
    }
}
